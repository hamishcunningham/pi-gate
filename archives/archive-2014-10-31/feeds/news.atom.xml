<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Pi GATE â€” Sheffield Pi-Tronics</title><link href="http://pi.gate.ac.uk/" rel="alternate"></link><link href="https://pi.gate.ac.uk/feeds/news.atom.xml" rel="self"></link><id>http://pi.gate.ac.uk/</id><updated>2014-09-16T00:00:00+01:00</updated><entry><title>Sheffield Schools Raspberry Pi Bank Launch</title><link href="http://pi.gate.ac.uk/posts/2014/09/16/pi-bank/" rel="alternate"></link><updated>2014-09-16T00:00:00+01:00</updated><author><name>Hamish Cunningham</name></author><id>tag:pi.gate.ac.uk,2014-09-16:posts/2014/09/16/pi-bank/</id><summary type="html">

&lt;p&gt;This Friday sees the launch of our Pi Bank: a set of 20 kits containing Pi
rigs that are now available for short-term loan to Sheffield schools and
others:&lt;/p&gt;

&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/pi-bank/img-20140916-124059.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/pi-bank/img-20140916-124059-500x667.jpg" alt="Kit Pile" width="500" height="667"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Each kit has a Pi, power supplies (inc. &lt;a class="cow-url" href="/pages/mopi.html"&gt;for batteries&lt;/a&gt;
etc.), screen adapters (VGA and DVI) and GPIO cabling:&lt;/p&gt;

&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/pi-bank/img-20140916-122800.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/pi-bank/img-20140916-122800-500x398.jpg" alt="A Pi Kit" width="500" height="398"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In addition there are 10 Pi cameras, 10 audio cards and 10 simple robot kits.&lt;/p&gt;

&lt;p&gt;Funding has been provided by the University's outreach programme and by
Pimoroni:&lt;/p&gt;

&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/pi-bank/img-20140916-122817.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/pi-bank/img-20140916-122817-500x375.jpg" alt="Kit Label" width="500" height="375"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;James Wallbank of &lt;a class="cow-url" href="http://access-space.org/"&gt;Access Space&lt;/a&gt; and Brian dropped
in to see the new kits and talk about James' and John Moseley's geodesics and
3D scanning exhibits for the &lt;a class="cow-url" href="/pages/festival.html"&gt;Resilient Cultures&lt;/a&gt; event
at the &lt;a class="cow-url" href="http://festivalofthemind.group.shef.ac.uk/"&gt;Festival of the Mind&lt;/a&gt;
this Friday and Saturday:&lt;/p&gt;

&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/pi-bank/img-20140916-125300.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/pi-bank/img-20140916-125300-500x667.jpg" alt="James and Brian" width="500" height="667"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And I learned how to do timer selfies with my new &lt;a class="cow-url" href="http://www.fairphone.com/"&gt;FairPhone&lt;/a&gt; :-)&lt;/p&gt;

&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/pi-bank/img-20140916-124006.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/pi-bank/img-20140916-124006-500x667.jpg" alt="Hamish With Kits" width="500" height="667"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Come and join us on Saturday 20th September (10.30am to 2pm) at
&lt;a class="cow-url" href="https://www.sheffield.ac.uk/ssid/maps/firth"&gt;Firth Hall&lt;/a&gt;.&lt;/p&gt;



&lt;p&gt;&lt;b&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/festival.html"&gt;Read the main article&lt;/a&gt;.&lt;/b&gt;&lt;/p&gt;
</summary><category term="schools"></category><category term="education"></category><category term="pi"></category><category term="raspberrypi"></category><category term="gate"></category><category term="pi bank"></category><category term="mopi"></category></entry><entry><title>Open Tech for Resilience</title><link href="http://pi.gate.ac.uk/posts/2014/09/16/resilient-cultures/" rel="alternate"></link><updated>2014-09-16T00:00:00+01:00</updated><author><name>Hamish Cunningham</name></author><id>tag:pi.gate.ac.uk,2014-09-16:posts/2014/09/16/resilient-cultures/</id><summary type="html">
&lt;h1 class="cow-heading"&gt;Festival of the Mind 2014&lt;/h1&gt;

&lt;p&gt;&lt;b&gt;Resilience&lt;/b&gt; is ability to bounce back from stresses, strains and shocks.
&lt;em&gt;Resilient Cultures&lt;/em&gt; is a two-day event at the
&lt;a class="cow-url" href="http://festivalofthemind.group.shef.ac.uk/"&gt;Festival of the Mind 2014&lt;/a&gt;
about how &lt;em&gt;open source software&lt;/em&gt;, &lt;em&gt;open data&lt;/em&gt; and
&lt;em&gt;open hardware&lt;/em&gt; can help build social resilience.&lt;/p&gt;


&lt;!--%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%--&gt;
&lt;h1 class="cow-heading"&gt;Programme&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Friday 19th September 9.30 &amp;mdash; 2.30: &lt;b&gt;schools only&lt;/b&gt;
  (&lt;a class="cow-url" href="https://www.sheffield.ac.uk/ssid/maps/firth"&gt;Firth Hall&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Friday 19th 8pm &amp;mdash; midnight:
  &lt;a class="cow-url" href="https://www.facebook.com/events/636695496443567/"&gt;Resilient Cultures gig&lt;/a&gt;
  at Audacious Art Space&lt;/li&gt;
&lt;li&gt;Saturday 20th September 10 &amp;mdash; 4: &lt;b&gt;open to all&lt;/b&gt; (Firth Hall)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The Exhibits:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Build a &lt;b&gt;Raspberry Pi Weather Station&lt;/b&gt; (Jo Bates, Information Studies): have
  a go at building your own Raspberry Pi weather station and sharing the data
  that you generate directly with the Met Office's  &lt;a class="cow-url" href="http://wow.metoffice.gov.uk"&gt;Weather Observations Website&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Open Wearable Electronics&lt;/b&gt; (Charlotte Godley): Learn how to put together a
  simple, customisable flashing circuit using boards you can put into your
  clothing! See how this can then be customised to your own colours and style
  and inspiration of what projects this could be put into.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Bio-Microscopy&lt;/b&gt; (Ashley Cadby, Physics): gain a whole new perspective on
  microbes and their habits with this exhibit of high-power microscopes
  operating at variable focal lengths to expose the secret life of bacteria.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Chaos and Structure&lt;/b&gt;, Maths and Code (Sam Dolan, Maths) will explore
  &lt;em&gt;deterministic chaos&lt;/em&gt; where simple algorithms often lead to unexpected and
  beautiful structures like fractals.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Sheffield's Raspberry Pi Factory&lt;/b&gt; (Gee Bartlett from Pimoroni) will
  showcase simple robotics and games from Sheffield's own Pi company.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Everyday Growing Cultures&lt;/b&gt; (Farida Vis, Information Studies) explores the
  potential of digital engagement and open data for allotment holders and
  those interested in cultivating currently unused plots of council-owned
  land, in order to build stronger, more active communities, benefit local
  economies and improve environmental sustainability and food security. &lt;/li&gt;
&lt;li&gt;The &lt;b&gt;PiBrush&lt;/b&gt; (Fred Sonnenwald, Hamish Cunningham) is an interactive art and
  technology exhibit that simulates flicking paint off the end of a paintbrush
  onto canvas &amp;mdash; as Jackson Pollock famously did in the 1940s and 50s. It uses
  two Raspberry Pis and an accelerometer.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;&lt;a class="cow-url" href="http://roboplant.wordpress.com/"&gt;RoboPlant&lt;/a&gt;&lt;/b&gt; (Colin Osborne, Plant
  Biology / Alastair Buckley, Physics) is a human-sized robot mimicking the
  replicable stages of photosynthesis in plants. Photovoltaic panels absorb
  light and convert it into electricity. This powers an electrolyser which
  splits water into hydrogen and oxygen.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Game Technology Against Cancer&lt;/b&gt; (Cassie Limb). Come and play with the cells
  that keep you standing, explore their environment in an inflatable bone
  sculpture, connect with the smallest cells that support your every step and
  play the latest in cancer busting open source games!&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Laser-Cut Geodesics&lt;/b&gt; (James Wallbank, Access Space) will showcase geodesic
  dome and hexayurt models built from laser-cut panels for &lt;em&gt;resilient modular
  architecture&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;3D Scanning&lt;/b&gt; (John Moseley, Access Space): 3D printers herald new
  possibilities in micro-manufacturing &amp;mdash; but how do we create the designs
  that they print? This exhibit will showcase 3D scanning, taking 3D objects
  and turning them into computational models.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Open Source Music&lt;/b&gt; (Mark Hadman): hand-coded digital and hand-soldered
  analogue sound machines used for live ambient/drone performance by Mark
  Hadman (aka Spandril).&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Numbers to Grooves&lt;/b&gt; (Dominic Moore). Turn yourself into an 8 bit analogue
  computer via the miracles of tapping, bashing and bumping. Dominic's
  workshop will build live rhythm machines from its participants. Digital
  music technology works on &lt;em&gt;encodings&lt;/em&gt; &amp;mdash; as does musical notation &amp;mdash; but
  here the encoding is you and the computer is the group. This is how music
  originated &amp;mdash; and it was all 100% &lt;em&gt;open source&lt;/em&gt; up until a few hundred years
  ago! Music is almost certainly older than language itself &amp;mdash; so we're all
  music experts! Specialist musicians and musicologists have a specialised
  nomenclature and notation for representing tunes and rhythms, but Dominic
  will remind us that the digital is always only an approximation of sound and
  that we all know how to make music already &amp;mdash; and we're the real thing!&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Big Data and Gut Bacteria&lt;/b&gt; (Keith Harris, Maths). Big Data is a buzzterm
  for the collection of data sets so complex that they become extremely
  difficult to store and analyse using traditional techniques. The belief is
  that Big Data will allow correlations to be found that will enable us to
  spot business trends, prevent disease outbreaks, combat crime, etc., but big
  data may be unrepresentative leading to biased results and the 'discovery'
  of relationships from chance correlations.  Can the graphical visualisation
  of multidimensional data help?&lt;/li&gt;
&lt;/ul&gt;
 
&lt;!--% Rhythm and Number (Dominic Moore): programming rhythms using number--&gt;

&lt;!--% selection -- open algorithms for music creation.--&gt;


&lt;!--% Plus Bo and Anna's performance ...--&gt;


&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/fotm-charlotte-wearables.png"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/fotm-charlotte-wearables-500x707.png" alt="Open Source Wearables" width="500" height="707.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/fotm-gtac.png"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/fotm-gtac-500x707.png" alt="GTAC" width="500" height="707.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/fotm-sam-chaos.png"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/fotm-sam-chaos-500x707.png" alt="Predictable Chaos" width="500" height="707.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/rescult-3.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/rescult-3-500x500.jpg" alt="Resilient Cultures" width="500" height="500"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/growing-futures.png"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/growing-futures-500x273.png" alt="Everyday Growing Futures" width="500" height="273.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/jo-weather-station.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/jo-weather-station-500x255.jpg" alt="Pi Weather Station" width="500" height="255"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/pi-brush-snap.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/pi-brush-snap-500x284.jpg" alt="The PiBrush" width="500" height="284"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Want to play? Join us on Saturday 20th September (10.30am to 2pm) at
&lt;a class="cow-url" href="https://www.sheffield.ac.uk/ssid/maps/firth"&gt;Firth Hall&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;hr&gt;
&lt;a class="cow-url" href="http://hamish.gate.ac.uk/"&gt;Hamish Cunningham&lt;/a&gt;,
&lt;a class="cow-url" href="https://www.sheffield.ac.uk/is/staff/bates"&gt;Jo Bates&lt;/a&gt;,
&lt;a class="cow-url" href="http://92.27.63.80/"&gt;Bo Meson&lt;/a&gt;.&lt;/p&gt;


</summary><category term="resilience"></category><category term="sustainability"></category><category term="open source"></category><category term="open data"></category><category term="open hardware"></category><category term=""></category></entry><entry><title>Solar MoPi</title><link href="http://pi.gate.ac.uk/posts/2014/08/03/solar-mopi/" rel="alternate"></link><updated>2014-08-03T00:00:00+01:00</updated><author><name>Fred Sonnenwald</name></author><id>tag:pi.gate.ac.uk,2014-08-03:posts/2014/08/03/solar-mopi/</id><summary type="html">

&lt;p&gt;In some of the sunny days we've had this summer, we've managed to try out
hooking up Solar Panels as one of the power inputs to MoPi. The results are
pretty good. A fairly decent panel setup can power even the Model B
completely. In lower light levels or with less powerful panels, they can help
increase battery life. We managed up to 19 hours with a Model B and 8 AAs by
shutting down overnight:&lt;/p&gt;

&lt;p&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/mopi/graphs/solar/mopisolar.2.png"&gt;&lt;/p&gt;

&lt;p&gt;That's pretty good. Those spikes are when the panels overpower the batteries
completely. The next step is to work out how to charge in those conditions.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/mopi.html#solar"&gt;Read more in the main article!&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;



</summary><category term="kickstarter"></category><category term="batteries"></category><category term="solar"></category><category term="mo-pi"></category><category term="pi-tronics"></category><category term="pi"></category><category term="raspberrypi"></category><category term="gate"></category><category term="batteries"></category></entry><entry><title>MoPi Running the Pi Model B+</title><link href="http://pi.gate.ac.uk/posts/2014/08/02/b-plus-again/" rel="alternate"></link><updated>2014-08-02T00:00:00+01:00</updated><author><name>Hamish Cunningham</name></author><id>tag:pi.gate.ac.uk,2014-08-02:posts/2014/08/02/b-plus-again/</id><summary type="html">

&lt;p&gt;I'm writing this post on a 
&lt;a class="cow-url" href="http://www.raspberrypi.org/introducing-raspberry-pi-model-b-plus/"&gt;Model B
Plus Pi&lt;/a&gt; :-)&lt;/p&gt;

&lt;p&gt;And the good news is that there's no issue with the new CPU position on the
B+. MoPi's connection terminals actually sit on C1 (a large capacitor near the
CPU), and not on the CPU itself. You can see this here:&lt;/p&gt;

&lt;!--% YOUTUBE BPLUS CLIP HERE--&gt;


&lt;p&gt;So we're good to go &amp;mdash; initial indications are that the B+ is an even better
platform for mobile power (and &lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/mopi.html"&gt;MoPi&lt;/a&gt;) than the Model B...&lt;/p&gt;

&lt;p&gt;&lt;b&gt;PS&lt;/b&gt; if you fire up a B+ and discover that your USB keyboard doesn't work,
note that you need the most recent operating systems. One easy way to get one
is to download a &lt;a class="cow-url" href="http://www.raspberrypi.org/downloads/"&gt;new copy of NOOBS&lt;/a&gt;
and unzip it onto a micro-SD card.&lt;/p&gt;


&lt;p&gt;&lt;b&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/mopi.html"&gt;Read the main article&lt;/a&gt;.&lt;/b&gt;&lt;/p&gt;
</summary><category term="kickstarter"></category><category term="batteries"></category><category term="mo-pi"></category><category term="pi-tronics"></category><category term="pi"></category><category term="raspberrypi"></category><category term="gate"></category></entry><entry><title>AA battery life with the Model A and Model B</title><link href="http://pi.gate.ac.uk/posts/2014/07/27/battery-life/" rel="alternate"></link><updated>2014-07-27T00:00:00+01:00</updated><author><name>Fred Sonnenwald</name></author><id>tag:pi.gate.ac.uk,2014-07-27:posts/2014/07/27/battery-life/</id><summary type="html">

&lt;p&gt;We've conducted some tests to help people get a feel for how long AA batteries
should power a Rasberry Pi in a variety of configurations when using MoPi. We
don't have results from &lt;a class="cow-non-existant-url" href="/posts/2014/07/15/model-b-plus/"&gt;the B+ yet&lt;/a&gt;, but
that's coming soon...&lt;/p&gt;

&lt;p&gt;For now though, the best case scenario? &lt;b&gt;50 hours&lt;/b&gt; using the Model A with 16
AAs!&lt;/p&gt;

&lt;p&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/mopi/graphs/mopia2.16fresh.png"&gt;&lt;/p&gt;

&lt;p&gt;That's best case, of course, with the Pi not doing anything much, but it does
illustrate the potential.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/mopi.html#detailed-testing"&gt;Read more in the main article!&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;



</summary><category term="kickstarter"></category><category term="batteries"></category><category term="mo-pi"></category><category term="pi-tronics"></category><category term="pi"></category><category term="raspberrypi"></category><category term="gate"></category><category term="batteries"></category></entry><entry><title>MoPi and the Model B+ Pi</title><link href="http://pi.gate.ac.uk/posts/2014/07/15/model-b-plus/" rel="alternate"></link><updated>2014-07-15T00:00:00+01:00</updated><author><name>Hamish Cunningham</name></author><id>tag:pi.gate.ac.uk,2014-07-15:posts/2014/07/15/model-b-plus/</id><summary type="html">

&lt;p&gt;Let's cut a long story short: MoPi should work fine with the
&lt;a class="cow-url" href="http://www.raspberrypi.org/introducing-raspberry-pi-model-b-plus/"&gt;Model B
Plus Pi&lt;/a&gt; announced yesterday.&lt;/p&gt;

&lt;p&gt;The Model B+ is an evolution on the original Model B; it looks like this:&lt;/p&gt;

&lt;p&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/model-b-plus-500x337.jpg" alt="Model B+ Pi" width="500" height="337"&gt;&lt;/p&gt;

&lt;p&gt;From a mobile power point of view the B+ will perform a bit better than the B
&amp;mdash; they're replaced the rather wasteful LDO regulator of the original with a
switched-mode supply, and with the revamp and extension of the USB subsystem
they've also improved power handling there.&lt;/p&gt;

&lt;!--
There's one caveat to using the B+ with MoPi, which is that left to its own
devices the battery terminal connector will rest on the CPU, which has been
repositionned. That will bring a risk of heat damage to the connector (and
possibly overheating of the CPU), so a small collar or shim will need to be
used to raise MoPi by a couple of millimeters.
--&gt;

&lt;p&gt;I've a couple of Model B+ boards and will post some pics in a few days...&lt;/p&gt;

&lt;p&gt;So don't be afraid to pick up a Model B+ if you fancy one! It looks like a
great addition to the Pi stable.&lt;/p&gt;


&lt;p&gt;&lt;b&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/mopi.html"&gt;Read the main article&lt;/a&gt;.&lt;/b&gt;&lt;/p&gt;
</summary><category term="kickstarter"></category><category term="batteries"></category><category term="mo-pi"></category><category term="pi-tronics"></category><category term="pi"></category><category term="raspberrypi"></category><category term="gate"></category></entry><entry><title>Fitting a Remote Power Switch to MoPi</title><link href="http://pi.gate.ac.uk/posts/2014/07/10/mopi-remote-switch/" rel="alternate"></link><updated>2014-07-10T00:00:00+01:00</updated><author><name>Hamish Cunningham</name></author><id>tag:pi.gate.ac.uk,2014-07-10:posts/2014/07/10/mopi-remote-switch/</id><summary type="html">

&lt;p&gt;Daniel T, one of our Kickstarter backers for &lt;a class="cow-url" href="/pages/mopi.html"&gt;MoPi&lt;/a&gt;, wanted
to fit a remote power switch to his board. (It has one fitted, but if you're
building something with a case and need the switch to be somewhere away from
the Pi and/or MoPi then there are a couple of remoting pads on MoPi for the
purpose.) Here's the result:&lt;/p&gt;

&lt;!--% YOUTUBE REMOTE SWITCH CLIP HERE--&gt;


&lt;p&gt;Daniel hasn't got the soldering bug yet :-) so I fitted one for him, and here
are the pics...&lt;/p&gt;

&lt;p&gt;It is an easy job &amp;mdash; just wire up an SPST push-to-make switch to the two pads
next to the power switch:&lt;/p&gt;

&lt;!--% %(images/mopi/remote-switch/remote-switch-1.jpg,--&gt;

&lt;!--% %image(images/mopi/remote-switch/remote-switch-1-500x375.jpg, MoPi remote switch, 500, 375))--&gt;


&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/mopi/remote-switch/remote-switch-3.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/mopi/remote-switch/remote-switch-3-500x375.jpg" alt="MoPi remote switch" width="500" height="375"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And voila:&lt;/p&gt;

&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/mopi/remote-switch/remote-switch-2.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/mopi/remote-switch/remote-switch-2-500x375.jpg" alt="MoPi remote switch" width="500" height="375"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For my next trick, I will turn a pumpkin into a penguin. Watch this space.&lt;/p&gt;


&lt;p&gt;&lt;b&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/mopi.html"&gt;Read the main article&lt;/a&gt;.&lt;/b&gt;&lt;/p&gt;
</summary><category term="kickstarter"></category><category term="batteries"></category><category term="mo-pi"></category><category term="pi-tronics"></category><category term="pi"></category><category term="raspberrypi"></category><category term="gate"></category></entry><entry><title>Custom PiBow Lid for MoPi</title><link href="http://pi.gate.ac.uk/posts/2014/06/03/custom-pibow-lid/" rel="alternate"></link><updated>2014-06-03T00:00:00+01:00</updated><author><name>Hamish Cunningham</name></author><id>tag:pi.gate.ac.uk,2014-06-03:posts/2014/06/03/custom-pibow-lid/</id><summary type="html">

&lt;p&gt;Thanks to Paul and Connor at &lt;a class="cow-url" href="http://pimoroni.com/"&gt;Pimoroni&lt;/a&gt; we now have a
prototype of the custom
&lt;a class="cow-url" href="http://shop.pimoroni.com/products/pibow-raspberry-pi-case"&gt;PiBow&lt;/a&gt; lid that
they're supplying for &lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/mopi.html"&gt;MoPi&lt;/a&gt; :-)&lt;/p&gt;

&lt;p&gt;Here are some pics of MoPi (3.3V version) running a Model A Pi in a Crystal
PiBow with the new lid:&lt;/p&gt;

&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/mopi/custom-lid-120313.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/mopi/custom-lid-120313-500x.jpg" alt="Custom PiBow Lid" width="500"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The power button is just proud of the lid &amp;mdash; hard to press by accident, but
easy to access when you want it.&lt;/p&gt;

&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/mopi/custom-lid-120322.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/mopi/custom-lid-120322-500x.jpg" alt="Custom PiBow Lid" width="500"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;!--% %(images/mopi/custom-lid-120327.jpg, %image(images/mopi/custom-lid-120327-500x.jpg, Custom PiBow Lid, 500))--&gt;


&lt;p&gt;Thanks guys!&lt;/p&gt;



&lt;p&gt;&lt;b&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/mopi.html"&gt;Read the main article&lt;/a&gt;.&lt;/b&gt;&lt;/p&gt;
</summary><category term="kickstarter"></category><category term="batteries"></category><category term="mo-pi"></category><category term="pi-tronics"></category><category term="pi"></category><category term="raspberrypi"></category><category term="gate"></category></entry><entry><title>MoPi: Firming up the Software</title><link href="http://pi.gate.ac.uk/posts/2014/05/07/firming-up/" rel="alternate"></link><updated>2014-05-07T00:00:00+01:00</updated><author><name>Hamish Cunningham</name></author><id>tag:pi.gate.ac.uk,2014-05-07:posts/2014/05/07/firming-up/</id><summary type="html">
&lt;h2 class="cow-heading"&gt;[MoPi is &lt;b&gt;mobile&lt;/b&gt;, &lt;b&gt;hot-swap&lt;/b&gt; and &lt;b&gt;24/7 power&lt;/b&gt; for the Raspberry Pi. &lt;br&gt;
&lt;a class="cow-url" href="/pages/get-mopi.html"&gt;How to order.&lt;/a&gt;]&lt;/h2&gt;

&lt;div class="cow-contents"&gt;&lt;h2 class="cow-heading"&gt;Contents&lt;/h2&gt;
&lt;p&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#section-1."&gt;1. The View from the Pi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#section-2."&gt;2. The SimBaMon Daemon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#section-3."&gt;3. The Python API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#section-4."&gt;4. MoPi from the Command Line&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#section-5."&gt;5. Configuring Your Power Supplies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#section-6."&gt;6. Monitoring&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/p&gt;&lt;/div&gt;

&lt;!--%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%--&gt;
&lt;a class="cow-section-anchor" name="section-1."&gt;&lt;/a&gt;&lt;h1 class="cow-heading"&gt;&lt;span class="cow-sec-number"&gt;1. &lt;/span&gt;The View from the Pi&lt;/h1&gt;

&lt;p&gt;The MoPi software suite is now feature complete. That means that all the
facilities which MoPi makes available on the Raspberry Pi which it is powering
are now available for testing. This post describes how this software works and
how the architecture of MoPi hangs together.&lt;/p&gt;

&lt;p&gt;There are four main parts of the puzzle:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A &lt;em&gt;daemon&lt;/em&gt; which runs in the background on the Pi, which is called
  &lt;a class="cow-url" href="/pages/mopi.html#simbamon"&gt;SimBaMon&lt;/a&gt; (a Simple Battery Monitor). SimBaMon
  is available as a package for Raspbian, and installing it pulls in all the
  other facilities.&lt;/li&gt;
&lt;li&gt;An interface that communicates with the MoPi hardware over the I2C protocol.
  This interface is wrapped up as a Python API.&lt;/li&gt;
&lt;li&gt;A command-line tool that uses the Python API and provides a language-neutral
  portable method for talking to the board from the Pi.&lt;/li&gt;
&lt;li&gt;A configuration user interface that simplifies the process of setting up
  MoPi to deal with different types and numbers of batteries, and other types
  of power supply.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All of the code for these components is
&lt;a class="cow-url" href="https://github.com/hamishcunningham/pi-tronics/tree/master/simbamon"&gt;available on GitHub&lt;/a&gt;, and details of how to install are available on
&lt;a class="cow-url" href="/pages/download.html"&gt;our download page&lt;/a&gt;. (&lt;b&gt;Note&lt;/b&gt;: to run the current
version of the code you need the snapshot repository; the version in the Pi
Foundation's repository won't be updated until we make an official release.)&lt;/p&gt;

&lt;p&gt;The rest of the post discusses each of the main elements in turn, and finishes
up with a note about monitoring the beast as it runs. First, though, a note
about our delivery schedule. Having lost some time
&lt;a class="cow-non-existant-url" href="/posts/2014/04/20/shakey-testing/"&gt;through illness&lt;/a&gt;, and spent quite a long
time getting the I2C protocol to work reliably, it is now looking unlikely
that we'll deliver before next month. (On the up-side that means we'll be able
to deliver all in one go, as the
&lt;a class="cow-non-existant-url" href="/posts/2014/04/20/shakey-testing/#section-2."&gt;second shipment&lt;/a&gt; of
microncontrollers is due early in June.) We're getting close to finalising
version 4 (the first production version), but we'd hate to ship it with a
firmware bug that would mean returning the boards for re-flashing. We hope you
agree it is best to wait a little longer. With a bit of luck this will be the
last of the delays, and we'll hit the original target of June 2014 to finish
all deliveries as promised.&lt;/p&gt;


&lt;!--%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%--&gt;
&lt;a class="cow-section-anchor" name="section-2."&gt;&lt;/a&gt;&lt;h1 class="cow-heading"&gt;&lt;span class="cow-sec-number"&gt;2. &lt;/span&gt;The SimBaMon Daemon&lt;/h1&gt;

&lt;p&gt;When the Pi (or any other Linux system) boots, several system services are
started that will run continuously until the machine is shut down again. These
services are called &lt;em&gt;daemons&lt;/em&gt;, and this is how SimBaMon is implemented.
Following the standard naming convention, the daemon is called &lt;tt&gt;simbamond&lt;/tt&gt;,
and the first point of entry (used by the operating system to start, stop,
etc.) is a script that lives in
&lt;a class="cow-url" href="https://github.com/hamishcunningham/pi-tronics/blob/master/simbamon/simbamond.default"&gt;&lt;tt&gt;/etc/init.d/simbamond&lt;/tt&gt;&lt;/a&gt;. This script (which is a management type person)
calls another to do all the real work; this other (hard working type) lives in
&lt;a class="cow-url" href="https://github.com/hamishcunningham/pi-tronics/blob/master/simbamon/simbamon"&gt;&lt;tt&gt;/usr/sbin/simbamon&lt;/tt&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;One of key features of MoPi is that it supports many different types of
batteries and many other types of power supply (from solar panels to elastic
bands!). Coping with the requirements of all these monsters needs a huge wodge
of configuration data, which (following Debian Linux convention) lives in
&lt;tt&gt;/etc/default&lt;/tt&gt; in a file (again, confusingly) called
&lt;a class="cow-url" href="https://github.com/hamishcunningham/pi-tronics/blob/master/simbamon/simbamond.init"&gt;&lt;tt&gt;simbamond&lt;/tt&gt;&lt;/a&gt;.&lt;span class="cow-footnote" name="footnote1"&gt;&lt;sup&gt;&lt;a href="#footnote1"&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Together these three script files make up a new system service that polls the
MoPi hardware every couple of seconds and shouts loudly when an electron
shortage appears on the horizon. If no one is listening and the shortage gets
acute, the daemon tells the Pi to take a rest and issues the &lt;tt&gt;shutdown&lt;/tt&gt;
command.&lt;/p&gt;

&lt;p&gt;There is &lt;a class="cow-url" href="/pages/mopi.html#simbamon"&gt;more detail here&lt;/a&gt; (though it is a little
out of date at time of writing).&lt;/p&gt;


&lt;!--%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%--&gt;
&lt;a class="cow-section-anchor" name="section-3."&gt;&lt;/a&gt;&lt;h1 class="cow-heading"&gt;&lt;span class="cow-sec-number"&gt;3. &lt;/span&gt;The Python API&lt;/h1&gt;

&lt;p&gt;How do we talk to the hardware? From MoPi version 3 onwards we shifted away
from using the Pi's general-purpose GPIO pins (using a tool called WiringPi).
This worked well, but it used a pin for each bit of data that we wanted to
ship between the board and the Pi. As time went on we found more and more data
that we needed to share (and we also came across other add-on boards that use
lots of GPIO pins &amp;mdash; e.g. &lt;a class="cow-url" href="http://pi.gate.ac.uk/posts/2014/02/07/airpi1/"&gt;AirPi&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Luckily the Pi also hosts several other inter-board communication options,
including the I2C protocol, which uses only two pins, can talk to multiple
devices over the same two wires, and allows transfer of much larger amounts of
data.&lt;/p&gt;

&lt;p&gt;There are two ways to talk over I2C from the Pi: a set of command-line tools
written in C, and a Python module. Both work, but the Python version seems to
have had more attention from Pi users and developers, and has support for
multi-byte reads (which requires a bit of hacking to get working in the C). So
we've implemented an API for MoPi in Python&lt;span class="cow-footnote" name="footnote2"&gt;&lt;sup&gt;&lt;a href="#footnote2"&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/span&gt;, which now lives in a
file called
&lt;a class="cow-url" href="https://github.com/hamishcunningham/pi-tronics/blob/master/simbamon/mopiapi.py"&gt;&lt;tt&gt;mopiapi.py&lt;/tt&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For Python programmers this code provides a natural and efficient method of
including MoPi facilities in their programs.&lt;/p&gt;


&lt;!--%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%--&gt;
&lt;a class="cow-section-anchor" name="section-4."&gt;&lt;/a&gt;&lt;h1 class="cow-heading"&gt;&lt;span class="cow-sec-number"&gt;4. &lt;/span&gt;MoPi from the Command Line&lt;/h1&gt;

&lt;p&gt;The observant amongst you may have noticed that SimBaMon is not written in
Python&lt;span class="cow-footnote" name="footnote3"&gt;&lt;sup&gt;&lt;a href="#footnote3"&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/span&gt; &amp;mdash; how does the daemon talk to the board when the API is in Python?
That's where
&lt;a class="cow-url" href="https://github.com/hamishcunningham/pi-tronics/blob/master/simbamon/mopicli"&gt;&lt;tt&gt;mopcli&lt;/tt&gt;&lt;/a&gt; comes in, which is a command-line interface to the Python API. This
script provides convenient methods for the daemon to use, or for Pi users to
query and configure the board, or for our configuration utility &amp;mdash; which by
amazing coincidence is described next.&lt;/p&gt;

&lt;p&gt;To see what the beast can do, ask it for help by typing &lt;tt&gt;sudo mopicli -h&lt;/tt&gt;;
you'll get something like this:&lt;/p&gt;

&lt;pre&gt;
Usage: mopicli [-h] [options]
Version 0.2, API 0.2

Miscellaneous:
  -i          I2C bus (default: 1)
  -fv         Firmware version
  -sn         Serial number
  -h          Display this message

Status:
  -s          MoPi status word
  -sv         Verbose status
  -v          Current battery voltage in mV
  -v1/-v2     Battery #1/#2 voltage in mV

Read configuration options:
  -rc         Combined battery #1 and #2 configuration
  -rc1/-rc2   Configuration of battery #1/#2
  -rpon       Power on delay
  -rs         Shutdown delay

Write configuration options:
  -wc mV mV mV         Combined battery #1 and #2 configuration
  -wc1/-wc2 mV mV mV   Configuration of battery #1/#2
  -wpon seconds        Power on delay seconds
  -ws seconds          Shutdown delay seconds

All options may be used simultaneously. When doing so, they execute in the
  order they are listed in in this help message. However, only one of each may
  be used.
&lt;/pre&gt;

&lt;p&gt;As easy as pie.&lt;/p&gt;


&lt;!--%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%--&gt;
&lt;a class="cow-section-anchor" name="section-5."&gt;&lt;/a&gt;&lt;h1 class="cow-heading"&gt;&lt;span class="cow-sec-number"&gt;5. &lt;/span&gt;Configuring Your Power Supplies&lt;/h1&gt;

&lt;p&gt;Not quite so easy is choosing the correct voltage settings for different
battery chemistries and different combinations of cells (not to mention other
types of power supply). In each case MoPi needs to know:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;what is the approximate voltage that the battery will supply when fully
  charged&lt;/li&gt;
&lt;li&gt;what is the point at which we're getting low on charge (and may expect to
  run out within a few minutes or so)&lt;/li&gt;
&lt;li&gt;what is the minimum safe discharge voltage&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The mid-point between the first two voltages is is the conventional definition
of what a good level of charge is, so that's where we swap between lighting up
our RGB led in blue and lighting it in green. When we reach the low charge
point we turn the LED red, and when we reach the minimum safe discharge
voltage (or the minimum safe operating voltage if that is higher) then we
initiate shutdown.&lt;/p&gt;

&lt;p&gt;Let's look at each of these values in more detail:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Fully-charged voltage&lt;/em&gt;. This is equal to the fully-charged voltage of each
  cell in the battery pack multiplied by the number of cells. Like most things
  with batteries, it varies according to battery chemistry &amp;mdash; e.g. an Alkaline
  cell generates 1.5V; a NiMH 1.2V; a LiIon 3.7V.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;The low charge level&lt;/em&gt;. When you record the voltage delivered by a battery
  over time, most of the curves exhibit a knee shape. Before the knee voltage
  drop is reasonably slow; after the knee if drops much more sharply. We need
  to try and warn the user around the knee point, so that they have enough
  time to replace the battery before it drains completely, but not so much
  time that there is still lots of usable charge left.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Minimum safe discharge voltage&lt;/em&gt;. This applies to all rechargeable
  batteries. If we discharge below this level, then the capacity to recharge
  will be impared. This makes it a very important factor in battery life for
  the long term, and one which we've done a lot of work to model and adapt to.
  (Ever wondered why the rechargeables that you put in your alarm clock or
  torch lasted such a short time? Most devices have no way of knowing about
  the minimum discharge level for the particular chemistry you're using!)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Minimum safe operating level&lt;/em&gt;. MoPi uses a sophisticated microcontroller to
  analyse battery behaviour, control its LEDs and deliver data to the software
  suite running on the Pi. If the supply voltage to MoPi falls below a certain
  level (around 6.2V) then the microcontroller may terminate, or even start to
  behave unpredictably. It is very important to trap rapid voltage drop before
  it reaches this point.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To deal with all these considerations, the current version of the software
stores these values:&lt;/p&gt;

&lt;pre&gt;
        TYPE         CELL/FULL  MIN

  1     non-battery     9.0     6.2
  2     NiMH            1.2     0.95
  3     Alkaline        1.5     0.8
  4     Lead Acid       2.0     1.58
  5     Lithium Ion     3.7     3.0
  6     LiPo            4.2     3.0
  7     NiCd            1.2     1.1
&lt;/pre&gt;

&lt;p&gt;When we know what chemistry we're dealing with, and how many cells, we can
then make good guesses about where the four levels above should fall. But how
do we know what the chemistry is? Two ways:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We have two built-in defaults, one for 8 NiMH cells (which is the battery
  pack that we're supplying to backers who requested one), and one for 8
  Alkaline non-rechargeables. The former is what MoPi will assume when running
  out of the box; the latter is activated by removing the on-board jumper
  provided for the purpose&lt;span class="cow-footnote" name="footnote4"&gt;&lt;sup&gt;&lt;a href="#footnote4"&gt;4&lt;/a&gt;&lt;/sup&gt;&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;You tell us! To this end we have developed a configuration UI on the Pi,
  which is the last piece in our four part software puzzle.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The configuration UI uses the same tools as the Raspberry Pi's utility
(&lt;tt&gt;raspi-config&lt;/tt&gt;), so it should be simple and familiar, and it can be used over
all types of connections (including remote login with &lt;tt&gt;ssh&lt;/tt&gt;). Here's a
screenshot or three:&lt;/p&gt;

&lt;p&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/mopi/config-01.png" alt="MoPi Config UI 1" width="650"&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The main entry screen.&lt;/em&gt; &lt;br&gt; &lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/mopi/config-02.png" alt="MoPi Config UI 2" width="650"&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Configuring one of the power supplies, battery chemistry.&lt;/em&gt; &lt;br&gt; &lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/mopi/config-03.png" alt="MoPi Config UI 3" width="650"&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Getting status data (there's lots more in the newest version!).&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Dive into
&lt;a class="cow-url" href="https://github.com/hamishcunningham/pi-tronics/blob/master/simbamon/mopi"&gt;the source code here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;And now you know more about batteries than you ever wanted to &amp;mdash; just like me!&lt;/p&gt;


&lt;!--%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%--&gt;
&lt;a class="cow-section-anchor" name="section-6."&gt;&lt;/a&gt;&lt;h1 class="cow-heading"&gt;&lt;span class="cow-sec-number"&gt;6. &lt;/span&gt;Monitoring&lt;/h1&gt;

&lt;p&gt;As you can imagine, figuring out how all this stuff is working and identifying
bugs and incorrect behaviour is quite a challenge. Luckily we have some great
tools to help us, one of which is &lt;a class="cow-url" href="https://mmonit.com/"&gt;Monit&lt;/a&gt;. This little
gem is itself a daemon, and it has facilities for one thousand and one
different types of monitoring task. You can listen to your webserver and
restart it if it fails, or check the general load of the machine you're
running on, or &amp;mdash; in our case &amp;mdash; check that the SimBaMon service is running,
and if not start it up.&lt;/p&gt;

&lt;p&gt;To use it, all we need to do is &lt;tt&gt;sudo apt-get install monit&lt;/tt&gt; in the usual way,
then edit &lt;tt&gt;/etc/monit/monitrc&lt;/tt&gt;. This is the config we're using to monitor
SimBaMon on one of our test rigs:&lt;/p&gt;

&lt;p&gt;&lt;pre class="prettyprint lang-bash"&gt;
###############################################################################
# monit config for simbamond, from /etc/monit/monitrc #########################

# monitoring UI (serve on port 8888 and allow connections from one IP address)
set httpd port 8888 and
  allow 192.168.1.111

# general system status
check system mopi-15
  if loadavg (1min) &amp;gt; 4 then alert
  if loadavg (5min) &amp;gt; 2 then alert
  if memory usage &amp;gt; 75% then alert
  if swap usage &amp;gt; 25% then alert
  if cpu usage (user) &amp;gt; 70% then alert
  if cpu usage (system) &amp;gt; 30% then alert
  if cpu usage (wait) &amp;gt; 20% then alert

# monitor simbamond
check process simbamond with pidfile /var/run/simbamond.pid
  start program = &amp;quot;/usr/sbin/service simbamond start&amp;quot; with timeout 60 seconds
  stop program  = &amp;quot;/usr/sbin/service simbamond stop&amp;quot;
  restart program = &amp;quot;/usr/sbin/service simbamond restart&amp;quot; with timeout 60 seconds
  if cpu &amp;gt; 60% for 2 cycles then alert
  if cpu &amp;gt; 80% for 5 cycles then restart
  if totalmem &amp;gt; 200.0 MB for 5 cycles then restart
  if children &amp;gt; 250 then restart
  if loadavg(5min) greater than 10 for 8 cycles then stop
  if 3 restarts within 5 cycles then timeout
  group mopi
###############################################################################
&lt;/pre&gt;You can then see what's going on by either or both of&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;tt&gt;cat /var/log/monit.log&lt;/tt&gt; (&lt;tt&gt;grep simbamon ...&lt;/tt&gt; is also useful)&lt;/li&gt;
&lt;li&gt;pointing your browser at &lt;tt&gt;&lt;span class="cow-escape"&gt;h&lt;/span&gt;ttp://my-pi-ip-address:8888&lt;/tt&gt; (if you need to
  find your IP address various methods are &lt;a class="cow-url" href="/pages/blinkip.html"&gt;discussed
  here&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is great for keeping check on things during load testing (particularly
heavy loads which have a tendency to cause odd corner case bugs to trigger),
but it is also a great tool for maximising service availability &amp;mdash; the
configuration code above will restart SimBaMon within a couple of minutes
should it ever crash, for example.&lt;/p&gt;

&lt;p&gt;Enjoy...&lt;/p&gt;


&lt;!--%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%--&gt;



&lt;p&gt;&lt;b&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/mopi.html"&gt;Read the main article&lt;/a&gt;.&lt;/b&gt;&lt;/p&gt;
&lt;span class="cow-footnote-section"&gt;
&lt;h1 class="cow-heading"&gt;Footnotes&lt;/h1&gt;
&lt;p&gt;&lt;ol&gt;
&lt;li&gt;
&lt;a class="cow-footnote-anchor" name="footnote1"&gt;&lt;/a&gt;
&lt;span class="cow-footnote-text" name="footnote1"&gt;Again confusingly &amp;mdash; this will become a theme &amp;mdash; the
names of the files as they live in the source package are different from their
names when installed. If you don't like being confused, you might want to
avoid talking to computer people as a general rule. For example, the MoPi
board works on milivolts; the I2C communication uses centivolts; the user
interface uses volts; the API uses milivolts. And all for good reasons!&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a class="cow-footnote-anchor" name="footnote2"&gt;&lt;/a&gt;
&lt;span class="cow-footnote-text" name="footnote2"&gt;And no one complained
about the whitespace rules! Who'd have thought it?!&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a class="cow-footnote-anchor" name="footnote3"&gt;&lt;/a&gt;
&lt;span class="cow-footnote-text" name="footnote3"&gt;In common with most daemons, SimBaMon is written in shell
script.&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a class="cow-footnote-anchor" name="footnote4"&gt;&lt;/a&gt;
&lt;span class="cow-footnote-text" name="footnote4"&gt;Configuration provided by the user
  overrides the jumper for the current power cycle &amp;mdash; and beyond, when
  SimBaMon is running as the daemon will persist the config values. The
  firmware reads the jumper at each power up and initializes the cut-off
  points with Ni-MH or Alkaline values.&lt;/span&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;/p&gt;
&lt;/span&gt;
&lt;script src="https://google-code-prettify.googlecode.com/svn/loader/run_prettify.js"&gt;&lt;/script&gt;
</summary><category term="kickstarter"></category><category term="batteries"></category><category term="mo-pi"></category><category term="pi-tronics"></category><category term="pi"></category><category term="raspberrypi"></category><category term="gate"></category></entry><entry><title>The AirPi Software</title><link href="http://pi.gate.ac.uk/posts/2014/04/21/airpisoftware/" rel="alternate"></link><updated>2014-04-21T00:00:00+01:00</updated><author><name>Fred Sonnenwald</name></author><id>tag:pi.gate.ac.uk,2014-04-21:posts/2014/04/21/airpisoftware/</id><summary type="html">

&lt;!--%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%--&gt;


&lt;p&gt;OK, it's been a while. For those that don't remember, the &lt;a class="cow-url" href="http://airpi.es/"&gt;AirPi&lt;/a&gt; is a low-cost weather station add-on project for the Raspberry Pi. I've
previously written about &lt;a class="cow-non-existant-url" href="/posts/2014/02/07/airpi1/"&gt;building it from
scratch&lt;/a&gt;, &lt;a class="cow-non-existant-url" href="/posts/2014/02/14/airpiupdate/"&gt;soldering it up&lt;/a&gt;, and then most
recently &lt;a class="cow-non-existant-url" href="/posts/2014/02/25/airpisensors/"&gt;interpreting sensor readings&lt;/a&gt;.
Since then I've been working on making those readings more accessible.&lt;/p&gt;

&lt;p&gt;That's the beauty of open source software and projects really. Tom Hartley (the
AirPi guy) posted their software on &lt;a class="cow-url" href="https://github.com/tomhartley/AirPi"&gt;GitHub&lt;/a&gt;, an open software source code repository. I
&lt;a class="cow-url" href="https://github.com/guruthree/AirPi"&gt;forked it&lt;/a&gt;, or created a copy of the
code, to make my own modifications. After two months of on and off again
changes and testing, I feel it's about as done as it's going to get.&lt;/p&gt;

&lt;p&gt;My goal here is to introduce everyone to what I think are the really nifty
things I've added in. I've fixed a few bugs in the original code as I've found
them. I've also then fixed the bugs I introduced myself in the new code, but we
can gloss over them... The big fix I think is the high CPU load the software
had, which only needed the addition of a simple &lt;tt&gt;time.sleep()&lt;/tt&gt; to make it more
reasonable.&lt;/p&gt;

&lt;p&gt;The first of the new features is &lt;b&gt;Raingauge Support&lt;/b&gt;. Previously I
&lt;a class="cow-non-existant-url" href="/posts/2014/01/25/raingauge/"&gt;looked at them&lt;/a&gt;, and now I've translated the
logging code I wrote there and applied it to the AirPi framework. We've just
gotten even more weather-station-esqe. Just connect the raingauge to GPIO pin
17 and ground. In a similar vein I also added back in support for the &lt;b&gt;TGS-2600
Air Quality Sensor&lt;/b&gt; and the &lt;b&gt;UVI-01 Ultra Violet Sensor&lt;/b&gt;. This was all pretty
trivial still. This was all mostly just extensions of what was already there.&lt;/p&gt;

&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/environment/software/raingauge2.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/environment/software/raingauge2_thumb.jpg"&gt;&lt;/a&gt;
&lt;em&gt;The raingauge connection...&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;On to more exciting things! Last time I more or less pointed out that a chunk
of the sensor readings were uncalibrated. Not anymore! There's now a module
that let's the software output calibrated readings. &amp;quot;What's the use?&amp;quot; you
might say? Ah well, for starters I also added a CSV output module. The AirPi
is now compatible with industry standard file formats... also known as a
(comma separated value) spreadsheet. It get's better than that though:&lt;/p&gt;

&lt;p&gt;... (wait for it) ... The Crown Jewels:&lt;/p&gt;

&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/environment/software/webinterface.png"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/environment/software/webinterface_small.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Instead of uploading to Xively, which requires Internet access and relies on a
third-party service, I've &lt;b&gt;built in an HTTP server&lt;/b&gt;. Starting the AirPi
software with this module enabled starts the Pi listening on port 8080
for HTTP requests. Going there loads up a pretty, but fast site that's based
on &lt;a class="cow-url" href="http://getbootstrap.com/"&gt;Twitter Bootstrap&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;But wait! There's more!&lt;/p&gt;

&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/environment/software/webinterface2.png"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/environment/software/webinterface2_thumb.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Not only can you see the current reading, you can also view graphs.
Interactively explore what the weather's been doing over the last 24 hours
with the click of a button. This is of course customizable. You could show the
last hour or the last 2 weeks, but longer periods require more free memory and
will load a bit slower. Check out our &lt;b&gt;&lt;a class="cow-url" href="/pages/airpi-files/airpi_demo/"&gt;interactive demo site&lt;/a&gt;&lt;/b&gt;. It's not a real Pi there for reasons of my router
being unhappy, but it behaves just like the real thing. Open the drop down to
bring up a graph. Select an area on a graph to zoom.&lt;/p&gt;

&lt;p&gt;Sharp eyed observes will have also noticed the RSS feed icon in the upper right
hand corner. This is to allow for easy export of results to other software. I
suspect minimal modifications will allow
&lt;a class="cow-url" href="https://github.com/uduncanu/AirPi/commit/9e13c3ab0e902d563a78e98addc7aac6eda5a35e"&gt;this JSON output&lt;/a&gt; module to be served over HTTP for easy export as well.&lt;/p&gt;

&lt;p&gt;The reason I was after RSS? How many people have heard of
&lt;a class="cow-url" href="http://conky.sourceforge.net/"&gt;Conky&lt;/a&gt;? It's a system monitor applet that
displays system information on the screen in a corner of the desktop. It's a
bit like the gadgets of Windows Vista/7 or OS X dashboard widgets. Well,
anyway Conky, like gadgets or widgets, supports RSS feeds.&lt;/p&gt;

&lt;pre&gt;=== ${rss http://airpi:8080/rss.xml 10 feed_title} ===
${rss http://airpi:8080/rss.xml 10 item_title 0}: ${rss http://airpi:8080/rss.xml 10 item_desc 0}
${rss http://airpi:8080/rss.xml 10 item_title 1}: ${rss http://airpi:8080/rss.xml 10 item_desc 1}
${rss http://airpi:8080/rss.xml 10 item_title 2}: ${rss http://airpi:8080/rss.xml 10 item_desc 2}
${rss http://airpi:8080/rss.xml 10 item_title 3}: ${rss http://airpi:8080/rss.xml 10 item_desc 3}
${rss http://airpi:8080/rss.xml 10 item_title 4}: ${rss http://airpi:8080/rss.xml 10 item_desc 4}
${rss http://airpi:8080/rss.xml 10 item_title 5}:
  ${rss http://airpi:8080/rss.xml 10 item_desc 5}
${rss http://airpi:8080/rss.xml 10 item_title 6}: ${rss http://airpi:8080/rss.xml 10 item_desc 6}
${rss http://airpi:8080/rss.xml 10 item_title 7}: ${rss http://airpi:8080/rss.xml 10 item_desc 7}&lt;/pre&gt;

&lt;p&gt;Adding the above bit of config to the end of my &lt;tt&gt;.conkyrc&lt;/tt&gt; file gives me this
(below) in the upper right corner of my desktop. The weather on my terms. Just
what an AirPi should do.&lt;/p&gt;

&lt;p&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/environment/software/conky.png"&gt;&lt;/p&gt;


</summary><category term="airpi"></category><category term="hardware"></category><category term="pi-tronics"></category><category term="environmental"></category><category term="pi"></category><category term="raspberrypi"></category><category term="gate"></category></entry><entry><title>Wobbling, Coding, Wobbling, Testing</title><link href="http://pi.gate.ac.uk/posts/2014/04/20/shakey-testing/" rel="alternate"></link><updated>2014-04-20T00:00:00+01:00</updated><author><name>Hamish Cunningham</name></author><id>tag:pi.gate.ac.uk,2014-04-20:posts/2014/04/20/shakey-testing/</id><summary type="html">
&lt;h2 class="cow-heading"&gt;[MoPi is &lt;b&gt;mobile&lt;/b&gt;, &lt;b&gt;hot-swap&lt;/b&gt; and &lt;b&gt;24/7 power&lt;/b&gt; for the Raspberry Pi.
&lt;a class="cow-url" href="/pages/get-mopi.html"&gt;How to order.&lt;/a&gt;]&lt;/h2&gt;

&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/mopi/first-boxed-batch-april-2014.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/mopi/first-boxed-batch-april-2014-500.jpg" alt="Boxed batch" width="500"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;div class="cow-contents"&gt;&lt;h2 class="cow-heading"&gt;Contents&lt;/h2&gt;
&lt;p&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#section-1."&gt;1. Waving, Drowning, or ...?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#section-2."&gt;2. MoPi v3 and v4: Results So Far&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#section-3."&gt;3. Packaging&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#section-4."&gt;4. Working with the New Board&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#section-5."&gt;5. Linux is Lovely&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&amp;nbsp;&amp;nbsp;&lt;a href="#section-5.1."&gt;5.1. Enabling I2C and Debugging with I2C Tools&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/p&gt;&lt;/div&gt;

&lt;!--%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%--&gt;
&lt;a class="cow-section-anchor" name="section-1."&gt;&lt;/a&gt;&lt;h1 class="cow-heading"&gt;&lt;span class="cow-sec-number"&gt;1. &lt;/span&gt;Waving, Drowning, or ...?&lt;/h1&gt;

&lt;p&gt;(With apologies to &lt;a class="cow-url" href="http://www.bbc.co.uk/arts/poetry/outloud/smith.shtml"&gt;Stevie Smith&lt;/a&gt;.)&lt;/p&gt;

&lt;p&gt;Ok, so it was raining solidly for the second straight day of our (working)
holiday, but what the hell &amp;mdash; I was tucked up in bed, and The Little Monster
was still asleep at gone 9 local time. Life was fine. And then I tried to sit
up, and the world started spinning. Hmmm. Not so fine.&lt;/p&gt;

&lt;p&gt;Labyrinthitis is a murky syndrome involving the tiny hairs in your inner ear
that allow us to balance. If there's a change in the liquid that activates
them, then all sorts of wierd and wonderful things can happen &amp;mdash; including
vertigo. A frequent result, apparently, is projectile oral expulsion of
whatever you've been scoffing recently &amp;mdash; see for example
&lt;a class="cow-url" href="http://www.pcarter.com.au/books/ride-like-hell-and-youll-get-there/"&gt;Paul
Carter's account&lt;/a&gt;&lt;span class="cow-footnote" name="footnote1"&gt;&lt;sup&gt;&lt;a href="#footnote1"&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/span&gt; &amp;mdash; but lucky
for me I didn't go through that stage.&lt;/p&gt;

&lt;p&gt;I do feel somewhat wobbly, though, and testing new versions of the MoPi
firmware from Lubo has been a bit tricky for the last few days...&lt;/p&gt;

&lt;p&gt;All part of life's rich tapestry, no doubt. Onwards.&lt;/p&gt;


&lt;!--%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%--&gt;
&lt;a class="cow-section-anchor" name="section-2."&gt;&lt;/a&gt;&lt;h1 class="cow-heading"&gt;&lt;span class="cow-sec-number"&gt;2. &lt;/span&gt;MoPi v3 and v4: Results So Far&lt;/h1&gt;

&lt;p&gt;The good news is that we're pretty convinced that the
&lt;a class="cow-non-existant-url" href="/posts/2014/03/27/pre-propduction-mopi/"&gt;version 3 prototype&lt;/a&gt; is a solid
basis for the first full production run (version 4, which we'll be delivering
to our &lt;a class="cow-url" href="http://kck.st/1gK5U3t"&gt;Kickstarter backers&lt;/a&gt; in May and June). We've
ordered the PCBs and most of the components. (Below more details of the
development and testing process.)&lt;/p&gt;

&lt;p&gt;The bad news is that there's a world-wide shortage of the Silicon Labs
microcontroller that we're using&lt;span class="cow-footnote" name="footnote2"&gt;&lt;sup&gt;&lt;a href="#footnote2"&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/span&gt; :-( &lt;br&gt; &lt;br&gt;
&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/falling-shipping-containers.jpg" alt="Falling Shipping
Containers"&gt;&lt;span class="cow-footnote" name="footnote3"&gt;&lt;sup&gt;&lt;a href="#footnote3"&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/span&gt; &lt;br&gt; &lt;br&gt; &amp;mdash; we've only
managed to order around half of what we need for immediate delivery. The other
half is on order for delivery in the first week of June. If the situation
stays the same then this means we will be delivering to the first half of our
backers in May and the second half in June. (We'll do this in
first-come-first-served order.)&lt;/p&gt;

&lt;p&gt;If anyone has 300 spare controllers we'd love to hear from you...&lt;/p&gt;


&lt;!--%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%--&gt;
&lt;a class="cow-section-anchor" name="section-3."&gt;&lt;/a&gt;&lt;h1 class="cow-heading"&gt;&lt;span class="cow-sec-number"&gt;3. &lt;/span&gt;Packaging&lt;/h1&gt;

&lt;p&gt;Big thanks to Georgi Marinov from &lt;a class="cow-url" href="http://www.engview.com/"&gt;EngView systems&lt;/a&gt;
for designing a beautiful packet for MoPi:&lt;/p&gt;

&lt;p&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/mopi/packaging-01.jpg" alt="The Packaging 1" width="500"&gt;&lt;/p&gt;

&lt;!--% %image(images/mopi/packet/img-20140421-112941.jpg, Packaging 2, 500)--&gt;


&lt;p&gt;And you can also spot the new stackable headers version here (with a
stabilising device at the top which we'll ship it with &amp;mdash; the long pins are
very easy to bend!).&lt;/p&gt;

&lt;!--% %image(images/mopi/packet/img-20140421-112958.jpg, Packaging 3, 500)--&gt;


&lt;p&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/mopi/packet/img-20140421-113013.jpg" alt="Packaging 4" width="500"&gt;&lt;/p&gt;

&lt;p&gt;Thanks Joro! (And thanks Gen for the logo!)&lt;/p&gt;


&lt;!--%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%--&gt;
&lt;a class="cow-section-anchor" name="section-4."&gt;&lt;/a&gt;&lt;h1 class="cow-heading"&gt;&lt;span class="cow-sec-number"&gt;4. &lt;/span&gt;Working with the New Board&lt;/h1&gt;

&lt;p&gt;Our present work has several objectives:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;verify that the new MoPi board implements all (old and new) functions
  correctly&lt;/li&gt;
&lt;li&gt;develop an API for I2C access to the board&lt;/li&gt;
&lt;li&gt;convert SimBaMon to use the new API&lt;/li&gt;
&lt;li&gt;add a configuration utility to allow users on the Pi to configure the board&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We're doing this using external power supplies to make the development cycles
faster. (Well, would &lt;em&gt;you&lt;/em&gt; want to add &amp;quot;wait for the batteries to discharge&amp;quot;
to every edit/compile/test loop?!) I'm writing this post next to a large
humming monster:&lt;/p&gt;

&lt;p&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/mopi/test-rigs/sofia-20140421-154603-500.jpg" alt="Test Rig" width="500"&gt;&lt;/p&gt;

&lt;p&gt;The Pi is drawing 170 mA; MoPi is getting 11.9 volts from the PSU. The PSU
connects up to one of MoPi's supply inputs using a couple of re-purposed panel
pins:&lt;/p&gt;

&lt;p&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/mopi/test-rigs/sofia-20140421-113148-500.jpg" alt="Test Rig" width="500"&gt;&lt;/p&gt;

&lt;p&gt;Mission control (helicopter not strictly necessary):&lt;/p&gt;

&lt;p&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/mopi/test-rigs/sofia-20140421-154651-500.jpg" alt="Test Rig" width="500"&gt;&lt;/p&gt;

&lt;!--% %image(images/mopi/test-rigs/sofia-20140421-113213-500.jpg, Test Rig, 500)--&gt;

&lt;!--% %image(images/mopi/test-rigs/sofia-20140421-154556-500.jpg, Test Rig, 500)--&gt;

&lt;!--% %image(images/mopi/test-rigs/sofia-20140421-113123-500.jpg, Test Rig, 500)--&gt;

&lt;!--% %image(images/mopi/test-rigs/sofia-20140421-113138-500.jpg, Test Rig, 500)--&gt;


&lt;p&gt;We've also got a flash new PSU down at the workshop:&lt;/p&gt;

&lt;p&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/mopi/test-rigs/workshop-20140409-153037-500.jpg" alt="Test Rig" width="500"&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/mopi/test-rigs/workshop-20140409-153052-500.jpg" alt="Test Rig" width="500"&gt;&lt;/p&gt;

&lt;p&gt;And here's Fred after I just showed him the bill:&lt;/p&gt;

&lt;p&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/mopi/test-rigs/workshop-20140409-153131-500.jpg" alt="Test Rig" width="500"&gt;&lt;/p&gt;

&lt;p&gt;While we're showing my snaps, here's one of my absolute favourite bits of kit
ever:&lt;/p&gt;

&lt;p&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/mopi/test-rigs/workshop-20140409-153029-500.jpg" alt="Test Rig" width="500"&gt;&lt;/p&gt;
&lt;!--% %image(images/mopi/test-rigs/workshop-20140409-153021-500.jpg, Test Rig, 500)--&gt;


&lt;p&gt;This multimeter has been running reliably for 30 years! Ok, at some point I
couldn't get the batteries any more, so I had to bodge up a container for a
different size, but apart from that it has been pretty much perfect. I plugged
it into our new PSU, dialed up 6.2 volts and hey presto! The meter and the PSU
agreed 100%. Can I marry my multimeter?&lt;/p&gt;

&lt;p&gt;We've got a new shiney one too, but the romance just isn't there:&lt;/p&gt;

&lt;!--% %image(images/mopi/test-rigs/workshop-20140409-153039-500.jpg, Test Rig, 500)--&gt;

&lt;p&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/mopi/test-rigs/workshop-20140409-153043-500.jpg" alt="Test Rig" width="500"&gt;&lt;/p&gt;

&lt;p&gt;Anyhow, after this work is finished, we will:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;run a bunch of battery tests using the 2600 mAh AAs that we're going to ship
  to backers who chose rewards with batteries in&lt;/li&gt;
&lt;li&gt;complete the user guide and developer documentation&lt;/li&gt;
&lt;li&gt;scratch our heads and wonder what we've forgotten?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here are the battery rigs waiting to go:&lt;/p&gt;

&lt;!--% %image(images/mopi/test-rigs/workshop-20140409-152525-500.jpg, Battery Rig, 500)--&gt;


&lt;p&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/mopi/test-rigs/workshop-20140409-152533-500.jpg" alt="Battery Rig" width="500"&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/mopi/test-rigs/workshop-20140409-152538-500.jpg" alt="Battery Rig" width="500"&gt;&lt;/p&gt;

&lt;p&gt;Do say: wow, you're really taking this seriously! Don't say: so, Professor
Cunningham, you popped out to buy a battery about a year ago and you haven't
actually finished yet?&lt;/p&gt;


&lt;!--%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%--&gt;
&lt;a class="cow-section-anchor" name="section-5."&gt;&lt;/a&gt;&lt;h1 class="cow-heading"&gt;&lt;span class="cow-sec-number"&gt;5. &lt;/span&gt;Linux is Lovely&lt;/h1&gt;

&lt;p&gt;One of the great things about the Pi is that it runs a &lt;a class="cow-url" href="http://fsf.org/"&gt;free
and open source&lt;/a&gt; software stack. This makes development so much easier &amp;mdash;
and here's an example of why...&lt;/p&gt;

&lt;!--%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%--&gt;
&lt;a class="cow-section-anchor" name="section-5.1."&gt;&lt;/a&gt;&lt;h2 class="cow-heading"&gt;&lt;span class="cow-sec-number"&gt;5.1. &lt;/span&gt;Enabling I2C and Debugging with I2C Tools&lt;/h2&gt;

&lt;p&gt;Now that MoPi uses I2C as its communication mechanism, we have to enable this
in the SimBaMon package. Here's how we do it&lt;span class="cow-footnote" name="footnote4"&gt;&lt;sup&gt;&lt;a href="#footnote4"&gt;4&lt;/a&gt;&lt;/sup&gt;&lt;/span&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;if i2c-tools isn't already installed, install it:
  &lt;ul&gt;
  &lt;li&gt;&lt;tt&gt;sudo apt-get install i2c-tools&lt;/tt&gt;&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;(you might as well do the same with &lt;tt&gt;python-smbus&lt;/tt&gt; for testing purpose)&lt;/li&gt;
&lt;li&gt;edit &lt;tt&gt;/etc/modules&lt;/tt&gt; and add lines &lt;tt&gt;i2c-bcm2708&lt;/tt&gt; and &lt;tt&gt;i2c-dev&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;edit &lt;tt&gt;/etc/modprobe.d/raspi-blacklist&lt;/tt&gt; (if it exists) and comment out the
  line &lt;tt&gt;blacklist i2c-bcm2708&lt;/tt&gt; (by adding a &lt;tt&gt;#&lt;/tt&gt; at the start of the line)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The process of developing our interface involved hacking the &lt;tt&gt;i2c-tools&lt;/tt&gt;
package to play with the multi-byte read facility in the &lt;tt&gt;i2cdump&lt;/tt&gt; command.
On a closed-source operating system, of course, you would be stymied at this
point. On Linux it is super easy :-)&lt;/p&gt;

&lt;p&gt;Here's how to pull down the source code, rebuild and test:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;edit &lt;tt&gt;/etc/apt/sources.lst&lt;/tt&gt; and add this line:
  &lt;ul&gt;
  &lt;li&gt;&lt;tt&gt;deb-src &lt;a class="cow-url" href="http://mirrordirector.raspbian.org/raspbian/"&gt;http://mirrordirector.raspbian.org/raspbian/&lt;/a&gt; wheezy main contrib
    non-free rpi&lt;/tt&gt;&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;then
  &lt;ul&gt;
  &lt;li&gt;&lt;tt&gt;sudo apt-get update&lt;/tt&gt;&lt;/li&gt;
  &lt;li&gt;&lt;tt&gt;mkdir i2c-tools&lt;/tt&gt;&lt;/li&gt;
  &lt;li&gt;&lt;tt&gt;cd i2c-tools&lt;/tt&gt;&lt;/li&gt;
  &lt;li&gt;&lt;tt&gt;apt-get source i2c-tools&lt;/tt&gt;&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;then &lt;tt&gt;make&lt;/tt&gt; will recompile (the tools are in the directory &lt;tt&gt;tools&lt;/tt&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hey presto, I can hack away at the C code and get immediate feedback with
commands like &lt;tt&gt;sudo tools/i2cdump -y 1 0x0b i&lt;/tt&gt; (where &lt;tt&gt;0x0b&lt;/tt&gt; is MoPi's
designated I2C address &amp;mdash; the smart battery address)&lt;span class="cow-footnote" name="footnote5"&gt;&lt;sup&gt;&lt;a href="#footnote5"&gt;5&lt;/a&gt;&lt;/sup&gt;&lt;/span&gt;.&lt;/p&gt;

&lt;!--%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%--&gt;

&lt;!--% %2 Joining In--&gt;


&lt;!--% You can see some of the checkins for the --&gt;

&lt;!--% TODO--&gt;



&lt;!--%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%--&gt;



&lt;p&gt;&lt;b&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/mopi.html"&gt;Read the main article&lt;/a&gt;.&lt;/b&gt;&lt;/p&gt;
&lt;span class="cow-footnote-section"&gt;
&lt;h1 class="cow-heading"&gt;Footnotes&lt;/h1&gt;
&lt;p&gt;&lt;ol&gt;
&lt;li&gt;
&lt;a class="cow-footnote-anchor" name="footnote1"&gt;&lt;/a&gt;
&lt;span class="cow-footnote-text" name="footnote1"&gt;He ended up in an ambulance being rushed to
hospital, but then it must be tough being a macho Aussie :-&lt;span class="cow-escape"&gt;)&lt;/span&gt;.&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a class="cow-footnote-anchor" name="footnote2"&gt;&lt;/a&gt;
&lt;span class="cow-footnote-text" name="footnote2"&gt;Quite why this little component has
gone out of stock is a mystery. Perhaps a containerful fell off a ship
somewhere? Or a huge client of the manufacturer ordered 10s of thousands? Or
perhaps Apple has identified us as an important competitor and is seeking to
slow down our meteoric rise? Answers on a postcard please...&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a class="cow-footnote-anchor" name="footnote3"&gt;&lt;/a&gt;
&lt;span class="cow-footnote-text" name="footnote3"&gt;Image from
&lt;a class="cow-url" href="http://setsail.com/submerged-shipping-containers/"&gt;http://setsail.com/submerged-shipping-containers/&lt;/a&gt;.&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a class="cow-footnote-anchor" name="footnote4"&gt;&lt;/a&gt;
&lt;span class="cow-footnote-text" name="footnote4"&gt;The key steps are
described in various places, including
&lt;a class="cow-url" href="https://learn.adafruit.com/adafruits-raspberry-pi-lesson-4-gpio-setup/configuring-i2c"&gt;on Adafruit&lt;/a&gt;.&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a class="cow-footnote-anchor" name="footnote5"&gt;&lt;/a&gt;
&lt;span class="cow-footnote-text" name="footnote5"&gt;For a revision 1
Pi &amp;mdash; the very early boards &amp;mdash; use &lt;tt&gt;0&lt;/tt&gt; instead of &lt;tt&gt;1&lt;/tt&gt;.&lt;/span&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;/p&gt;
&lt;/span&gt;
</summary><category term="kickstarter"></category><category term="batteries"></category><category term="mo-pi"></category><category term="pi-tronics"></category><category term="pi"></category><category term="raspberrypi"></category><category term="gate"></category></entry><entry><title>Pre-Production MoPi Boards</title><link href="http://pi.gate.ac.uk/posts/2014/03/27/pre-propduction-mopi/" rel="alternate"></link><updated>2014-03-27T00:00:00+00:00</updated><author><name>Hamish Cunningham</name></author><id>tag:pi.gate.ac.uk,2014-03-27:posts/2014/03/27/pre-propduction-mopi/</id><summary type="html">

&lt;p&gt;MoPi level 3 is now in testing :-)&lt;/p&gt;

&lt;p&gt;&lt;em&gt;[MoPi is &lt;b&gt;mobile&lt;/b&gt;, &lt;b&gt;hot-swap&lt;/b&gt; and &lt;b&gt;24/7 power&lt;/b&gt; for the Raspberry Pi.
&lt;a class="cow-url" href="/pages/get-mopi.html"&gt;How to order.&lt;/a&gt;]&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This is, we hope, the final pre-production prototype board. It differs quite a
lot from the previous prototype (which is the one you may have seen on our
&lt;a class="cow-url" href="https://www.kickstarter.com/projects/hamishcunningham/mopi-mobile-and-24-7-power-for-the-raspberry-pi"&gt;Kickstarter page&lt;/a&gt; &amp;mdash; if you missed it you can sign up for
&lt;a class="cow-url" href="/pages/get-mopi.html"&gt;pre-orders here&lt;/a&gt;). The success of the
crowdfunding campaign allowed us to add a bunch of new features (aka &lt;em&gt;stretch
goals&lt;/em&gt;). The new board has these new hardware and firmware features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;screw terminals&lt;/li&gt;
&lt;li&gt;stackable headers&lt;/li&gt;
&lt;li&gt;remoting pads &lt;/li&gt;
&lt;li&gt;self-resetting fuse &lt;/li&gt;
&lt;li&gt;two-way communication using I2C&lt;/li&gt;
&lt;li&gt;remote power-off&lt;/li&gt;
&lt;li&gt;3.3V supply mod&lt;/li&gt;
&lt;li&gt;timer-based wake-up&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This post describes some of our work on testing the new board and on updating
the &lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/mopi.html#simbamon"&gt;SimBaMon&lt;/a&gt; software that
manages it from the Pi. Then we look at a possible arrangement for adding
battery charging to the picture, and finish up with a revised delivery
schedule.&lt;/p&gt;


&lt;!--%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%--&gt;
&lt;a class="cow-section-anchor" name="section-1."&gt;&lt;/a&gt;&lt;h1 class="cow-heading"&gt;&lt;span class="cow-sec-number"&gt;1. &lt;/span&gt;The Final Prototype&lt;/h1&gt;

&lt;p&gt;Here's what the level 3 revision looks like (&lt;em&gt;without&lt;/em&gt; the wiring connector or
the GPIO connector or the power switch, which were soldered by hand after
these pictures were taken):&lt;/p&gt;

&lt;p&gt;Top of the board:
&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/mopi/pre-production-boards-02.jpg" alt="Pre-production MoPi top"&gt;&lt;/p&gt;

&lt;p&gt;Underneath the board:
&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/mopi/pre-production-boards-01.jpg" alt="Pre-production MoPi bottom"&gt;&lt;/p&gt;

&lt;p&gt;The stackable headers (for when MoPi is used in tandem with other add-on
boards) take up quite a lot of vertical space in order to provide a set of
pass-through pins above the MoPi board. Therefore we're offering two versions,
one with the stackable header and one with a standard low-profile header. (If
you're a backer you'll have had a message about filling in a survey form on
which one you prefer.)&lt;/p&gt;

&lt;p&gt;This is the stackable header that we're using (from Adafruit):
&lt;a class="cow-url" href="http://www.adafruit.com/products/1112"&gt;&lt;img class="cow-img" src="http://www.adafruit.com/images/medium/1112_MED.jpg" alt="Adafruit Stacking
Header"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you're opting for the low-profile header you can see an example here, on
the level 2 board:
&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/mopi/mopi-underside.jpg" alt="MoPi 2 underside"&gt;.&lt;/p&gt;


&lt;!--%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%--&gt;
&lt;a class="cow-section-anchor" name="section-2."&gt;&lt;/a&gt;&lt;h1 class="cow-heading"&gt;&lt;span class="cow-sec-number"&gt;2. &lt;/span&gt;A Possible Charging Circuit&lt;/h1&gt;

&lt;p&gt;One feature that we didn't manage to get sufficient backing for was battery
charging. This feature would be a great addition to MoPi, but it turns out to
be pretty difficult :-( In fact, dealing with lots of different chemistries
may not be possible at all on a tiny device like MoPi. (Most manufacturers of
charging ICs only support one chemistry per chip, for example, and some only
support charging a single cell per chip! Many chargers also rely on having a
temperature sensor in physical proximity to the batteries
themselves.)&lt;span class="cow-footnote" name="footnote1"&gt;&lt;sup&gt;&lt;a href="#footnote1"&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/span&gt; The other challenge is that we've got a really
small surface area to work with on the PCB.&lt;/p&gt;

&lt;p&gt;Still, a number of our backers want to use MoPi with a charger (e.g. to charge
batteries from solar panels during the day and then run on batteries
overnight), so we've been working on a configuration with an external charger.
For example, here's how we think a UPS configuration with charging could look:&lt;/p&gt;

&lt;p&gt;&lt;a class="cow-url" href="https://www.circuitlab.com/circuit/dsguk8/ups-configuration/"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/mopi/ups-with-charger.png" alt="UPS with charger" width="540" height="405"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We haven't tested this yet, but it &lt;em&gt;should&lt;/em&gt; work ;-)&lt;/p&gt;

&lt;p&gt;There are a number of potential gotchas in this type of circuit. For example,
when the mains power drops, the Pi must be powered pretty much instantly in
order to avoid triggering a reboot. There are no big capacitors on the Pi's
PCB to buffer its consumption of 300-500 mA without power. To deal with this
requirement we need MoPi to be always on and monitoring the Pi's 5V feed, even
when that feed isn't being supplied by MoPi itself. (This doesn't waste much
power as our microcontroller is very efficient.) When MoPi sees the 5V rail
start to fall the controller immediately enables its 5V stabilizer, taking
over supply of power to the Pi.&lt;/p&gt;

&lt;p&gt;In the circuit above, when there is mains, the charger is generating e.g. +12V
DC and the relay's coil is energized. The contact is switched to the normal
open position and is passing +12V to charge the batteries. When mains drops,
the relay is switching to the normal closed position and charging will stop.
MoPi is powered all the time &amp;mdash; and so, we hope, is the Pi. (What does the
diode do? When the +12V goes down, accumulated energy in the relay's coil must
be dissipated. The diode is shorting the coil to do that. Otherwise the
relay's contact will stay closed for a longer time.)&lt;/p&gt;

&lt;p&gt;More on this when we get time to test it out in practice.&lt;/p&gt;


&lt;!--%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%--&gt;
&lt;a class="cow-section-anchor" name="section-3."&gt;&lt;/a&gt;&lt;h1 class="cow-heading"&gt;&lt;span class="cow-sec-number"&gt;3. &lt;/span&gt;Revised Schedule&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;I love deadlines. I love the whooshing sound they make as they rush past.&lt;/em&gt;
[Douglas Adams]&lt;/p&gt;

&lt;p&gt;Ok, we're a little behind. We launched a week later than the plan (my fault &amp;mdash;
I didn't allow enough time for the Kickstarter approval process&lt;span class="cow-footnote" name="footnote2"&gt;&lt;sup&gt;&lt;a href="#footnote2"&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/span&gt;), and then
we ran for a week longer than planned, and then we met our stretch goals for
several things that required additional changes to the level 3 prototype
board, not to mention orders from suppliers we haven't used before.&lt;/p&gt;

&lt;p&gt;This means that we've only now started testing the level 3 board,
approximately a month behind the original schedule. We've also got some
significant changes to make to the division of responsibilities between the
software running on the Pi and the firmware running on the MoPi
microcontroller. The latter is extremely important to get right for the
production boards, as flashing a new firmware revision requires special
hardware.&lt;/p&gt;

&lt;p&gt;Our best guess for the delivery of version 4 (for our Kickstarter backers) and
then version 5 (for &lt;a class="cow-url" href="http://pi.gate.ac.uk/posts/2014/03/11/mopi-funded/"&gt;pre-order subscribers&lt;/a&gt; and for retail supply) is now as follows.&lt;/p&gt;

&lt;p&gt;(To cut a long story short we now plan to start delivering Kickstarter rewards
in May. If we hit issues with component supply or that require hardware
revision this might slip to June.)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Complete prototype board level 3. This is now done for the hardware and we
  have the boards in testing. Firmware and software changes remain to be done.
  Supply boards to Pimoroni who are designing the custom PiBow lid.
  &lt;ul&gt;
  &lt;li&gt;Completion: mid April 2014.&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Finalise the design of the production board. Fix any residual issues arising
  from testing. Incorporate any feedback from testers. Start ordering
  components, kit parts and PCBs in bulk. Finalise the pick-and-place
  manufacturing process and start pre-production testing. Continue work on the
  firmware and produce the production binary for flashing to the boards.
  Address any stability issues in the daemon code.
  &lt;ul&gt;
  &lt;li&gt;Completion: end April 2014.&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Start taking delivery of the production boards. (This is our last
  opportunity to make firmware changes. Test, test and test again!) The daemon
  needs to be very stable by now.
  &lt;ul&gt;
  &lt;li&gt;Completion: late May 2014.&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Fulfill early bird Kickstarter orders for all single item and kit rewards.
  Solicit additional GitHub committers for the daemon code to help with
  long-term maintainability.
  &lt;ul&gt;
  &lt;li&gt;Completion: end May 2014.&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Fulfill any remaining Kickstarter orders.
  &lt;ul&gt;
  &lt;li&gt;Completion: June 2014.&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Set up sustainable production process and retail board supply and fulfill
  retail pre-orders.
  &lt;ul&gt;
  &lt;li&gt;Completion: Summer 2014.&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Collapse in a small pile.&lt;span class="cow-footnote" name="footnote3"&gt;&lt;sup&gt;&lt;a href="#footnote3"&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;&lt;b&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/mopi.html"&gt;Read the main article&lt;/a&gt;.&lt;/b&gt;&lt;/p&gt;
&lt;span class="cow-footnote-section"&gt;
&lt;h1 class="cow-heading"&gt;Footnotes&lt;/h1&gt;
&lt;p&gt;&lt;ol&gt;
&lt;li&gt;
&lt;a class="cow-footnote-anchor" name="footnote1"&gt;&lt;/a&gt;
&lt;span class="cow-footnote-text" name="footnote1"&gt;We like our backers. We'd rather not incinerate them if
not completely necessary.&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a class="cow-footnote-anchor" name="footnote2"&gt;&lt;/a&gt;
&lt;span class="cow-footnote-text" name="footnote2"&gt;I
pressed the big green &lt;em&gt;submit&lt;/em&gt; button on the Kickstarter 10 days before our
planned launch date, which was the last Friday in January &amp;mdash; payday! The FAQ
said it could take up to a week to get approval, but I should have allowed
more time as in the end it took double that and we didn't launch until the
following Tuesday. This turned out to be a costly mistake on my part. I'd
lined up publicity from a really important site for that Friday, but by the
time we were ready the person concerned had gone on holiday for two weeks &amp;mdash;
and when they came back they had mysteriously changed their minds. From the
way the new backer curve played out during the month it was clear that
publication on that site would have made a huge difference &amp;mdash; perhaps double
the number of backers. This would have taken us over the magic 1000 units
milestone, where bulk component prices drop sharply, and allowed us to add
several really nice features to the board. Hey ho. Life is random!&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a class="cow-footnote-anchor" name="footnote3"&gt;&lt;/a&gt;
&lt;span class="cow-footnote-text" name="footnote3"&gt;I might bring this one forward a bit
  depending on whether my partner agrees I'm due for my mid-life crisis yet or
  not.&lt;/span&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;/p&gt;
&lt;/span&gt;
</summary><category term="kickstarter"></category><category term="batteries"></category><category term="mo-pi"></category><category term="pi-tronics"></category><category term="pi"></category><category term="raspberrypi"></category><category term="gate"></category></entry><entry><title>MoPi Power Board Funded to &gt;300% on Kickstarter :-)</title><link href="http://pi.gate.ac.uk/posts/2014/03/11/mopi-funded/" rel="alternate"></link><updated>2014-03-11T00:00:00+00:00</updated><author><name>Hamish Cunningham</name></author><id>tag:pi.gate.ac.uk,2014-03-11:posts/2014/03/11/mopi-funded/</id><summary type="html">

&lt;p&gt;A huge &lt;b&gt;thank you&lt;/b&gt; to all our Kickstarter backers! Our MoPi power management
board for the Pi will now go into production :-)&lt;/p&gt;

&lt;p&gt;If you missed &lt;a class="cow-url" href="http://kck.st/1gK5U3t"&gt;the Kickstarter&lt;/a&gt; and want to sign up
for the retail version, use the form below, or surf on over to
&lt;a class="cow-url" href="http://pi.gate.ac.uk/mopi/"&gt;the MoPi page&lt;/a&gt;.&lt;/p&gt;

&lt;!--% PREORDER FORM HERE--&gt;




&lt;p&gt;&lt;b&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/mopi.html"&gt;Read the main article&lt;/a&gt;.&lt;/b&gt;&lt;/p&gt;
</summary><category term="kickstarter"></category><category term="batteries"></category><category term="mo-pi"></category><category term="pi-tronics"></category><category term="pi"></category><category term="raspberrypi"></category><category term="gate"></category></entry><entry><title>Last Chance to Back Mobile Pi Kickstarter!</title><link href="http://pi.gate.ac.uk/posts/2014/03/07/mopi-last-chance/" rel="alternate"></link><updated>2014-03-07T00:00:00+00:00</updated><author><name>Hamish Cunningham</name></author><id>tag:pi.gate.ac.uk,2014-03-07:posts/2014/03/07/mopi-last-chance/</id><summary type="html">
&lt;h2 class="cow-heading"&gt;[MoPi is &lt;b&gt;mobile&lt;/b&gt;, &lt;b&gt;hot-swap&lt;/b&gt; and &lt;b&gt;24/7 power&lt;/b&gt; for the Raspberry Pi.
&lt;a class="cow-url" href="/pages/get-mopi.html"&gt;How to order.&lt;/a&gt;]&lt;/h2&gt;

&lt;p&gt;Our MoPi power management board for the Pi has had a fantastic response
&lt;a class="cow-url" href="http://kck.st/1gK5U3t"&gt;on Kickstarter&lt;/a&gt; (a big &lt;b&gt;thanks&lt;/b&gt; to all our backers!).&lt;/p&gt;

&lt;p&gt;This weekend is your last chance to back the project, which ends next Tuesday
(11th March 2014).&lt;/p&gt;

&lt;p&gt;MoPi is mobile and 24/7 power for the Pi. On your bike, up a tree, or for your
home server:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;multiple inputs: standard batteries, car power sockets, old laptop supplies,
  solar panels, ...&lt;/li&gt;
&lt;li&gt;hot-swap power replacement without stopping work&lt;/li&gt;
&lt;li&gt;shutdown the Pi cleanly when batteries discharge&lt;/li&gt;
&lt;li&gt;integrated on/off switch&lt;/li&gt;
&lt;li&gt;UPS (uninterruptible power) when using both batteries and mains&lt;/li&gt;
&lt;li&gt;on-board LED indicators and on-Pi notifications&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And it even fits in the Pibow (and other popular cases)...  More at
&lt;a class="cow-url" href="http://kck.st/1gK5U3t"&gt;http://kck.st/1gK5U3t&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;During the crowdfunding campaign we've unlocked these stretch goals: screw
terminals, stackable headers, remoting pads, self-resetting fuse, two-way
communication, remote power-off, 3.3V supply, timer-based wake-up.&lt;/p&gt;

&lt;p&gt;Next up: taking delivery of the 3rd set of prototype boards (the PCBs are on
order), implementing the new functions and testing, testing, testing... Then
volume production and delivery.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;&lt;a class="cow-url" href="http://kck.st/1gK5U3t"&gt;Join us?!&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;



&lt;p&gt;&lt;b&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/mopi.html"&gt;Read the main article&lt;/a&gt;.&lt;/b&gt;&lt;/p&gt;
</summary><category term="kickstarter"></category><category term="batteries"></category><category term="mo-pi"></category><category term="pi-tronics"></category><category term="pi"></category><category term="raspberrypi"></category><category term="gate"></category></entry><entry><title>A Pi Bank for Sheffield Schools</title><link href="http://pi.gate.ac.uk/posts/2014/03/02/schools-pi-bank/" rel="alternate"></link><updated>2014-03-02T00:00:00+00:00</updated><author><name>Hamish Cunningham</name></author><id>tag:pi.gate.ac.uk,2014-03-02:posts/2014/03/02/schools-pi-bank/</id><summary type="html">

&lt;p&gt;We're putting together a bunch of Pi kits to lend out to Sheffield Schools.&lt;/p&gt;

&lt;p&gt;This has been in the planning stages for a while now but a) we're finally
ready to go and b) &lt;a class="cow-url" href="https://twitter.com/stretchyboy"&gt;Martyn Eggleton&lt;/a&gt; from
&lt;a class="cow-url" href="http://access-space.org/"&gt;Access Space&lt;/a&gt; had the great idea of calling it a
&lt;em&gt;Pi Bank&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;a class="cow-url" href="http://www.sheffield.ac.uk/dcs/"&gt;Department of Computer Science&lt;/a&gt; at the
&lt;a class="cow-url" href="http://www.sheffield.ac.uk/"&gt;University of Sheffield&lt;/a&gt; has previously given
away 50 kits as part of our &lt;a class="cow-url" href="http://ambassadors.rcweb.dcs.shef.ac.uk/"&gt;Ambassadors programme&lt;/a&gt;, but there's also been a lot of interest from schools
who would like a visit with some Pi kits to get an idea of how they should get
started with the Pi in the new curricula and so on.&lt;/p&gt;

&lt;p&gt;Hence: a Pi Bank, with kits to take out around and about. The Uni has promised
to bung us some dosh to kick it off, and &lt;a class="cow-url" href="http://www.pimoroni.com/"&gt;Pimoroni&lt;/a&gt;
are going to chip in too :-)&lt;/p&gt;

&lt;p&gt;We'll include the basic Pi setup, and some very simple GPIO
&lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/basics.html"&gt;electronics
projects&lt;/a&gt;. Later we'll add materials for the camera and for
&lt;a class="cow-url" href="http://airpi.es/"&gt;AirPi&lt;/a&gt; (from our
&lt;a class="cow-url" href="https://www.kickstarter.com/projects/hamishcunningham/mopi-mobile-and-24-7-power-for-the-raspberry-pi"&gt;Mobile Pi project&lt;/a&gt;). If you have ideas about other good stuff to include
please leave a comment or tweet us on &lt;a class="cow-url" href="https://twitter.com/pitronics"&gt;@PiTronics&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/ambassadors/pi-oneers-003-300x450.jpg" alt="Pi-Oneers at the Cutlers
2013-10-02-children-and-animals.yam-Ambassadors day" width="300"&gt;&lt;/p&gt;



&lt;p&gt;&lt;b&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/schools.html"&gt;Read the main article&lt;/a&gt;.&lt;/b&gt;&lt;/p&gt;
</summary><category term="schools"></category><category term="education"></category><category term="pi"></category><category term="raspberrypi"></category><category term="gate"></category><category term="pi bank"></category></entry><entry><title>Interpreting AirPi Sensor Readings</title><link href="http://pi.gate.ac.uk/posts/2014/02/25/airpisensors/" rel="alternate"></link><updated>2014-02-25T00:00:00+00:00</updated><author><name>Fred Sonnenwald</name></author><id>tag:pi.gate.ac.uk,2014-02-25:posts/2014/02/25/airpisensors/</id><summary type="html">

&lt;!--%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%--&gt;


&lt;p&gt;For a few posts now I've been talking about the &lt;a class="cow-url" href="http://airpi.es/"&gt;AirPi&lt;/a&gt;, an
environmental monitoring platform for the RaspberryPi. At the end of
&lt;a class="cow-non-existant-url" href="/posts/2014/02/07/airpi1/"&gt;these&lt;/a&gt;&lt;a class="cow-non-existant-url" href="/posts/2014/02/14/airpiupdate/"&gt;two&lt;/a&gt;
posts, I made the point that while it's great that I've got output from the
AirPi it doesn't mean much if I don't know what it means. Today I'll be going
through the output (below) and looking at the sensor specs in more details to
get an idea of what the numbers mean. Apologies for a potentially boring very
texty post.&lt;/p&gt;

&lt;pre&gt;Temp-DHT:       26.1 C
Humidity:       35.7 %
Air Quality:    16920.56
Light Level:    4.91 Lux
UV Level:       0.48 UVI
Temp-BMP:       25.6 C
Pressure:       97912.6 Pa
&lt;/pre&gt;

&lt;pre&gt;Time: 2014-02-11 20:37:56.611572
Temperature: 32.4 C
Pressure: 977.71 hPa
Relative_Humidity: 25.7000007629 %
Light_Level: 7698.96193772 Ohms
Nitrogen_Dioxide: 7607.57314974 Ohms
Carbon_Monoxide: 301176.470588 Ohms
Volume: 90.3225806452 mV
Uploaded successfully&lt;/pre&gt;


&lt;p&gt;&lt;b&gt;The DHT22 (humidity)&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;This is the combined temperature moisture probe. It's an
&lt;a class="cow-url" href="https://www.adafruit.com/products/385"&gt;Adafruit&lt;/a&gt; special, which means I can
start there for learning more. &lt;a class="cow-url" href="/pages/airpi-files/DHT22.pdf"&gt;The datasheet&lt;/a&gt; is of course
another good source. The two important bits from the Adafruit page are these
two pieces of information:&lt;/p&gt;

&lt;p&gt;&lt;blockquote&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Good for 0-100% humidity readings with 2-5% accuracy&lt;/li&gt;
&lt;li&gt;Good for -40 to 80&amp;deg;C temperature readings &amp;plusmn;0.5&amp;deg;C accuracy&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/blockquote&gt;&lt;/p&gt;

&lt;p&gt;A responses range of 0% to 100% humidity means that it's OK to put a DHT22
pretty much anyplace other than a rainforest. A rainforest, and anyplace else
extraordinarily wet is a no go because checking the datasheet that's 100%
&lt;em&gt;Relative Humidity&lt;/em&gt; (RH). (See &lt;a class="cow-url" href="http://en.wikipedia.org/wiki/Humidity"&gt;this&lt;/a&gt; for a
bit more about humidity. Effectively once the air is super-saturated for the
temperature we're over 100% RH and so the sensor won't be very happy.&lt;/p&gt;

&lt;p&gt;Some good news is that the data sheet says this:&lt;/p&gt;

&lt;p&gt;&lt;blockquote&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Calibrated digital signal&lt;/li&gt;
&lt;li&gt;Fully interchangeable&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/blockquote&gt;&lt;/p&gt;

&lt;p&gt;Nominally then every sensor is identical and should give the same reading given
identical conditions. In practice this is very rarely the case. We know this
for sure given the &amp;quot;2-5&lt;span class="cow-escape"&gt;%&lt;/span&gt;&amp;quot; accuracy claim. Reading the datasheet again, this
comes across as typically &amp;plusmn;2% accuracy, with a maximum of &amp;plusmn;5%. In most cases
then the reading should be fairly accurate. Because the sensor is digital,
there's also no need to take into account anything in the circuit, so we don't
need to do anything to the values produced by the software.&lt;/p&gt;

&lt;p&gt;The sensor resolution is tenths of a percent (see the 35.7% of above). Based
on &amp;plusmn;2% accuracy, this number could be anywhere from 33.7% to 37.7% RH.
Hopefully sensor error falls along a normal distribution, meaning that if we
collect data on trends over time, something like a moving average will give a
more accurate reading by averaging out the effect of errors. The moral here is
don't be lulled by that extra 0.1% humidity, that on its own won't make a
difference.&lt;/p&gt;

&lt;p&gt;Repeatability is another factor to consider, independent of accuracy. The
datasheet says &amp;plusmn;1%, which means sequential readings given identical conditions
will still vary some. Then there's long term repeatability. &amp;quot;Long-term
stability&amp;quot; is in the datasheet as &amp;plusmn;0.5% a year, so given identical conditions
today and a year later, there could be a slight difference in RH, no matter
what. There's also something called
&lt;a class="cow-url" href="http://zone.ni.com/devzone/cda/ph/p/id/227#toc7"&gt;hysteresis&lt;/a&gt;, which is &amp;plusmn;0.3%.
This one's a bit tricky to explain. If the humidity was rising, the reading of
35.7% could have a different meaning than if the humidity was falling. In
either case the value could have been anywhere from 35.4% to 36.0%.&lt;/p&gt;

&lt;p&gt;You may wonder what's the point of having a sensor resolution of 0.1% RH if the
accuracy means it could practically be any old value. Imagine if you had 10 of
these, all measuring. That extra resolution could be used to narrow down what
the humidity was if you looked for a value that fell into the range of all the
accuracy windows of all the sensors. Plus it's not impossible that an increase
in humidity of 0.1% wouldn't be detected, you just need to take it with a grain
of salt.&lt;/p&gt;

&lt;p&gt;Considering the temperature side of the DHT22 some more, the accuracy,
resolution, and repeatability are all much better at &amp;plusmn;0.2&amp;deg;C, 0.1&amp;deg;C, and &amp;plusmn;0.2&amp;deg;C
according to the datasheet. I'm not quite sure where Adafruit got &amp;plusmn;0.5&amp;deg;C, but
I'm inclined to go with the datasheet. There's no stability or hysteresis
listed, so it looks like the temperature readings should be fairly accurate and
consistent over time.&lt;/p&gt;


&lt;p&gt;&lt;b&gt;The TGS2600&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;This is the combined Air Quality sensor. It's analogue so it goes through the
AirPi's Analogue-to-Digital Converter (ADC). We need to understand a bit more
about the electronics and AirPi software this time to understand what the value
of &amp;quot;16920.56&amp;quot; means. Looking through the data sheet gives us this formula:&lt;/p&gt;

&lt;p&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/environment/sensors/tgs2600/formula.png" alt="Rs = (Vc x Rl)/Vout - Rl" width="192" height="58"&gt;&lt;/p&gt;

&lt;p&gt;Where &lt;em&gt;Rs&lt;/em&gt; is sensor resistance, Vc is sensor input voltage, &lt;em&gt;Rl&lt;/em&gt; is load
resistance, and &lt;em&gt;Vout&lt;/em&gt; is measured sensor voltage. Looking through the
&lt;a class="cow-url" href="https://github.com/tomhartley/AirPi/blob/non-modular/interfaces/MCP3008/AQSensor.py#L19"&gt;AirPi code&lt;/a&gt;, we see this:&lt;/p&gt;

&lt;p&gt;&lt;pre class="prettyprint lang-python"&gt;
resistance = (vin/result - 1)*self.pullup
&lt;/pre&gt;You may notice that if you multiply &lt;tt&gt;self.pullup&lt;/tt&gt; inside the brackets you end
up with the formula for the datasheet. You find if you follow the variables in
the code and do comparisons of the AirPi circuit diagram and the &amp;quot;Basic
Measuring Circuit&amp;quot; diagram in the datasheet, that we're looking at the same
things. So that value of 16920.56 is the &lt;em&gt;Rs&lt;/em&gt; value, or the resistance across
the TGS2600 sensor.&lt;/p&gt;

&lt;p&gt;The next question then now that we know exactly what 16920 is, is what does it
mean? For that we have to know what the TGS2600 is sensitive to. It says right
at the top of the datasheet &amp;quot;for the detection of Air Contaminants&amp;quot; but we can
be a bit more precise than that. They specifically list sensitivity to methane,
carbon monoxide (CO), iso-butane, ethanol, and hydrogen. Of course how they do
this is a bit round about. They do it by showing this graph:&lt;/p&gt;

&lt;p&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/environment/sensors/tgs2600/sensitivity_characteristics.png" alt="TGS2600 Sensitivity Characteristics"&gt;&lt;/p&gt;

&lt;p&gt;This shows a link between the concentration of the different chemicals in
parts-per-million (ppm)&amp;mdash;ppm can be thought of like percent, except for one in
one million rather than one in one hundred. It gives us this information in
relation to &amp;quot;&lt;em&gt;Rs/Ro&lt;/em&gt;&amp;quot;, which is the ratio of sensor resistance, which is what
the AirPi actually measures to &amp;quot;sensor resistance in fresh air&amp;quot;. Which is
unfortunate. This tells us the sensor really needs calibration with fresh air
before we have a meaningful reading. How else do we know what the resistance
in fresh air is? And even then, we still don't know what gas has caused the
quality to drop. 50 ppm of CO or 4 ppm of iso-butane?&lt;/p&gt;

&lt;p&gt;But wait! There's more! Next to the graph on sensitivity characteristics
there's this beauty:&lt;/p&gt;

&lt;p&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/environment/sensors/tgs2600/temperature_characteristics.png" alt="TGS2600 Temperature/Humidity Dependency"&gt;&lt;/p&gt;

&lt;p&gt;So not only does the sensor react to air quality, but humidity and temperature
as well. This actually isn't that uncommon, but means a correction factor needs
to be applied to each reading. Happily the DHT22 can be used to work this out.
Say it's 30&amp;deg; out at 50% RH. We read across the x-axis, then interpolate halfway
between the 65% and 35% lines to tell us that in fresh air &lt;em&gt;Rs/Ro&lt;/em&gt; would read
just over 0.9, so call it 0.91. We need to divide the &lt;em&gt;Rs&lt;/em&gt; reading by this
value to correct it to what it would be at the standard 20&amp;deg;C 65% RH they used
for the sensitivity graph.&lt;/p&gt;

&lt;p&gt;The need for calibration and taking into account temperature and humidity is
discouraging, but the sensor can still give useful information. Someone using
the data from it simply needs to be aware of these things so that he doesn't
draw incorrect conclusions. For example at the very least the temperature and
humidity corrections should be applied. The fresh air calibration probably
isn't really necessary given that you don't know what gas is affecting it. I
suspect though that it can be worked out approximately by looking at a long
data series that has been corrected for temperature and humidity. The peak &lt;em&gt;Rs&lt;/em&gt;
value measured is probably the &amp;quot;fresh air&amp;quot; quality, or a &amp;quot;close enough&amp;quot; guess.&lt;/p&gt;

&lt;p&gt;You may notice that I haven't said anything about accuracy for the TGS2600.
That's because the datasheet doesn't say much about it other than 10 ppm H2
(that's hydrogen). The DHT22 also had an on-board analog to digital conversion
that in this case is being handled by the ADC, which I think has a high enough
resolution that's it's a non-issue. All things considered I suspect that the
ultimate lack of reliable calibration means that accuracy is a non-issue. Just
take the reading with a grain of salt and remember to correct for temperature
and humidity.&lt;/p&gt;


&lt;p&gt;&lt;b&gt;The Light-Dependent Resistor (LDR), GL5528&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;This one, I have to admit before actually looking into it, I thought was going
to be meaningless. Mostly because I remember playing with an LDR when I was
about 8 to turn lights on and off in the dark of my closet. Because of that I
just could not see how you could use an LDR to get to a Lux reading.
(&lt;a class="cow-url" href="http://en.wikipedia.org/wiki/Lux"&gt;Lux&lt;/a&gt; is the standard light measure, the
same way that meters are for distance.) However, looking at the
&lt;a class="cow-url" href="/pages/airpi-files/PD0001.pdf"&gt;GL5528 datasheet&lt;/a&gt; I was surprised to find that there
actually is a proper relationship between resistance and lux, or illuminance.&lt;/p&gt;

&lt;p&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/environment/sensors/ldr/graph.png" alt="GL5528 luminance vs
photo-resistance"&gt;&lt;/p&gt;

&lt;p&gt;On a &lt;a class="cow-url" href="http://en.wikipedia.org/wiki/Log-log_plot"&gt;log-log graph&lt;/a&gt;, there's an
approximately linear relationship between the two which means that if we
calculate the resistance of the LDR, we can estimate the lux fairly reliably.
I use qualitatives like &amp;quot;approximately&amp;quot; and &amp;quot;fairly&amp;quot; because there's that gray
region on the graph&amp;mdash;the relation can be anywhere in there. That's quite the
potential error in there, and the darker it is the greater that uncertainty is
due to the log-log scale. We can still approximate things though and hope for
the best.&lt;/p&gt;

&lt;p&gt;Now how to do that approximation. Looking in the
&lt;a class="cow-url" href="https://github.com/tomhartley/AirPi/blob/non-modular/interfaces/MCP3008/LightSensor.py#L14"&gt;AirPi code&lt;/a&gt; I downloaded that matches the directions:&lt;/p&gt;

&lt;p&gt;&lt;pre class="prettyprint lang-python"&gt;
rs = ((3.3 - vout) / vout) * 5.6
&lt;/pre&gt;To which I say, &amp;quot;what?&amp;quot;, because that's the code that produces the lux number
of &amp;quot;4.91 Lux&amp;quot; I posted above. I believe that's just plain wrong, because
there's two things wrong here. There's nothing taking into account the pull-up
resistor of 2.2K&amp;Omega; for starters. The 5.6 I could imagine to be a calibration
co-efficient, and I suppose that nominally it could take into account that 
resistor, but then what takes care of the log-log relation ship? I'd expect to
see either an &lt;tt&gt;ln()&lt;/tt&gt; or an &lt;tt&gt;exp()&lt;/tt&gt; because of that. It could simplify all of
that in as I haven't worked through the math there yet, but for the same reason
a teacher doesn't like it when you don't show your work, I'm confused. So I set
out to work out what's going on.&lt;/p&gt;

&lt;p&gt;The first thing I do is check the code that goes with the updated hardware
revision and
&lt;a class="cow-url" href="https://github.com/tomhartley/AirPi/blob/master/sensors/analogue.py#L41"&gt;see this&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;pre class="prettyprint lang-python"&gt;
resOut = self.pullUp/((vin/vout)-1)
&lt;/pre&gt;Ah ha. This looks better, more like what we say for the TGS2600 above when we
were calculating resistance, except in this case it's a one-over (as in one
divided by) relation. This makes sense because it's a pull-up instead of a
pull-down situation (vin and vout are reversed). On a side note, this sort
of calculation is called a &lt;a class="cow-url" href="http://en.wikipedia.org/wiki/Voltage_divider"&gt;voltage divider&lt;/a&gt;. Anyway, when the new software says &amp;quot;7698.96193772 Ohms&amp;quot; for
the light sensor that's exactly what it is. It still needs to be converted to
lux, but at least it's clearer that this is the case.&lt;/p&gt;

&lt;p&gt;The conversion should therefore be pretty straightforward (once the wacky math
on the older software is reversed and the correct resistance value obtained).
It is too, after wrapping one's head around the log-log. Fortunately the fact
that it's log-log works for us, making it easier to deal with. Essentially we
can treat it as a regular linear plot of &lt;em&gt;y = mx + b&lt;/em&gt;, but replacing &lt;em&gt;y&lt;/em&gt; and
&lt;em&gt;x&lt;/em&gt; with &lt;tt&gt;ln(&lt;/tt&gt;&lt;em&gt;y&lt;/em&gt;&lt;tt&gt;)&lt;/tt&gt; and &lt;tt&gt;ln(&lt;/tt&gt;&lt;em&gt;x&lt;/em&gt;&lt;tt&gt;)&lt;/tt&gt; (natural logarithms). At which point it's
only a minor nuisance to fire up Matlab (or Octave) and use &lt;tt&gt;polyfit()&lt;/tt&gt; to work
out a linear regression after reading some values off the graph:&lt;/p&gt;

&lt;p&gt;&lt;pre class="prettyprint lang-octave"&gt;
&amp;gt;&amp;gt; polyfit(log([1 2 100]), log([60 40 2.8]), 1)

ans =

   -0.6704    4.1215

&lt;/pre&gt;Plug that into &lt;em&gt;y = mx + b&lt;/em&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/environment/sensors/ldr/luxformula1.png" alt="ln(Rs/1000) = -0.6704ln(lux)+4.125" width="418" height="65"&gt;&lt;/p&gt;

&lt;p&gt;Apply some algebra and rearrange to solve for the lux value given resistance:&lt;/p&gt;

&lt;p&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/environment/sensors/ldr/luxformula2.png" alt="lux = e^a, a = (ln(Rs/1000)-4.125)/-0.6704" width="391" height="80"&gt;&lt;/p&gt;

&lt;p&gt;Viola! This should give me a value that I'm confident reflects reality
somewhat. (&lt;em&gt;Rs&lt;/em&gt; is divided by 1000 because the y-axis of the graph above has K&amp;Omega;
for the units.) I've undoubtedly introduced some error by reading off values
from the graph, but this could be compensated for by adding more values. I
suspect that won't have much of an impact though. Overall I wouldn't use this
or the LDR for life or death situations, but it's close enough. Keep in mind
that if your LDR isn't a 5528 then the function above probably won't be 
correct anymore and should be recalculated off the appropriate datasheet.&lt;/p&gt;


&lt;p&gt;&lt;b&gt;UV sensor UVI-01&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Really, I think this is one of the coolest bits of the AirPi and I think it's a
shame it's missing from the newer hardware revision. I suppose I can see why
you might replace it with a microphone, but really, UV. How awesome? A measure
of direct sunlight intensity. Potentially something there in calculating
evapo-transpiration, a key part of catchment models. (So that you know how much
rain water can be sucked into the ground!) Also used for working out how much
to water crops.&lt;/p&gt;

&lt;p&gt;Right, the sensor. I have no idea electrically how this thing that looks like
an LED is an LED in reverse, but the rest of it makes some sort of sense. It
had better given that last time I spent a good while working out that I plugged
it in backwards. What that means though is that when I see
&lt;a class="cow-url" href="https://github.com/tomhartley/AirPi/blob/non-modular/interfaces/MCP3008/LightSensor.py#L17"&gt;this&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;pre class="prettyprint lang-python"&gt;
sensorVoltage = vout / 471
millivolts = sensorVoltage * 1000
UVI = millivolts * (5.25/20)
&lt;/pre&gt;It actually makes sense. Why divide by 471? That's because that's the ratio
of the two resistors around the CA314 op-amp. According to 
&lt;a class="cow-url" href="http://airpi.es/step2.php"&gt;the directions&lt;/a&gt; you're supposed to use a 10K&amp;Omega; and
a 4.7M&amp;Omega; for R1 and R2 respectively, that's a ratio of 470, or the amplification
ratio. It's specifically that ratio that's important so you could essentially
use anything in the 1K&amp;Omega; to 30K&amp;Omega; range for R1 as long as R2 was 470 times
greater. Can't make 470 times? Edit that line of code with the 471 divider. (I
used 1K&amp;Omega; and 470K&amp;Omega;, because the Maplin resistor kit doesn't go over 1M&amp;Omega;.)&lt;/p&gt;

&lt;p&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/environment/airpi/op-amp circuit.png"&gt;&lt;/p&gt;

&lt;p&gt;Then why multiply by 1000? That's to get the reading in mV. Because unlike the
previous sensors, which measure by resistance, the UVI-01 is a direct voltage
reading. Which is why the third line of code there is a multiplication by a
factor. That's a factory standard calibration. You can see it in the following
graph from the &lt;a class="cow-url" href="/pages/airpi-files/UVI-01-E.pdf"&gt;datasheet&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/environment/sensors/uv/uv.png"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/environment/sensors/uv/uv_small.png"&gt;&lt;/a&gt;
&lt;em&gt;Click for a graph you can actually read...&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;There are four very linear lines, for 0.5M&amp;Omega;, 1M&amp;Omega;, 2M&amp;Omega;, and 3M&amp;Omega;, resistor put in
parallel with the UVI-01. The AirPi directions follow the factory
recommendation and use a 1M&amp;Omega; resistor. It's just a matter of reading off the
purple lines to get the 5.25 and 20 as the slope of the line, it's very
convenient as there's no y-intercept. Just read over and down from the 20.00,
and there we have it. A very nice, easy sensor to read with what appears to be
a fairly reliable direct reading of
&lt;a class="cow-url" href="http://en.wikipedia.org/wiki/Ultraviolet_index"&gt;UV Index&lt;/a&gt;, or UVI.&lt;/p&gt;

&lt;p&gt;There's just one caveat&amp;mdash;&amp;quot;Inaccuracy: 15&lt;span class="cow-escape"&gt;%&lt;/span&gt;&amp;quot;. So given higher levels of UV, i.e.,
when it's more critical, the accuracy goes down. At least, that's how I read
it. So on normal day with a UVI of 5, it could be somewhere between 4.25 and
5.75. That window gets bigger at higher readings. Although to be fair, if we
actually look at the scale on that nice Wikipedia link, at higher values of
UVI, we'd be roasting to a crisp anyway, no matter the accuracy. &lt;/p&gt;

&lt;p&gt;Simply knowing the UVI value is up there is enough. Given we know about the
inaccuracy though we can stick some error bars on there and be informed. It's
still probably more reliable than a TGS2600 or an LDR because it doesn't
require a specific calibration. Full steam ahead for knowing when you need
sunblock!&lt;/p&gt;


&lt;p&gt;&lt;b&gt;BMP085 pressure sensor&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Another &lt;a class="cow-url" href="https://www.adafruit.com/products/391"&gt;Adafruit favorite&lt;/a&gt;. I
immediately like it for &lt;a class="cow-url" href="/pages/airpi-files/BMP085_DataSheet_Rev.1.0_01July2008.pdf"&gt;another reason&lt;/a&gt;: &amp;quot;Fully calibrated&amp;quot;. What they do is they run a calibration of
the sensor in the factory and burn the calibration co-efficients into the chip.
When the AirPi software reads the value off the pressure transducer, it then
applies this in-built calibration. We can therefore be reasonably confident in
the value being obtained.&lt;/p&gt;

&lt;p&gt;Provided we're aware of the inherent sensor accuracy and resolution. In this
case the datasheet says typically &amp;plusmn;1.0 hPa with a maximum of &amp;plusmn;2.5 hPa for
pressure between 700 and 1100 hPa between 0&amp;deg;C and 60&amp;deg;C. This gets a bit worse
at even lower pressures (300 to 700 hPa a maximum of &amp;plusmn;3.0 hPa) and temperatures
(300 to 1100 hPa at -20&amp;deg;C to 0&amp;deg;C typically &amp;plusmn;1.5 hPa  and a maximum of &amp;plusmn;4.0
hPa). For the temperature readings that the BMP085 takes we're looking at
typically &amp;plusmn;0.5&amp;deg;C with a maximum of &amp;plusmn;1.5&amp;deg;C. (This is a little bit worse than the
DHT22.)&lt;/p&gt;

&lt;p&gt;The BMP085 also has one other interesting setting, which is oversampling.
(&amp;quot;mode&amp;quot; in the AirPi software.) The sensor in this case can be told to take
multiple readings internally and return an average value. Because they're very
close in time the assumption is that they're effectively the same reading (i.e.
the pressure won't have changed much) and so averaging will cancel out any
other effects that would introduce noise into the pressure reading. By default
the AirPi uses the setting that averages 2 readings. The sensor is capable of
doing a maximum of 8 readings internally, but there's a penalty in time and
power consumption for doing this. The latter probably has more impact because
the software isn't running as quickly as 25 ms resolution (the time for 8
readings).&lt;/p&gt;

&lt;p&gt;So taking this all into account, the temperature reading won't be so good, but
the pressure reading should be excellent. Remember that
&lt;a class="cow-url" href="http://en.wikipedia.org/wiki/Atmospheric_pressure#Standard_atmospheric_pressure"&gt;standard atmospheric pressure&lt;/a&gt; is 1013.25 hPa, which means that &amp;plusmn;1.0 hPa is
actually &amp;plusmn;0.1%. As pressure gets lower that becomes a slightly higher fraction,
but even under the worst of conditions (cold weather and low pressure) we're
still only talking about &amp;plusmn;0.5% error or so. I feel here Bosch lives up to the
brand name recognition and delivers a good product. It's similar to the feeling
I got using
&lt;a class="cow-url" href="http://www.ge-mcs.com/en/pressure-and-level/depth-and-level/ptxpdcr-1830.html"&gt;GE Sensing PDCR 1830 Druck Pressure Sensors&lt;/a&gt; in academic research. (Although
there it's &amp;plusmn;0.06% error!)&lt;/p&gt;

&lt;p&gt;The next thing is to talk bout how the AirPi software uses the data from the
sensor. The data sheet suggests two uses and both are implemented in the AirPi
software. The first is to use the pressure to calculate the altitude. The
higher up you are the lower the pressure will be and this expresses as an
exponential function:&lt;/p&gt;

&lt;p&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/environment/sensors/bmp085/pressure_alt.png" alt="altitude = 44330 x (1-(p/p0)^(1/5.255))" width="394" height="76"&gt;&lt;/p&gt;

&lt;p&gt;Here &lt;em&gt;p0&lt;/em&gt; is pressure at sea level, so 1013.25 hPa and &lt;em&gt;p&lt;/em&gt; is the pressure
reading from the sensor.&lt;/p&gt;

&lt;p&gt;The second use is to calculate the pressure at sea level given a known
altitude:&lt;/p&gt;

&lt;p&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/environment/sensors/bmp085/pressure_sea.png" alt="p0 = p / ((1 - altitude/44330)^5.255)" width="247" height="63"&gt;&lt;/p&gt;

&lt;p&gt;It's the second of these which is used by default in the AirPi software,
assuming an altitude of 35 m above sea level. Sheffield is a hilly place and as
a result altitude over the area actually varies quite a bit. I think my house
is a bit higher given that when the AirPi says 98.2 hPa, the barometer on my
wall reads 97.1 hPa. Which brings me to my point here: I'd rather have the
pressure reading as is, just like the wall barometer. While the sensor is
accurate enough to give a precise pressure reading, the readings are really
only interesting to me for the trends they show. That is to say, to help me
predict the weather! (Typically low pressure = bad weather, high pressure =
good weather.)&lt;/p&gt;


&lt;p&gt;&lt;b&gt;The rest of the sensors&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;I've only gone through the sensors I have on my AirPi breadboard. I leave the
remaining microphone, NO and CO meters, as an exercise for the reader. Or
another later article. What I have here is enough so that in a post or two I
can look at my data and see what there is to see.&lt;/p&gt;


&lt;p&gt;&lt;b&gt;Summary&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;There are two major things of interesting in a monitoring setup like this.
What's happening now, and what's happened previously. Here's what I think
everything is best for:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;DHT22 Humidity: Trends&lt;/li&gt;
&lt;li&gt;DHT22 Temperature: Current readings and trends&lt;/li&gt;
&lt;li&gt;TGS2600: Trends&lt;/li&gt;
&lt;li&gt;LDR (GL5528): Trends&lt;/li&gt;
&lt;li&gt;UVI-01: Current readings and trends&lt;/li&gt;
&lt;li&gt;BMP085 Pressure:  Current readings and trends&lt;/li&gt;
&lt;li&gt;BMP085 Temperature: Trends&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I suspect that overall what's going to be really exciting is looking at
magnitude of change over time, rather than looking at specific values. Stay
tuned to see what my room has been like since I built the AirPi!&lt;/p&gt;


&lt;script src="https://google-code-prettify.googlecode.com/svn/loader/run_prettify.js"&gt;&lt;/script&gt;
</summary><category term="airpi"></category><category term="hardware"></category><category term="pi-tronics"></category><category term="environmental"></category><category term="pi"></category><category term="raspberrypi"></category><category term="gate"></category></entry><entry><title>AirPi Update - A kit!</title><link href="http://pi.gate.ac.uk/posts/2014/02/14/airpiupdate/" rel="alternate"></link><updated>2014-02-14T00:00:00+00:00</updated><author><name>Fred Sonnenwald</name></author><id>tag:pi.gate.ac.uk,2014-02-14:posts/2014/02/14/airpiupdate/</id><summary type="html">

&lt;!--%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%--&gt;


&lt;p&gt;&lt;a class="cow-non-existant-url" href="/posts/2014/02/07/airpi1/"&gt;Last time&lt;/a&gt; I introduced everyone to the
&lt;a class="cow-url" href="http://airpi.es/"&gt;AirPi&lt;/a&gt;, an open environmental sensor platform. They
provide a list of components, schematics, and software for you to build a
rather tiny Pi sized weather station. I went through the process of ordering
the parts and bread-boarding it up before. They also, however, provide
everything in a convenient ready-to-solder kit, which is what I'll be writing
about today.&lt;/p&gt;

&lt;p&gt;Hamish went over to Cambridge for
&lt;a class="cow-url" href="https://www.facebook.com/cambridgeraspberryjam"&gt;CamJam&lt;/a&gt;, the local
RaspberryJam they've got over there. He had the chance to meet with some
interesting folks, including Tom Hartley, one of the AirPi developers. He also
picked up one of those kits so that I had something new to play with while
some data records on my breadboard system.&lt;/p&gt;

&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/environment/airpi1.2/box.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/environment/airpi1.2/thumbs/box.jpg"&gt;&lt;/a&gt;
&lt;em&gt;Kitbox&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/environment/airpi1.2/boxcontents.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/environment/airpi1.2/thumbs/boxcontents.jpg"&gt;&lt;/a&gt;
&lt;em&gt;And all the stuff in it&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The first thing to know is that this is AirPi v1.2. This isn't what the
directions on the site are currently for. This is a newer hardware revision,
with a slightly different load-out. The primary difference is that the UV sensor
has been replaced with a microphone. I'm not too sure about this change, but it
means that the CA314 op-amp has been replaced with a MCP6283.&lt;/p&gt;

&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/environment/airpi1.2/pcbtop.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/environment/airpi1.2/thumbs/pcbtop.jpg"&gt;&lt;/a&gt;
&lt;em&gt;PCB top&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/environment/airpi1.2/pcbbottom.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/environment/airpi1.2/thumbs/pcbbottom.jpg"&gt;&lt;/a&gt;
&lt;em&gt;PCB bottom&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;You can also see there on the PCB spots for two LEDs (LED1 and LED2). These
aren't new hardware per-say, they just may be new to you. The LEDs are included
in the assembly directions, I simply didn't include them as I didn't feel the
need for more blinking lights on the Pi. It's customisable hardware after
all&amp;mdash;gotta take advantage of that! The AirPi does itself. The kit comes with
the separate MICS-2710 (NO2) and MICS-5525 (CO) sensors, which I couldn't get
for my breadboard.&lt;/p&gt;

&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/environment/airpi1.2/mostlydone.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/environment/airpi1.2/thumbs/mostlydone.jpg"&gt;&lt;/a&gt;
&lt;em&gt;Just about everything soldered on&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/environment/airpi1.2/mostlydonebottom.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/environment/airpi1.2/thumbs/mostlydonebottom.jpg"&gt;&lt;/a&gt;
&lt;em&gt;You can see where the board has melted some&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This took me about an hour and a half to do. The only thing that's not soldered
yet is the connector for the Pi. I was very involved in actually sorting
everything out though that I forgot to take more pictures of the process. It's
like following a set of LEGO directions so from that point of view it's easy.
The catch is that soldering is sometimes hard. Which, as I've pointed out
above, has led to me melting the board a little in some places, and odd shaped
blobs of solder in others.&lt;/p&gt;

&lt;p&gt;You can see on the PCB the empty TGS2600 location, which is fine as it's been
replaced with the MICS sensors. You can also see one resistor of a different
color. That's because somehow, probably sometime between the kit being made and
me getting it, a 330&amp;Omega; resistor was lost. Fortunately my trusty Maplin kit of
resistors saves the day, but I must say that working out which resistor was
which was the hardest part of doing this kit. The colors on the printed card
are hard to distinguish, and it's hard to distinguish them on the resistors
themselves. Impossible on the tiny little ones, like the 100&amp;Omega; and 100K&amp;Omega;.&lt;/p&gt;

&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/environment/airpi1.2/done.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/environment/airpi1.2/thumbs/done.jpg"&gt;&lt;/a&gt;
&lt;em&gt;Done!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/environment/airpi1.2/donebottom.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/environment/airpi1.2/thumbs/donebottom.jpg"&gt;&lt;/a&gt;
&lt;em&gt;And the reverse&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Soldering on the Pi connector was interesting. 26 very tightly spaced little
contacts that I soldered from the bottom. That side with a huge chunk of
plastic in the way. Somehow it seemed like a better idea than approaching it
from the top, but I don't know really. I used a GPIO ribbon cable to work out
how much the connector on the bottom needed to stick through.&lt;/p&gt;

&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/environment/airpi1.2/onapi.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/environment/airpi1.2/thumbs/onapi.jpg"&gt;&lt;/a&gt;
&lt;em&gt;Sticking it on a pi&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/environment/airpi1.2/onapiside.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/environment/airpi1.2/thumbs/onapiside.jpg"&gt;&lt;/a&gt;
&lt;em&gt;A pretty compact package&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;After putting the AirPi on top of a Pi, I realised that the placing GPIO header
placing turned out to be near perfect. But due to dumb luck. If I hadn't had
the GPIO ribbon idea, I would have would up having to re-solder it. You can see
how darn near it is to there not being enough clearance. Ouch.&lt;/p&gt;

&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/environment/airpi1.2/onapiside2.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/environment/airpi1.2/thumbs/onapiside2.jpg"&gt;&lt;/a&gt;
&lt;em&gt;Eeek! That's close!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;And then to test if it works. It's important to note that the different board
has a different software version to go with it, this time off of the trunk of
the &lt;a class="cow-url" href="https://github.com/tomhartley/AirPi"&gt;Git repository&lt;/a&gt;. Configuring is
easier this time around though as the software matches the hardware perfectly.
Only two minor configuration changes are necessary. One in sensors.cfg to set
the correct I2C bus. The other in outputs.cfg to disable Xively as I'm only
testing.&lt;/p&gt;

&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/environment/airpi1.2/takingareading.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/environment/airpi1.2/thumbs/takingareading.jpg"&gt;&lt;/a&gt;
&lt;em&gt;I put it in my half disassembled LEGO case for powering up to test&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It runs perfectly out of the box! You can see the green LED lighting up on a
reading. Output is shown below. I'm not entirely convinced the temperature is
correct, but everything else is reasonable, I think... At this point I struggle
from the same problem as I did last time, which is I still haven't quite worked
out how to interpret the data. I admit though that this version of the software
is more honest. Calling it Ohms for an analogue sensor reading without
calibration is probably the correct way to go.&lt;/p&gt;

&lt;pre&gt;Time: 2014-02-11 20:37:56.611572
Temperature: 32.4 C
Pressure: 977.71 hPa
Relative_Humidity: 25.7000007629 %
Light_Level: 7698.96193772 Ohms
Nitrogen_Dioxide: 7607.57314974 Ohms
Carbon_Monoxide: 301176.470588 Ohms
Volume: 90.3225806452 mV
Uploaded successfully&lt;/pre&gt;

&lt;p&gt;I'm not entirely convinced about the utility of the microphone. Maybe an
indirect measure of wind? All told though a pleasant and funkit to build. The
difficulty is about average. Some bits to solder are tricky, but nothing's
impossible, especially if you have some previous experience. This kit has now
been sent off to Lubo, our electronics specialist, for additional compatibility
testing with the MoPi. In the meantime I continue to collect data from my
breadboard prototype to see what I can do with it. Stay tuned for a report!&lt;/p&gt;

&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/environment/airpi1.2/theend.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/environment/airpi1.2/thumbs/theend.jpg"&gt;&lt;/a&gt;
&lt;em&gt;The end&lt;/em&gt;&lt;/p&gt;


</summary><category term="airpi"></category><category term="hardware"></category><category term="pi-tronics"></category><category term="environmental"></category><category term="pi"></category><category term="raspberrypi"></category><category term="gate"></category></entry><entry><title>Stretch! Bigger Plans for Mobile Pi Kickstarter</title><link href="http://pi.gate.ac.uk/posts/2014/02/12/stretch-goals/" rel="alternate"></link><updated>2014-02-12T00:00:00+00:00</updated><author><name>Hamish Cunningham</name></author><id>tag:pi.gate.ac.uk,2014-02-12:posts/2014/02/12/stretch-goals/</id><summary type="html">

&lt;p&gt;Our Kickstarter has got off to a flying start (thanks to all our backers!) :-)&lt;/p&gt;
&lt;h2 class="cow-heading"&gt;[MoPi is &lt;b&gt;mobile&lt;/b&gt;, &lt;b&gt;hot-swap&lt;/b&gt; and &lt;b&gt;24/7 power&lt;/b&gt; for the Raspberry Pi.
&lt;a class="cow-url" href="/pages/get-mopi.html"&gt;How to order.&lt;/a&gt;]&lt;/h2&gt;

&lt;p&gt;Now that we know we can deliver the basic device we've defined &lt;em&gt;Stretch Goals&lt;/em&gt;
to add to the crowdfunding project. They include a bunch of improvements,
extra functions and extra rewards that we can deliver if we attract more
backers. They're now up on the main page &amp;mdash; &lt;a class="cow-url" href="http://tinyurl.com/mobile-pi"&gt;http://tinyurl.com/mobile-pi&lt;/a&gt; and
scroll down to Section 5 near the end &amp;mdash; and here:&lt;/p&gt;

&lt;p&gt;&lt;a class="cow-section-anchor" name="section-1."&gt;&lt;/a&gt;&lt;h1 class="cow-title-heading"&gt;&lt;span class="cow-sec-number"&gt;1. &lt;/span&gt;Stretch Goals&lt;/h1&gt;

&lt;p&gt;Thanks to our backers so far we're going beyond our baseline. We've figured
out a bunch of extras we can offer in MoPi if we get further (and the level of
funding we'll need to make them viable):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;150% (unlocked!): &lt;b&gt;screw terminals&lt;/b&gt;, &lt;b&gt;stackable headers&lt;/b&gt;, &lt;b&gt;remoting pads&lt;/b&gt;
  and &lt;b&gt;self-resetting fuse&lt;/b&gt; added&lt;/li&gt;
&lt;li&gt;175% (nearly there!): &lt;b&gt;two-way communication&lt;/b&gt; and &lt;b&gt;remote power-off&lt;/b&gt; added&lt;/li&gt;
&lt;li&gt;200%: &lt;b&gt;3.3V supply&lt;/b&gt; mod added&lt;/li&gt;
&lt;li&gt;250%: &lt;b&gt;timer-based wake-up&lt;/b&gt; added&lt;/li&gt;
&lt;li&gt;300%: &lt;b&gt;The PiBrush&lt;/b&gt; reward released&lt;/li&gt;
&lt;li&gt;375%: &lt;b&gt;battery charging&lt;/b&gt; added&lt;/li&gt;
&lt;li&gt;430%: &lt;b&gt;The HackCam&lt;/b&gt; reward released&lt;/li&gt;
&lt;li&gt;590%: &lt;b&gt;input voltage boost&lt;/b&gt; added&lt;/li&gt;
&lt;li&gt;999%: &lt;b&gt;The Pablet&lt;/b&gt; reward released&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When we reach &lt;u&gt;150% funded&lt;/u&gt; (nearly there!) we can make these improvements:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Screw terminals&lt;/b&gt;. This will make it easier to connect all different types
  of power supply (from batteries to water turbines) direct to MoPi.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Stackable headers&lt;/b&gt;. We'll put a stacking header directly onto the board
  (and adopt the same case lid style as for the
  &lt;a class="cow-url" href="http://shop.pimoroni.com/products/model-a-pibow"&gt;Pibow Model A&lt;/a&gt;). This
  will make it easier to connect multiple boards at once (e.g. MoPi + XLoBorg,
  or MoPi + AirPi, or etc.).&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Remoting pads&lt;/b&gt;. We'll add remoting pads for the power switch to help with
  applications where MoPi sits away from the edge of the case. This will allow
  the connection of an additional power switch.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Self-resetting fuse&lt;/b&gt;. MoPi supplies power directly through the GPIO pins,
  which bypasses the Pi's built-in fuse. We think this is safe &amp;mdash; but to be
  doubly sure we'll add a fuse in MoPi.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When we get to &lt;u&gt;175% funded&lt;/u&gt; we will add:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Two-way communication&lt;/b&gt;. We're moving to I2C for communication between the
  Pi and MoPi, which will mean complete configurability from the Pi. (It will
  also minimise our use of GPIO pins and maximise the number of other Pi
  add-on boards that we can run with.)&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Remote power off&lt;/b&gt;. You'll be able to tell MoPi to power down the Pi when
  logged-in remotely (after a clean shutdown, of course).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If we get to &lt;u&gt;200% funded&lt;/u&gt; we will add the ability to mod MoPi for &lt;b&gt;3.3V
operation&lt;/b&gt; (overpowering the Pi's on-board regulator and saving the power that
is dissipated there, for weight and battery life critical applications like
ballooning).&lt;/p&gt;

&lt;p&gt;If we make it to &lt;u&gt;250% funded&lt;/u&gt; we'll add timer-based wakeup &amp;mdash; tell MoPi
what time you want your Pi to wakeup, then power it down and MoPi will boot
the Pi as requested.&lt;/p&gt;

&lt;p&gt;If we get to &lt;u&gt;300% funded&lt;/u&gt; we will offer our virtual paintbrush rig &amp;mdash; &lt;b&gt;The
&lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/pibrush.html"&gt;PiBrush&lt;/a&gt;&lt;/b&gt; &amp;mdash; as a reward. PiBrush
combines a MoPi with an accelerometer and is a great way to engage kids with
Python programming and the physics of motion. When you've got one you've also
got a programmable Pi-based Wii-remote-alike, and there are a ton of cool
applications waiting.&lt;/p&gt;

&lt;p&gt;Now, the one you've all been waiting for: &lt;b&gt;charging&lt;/b&gt;! That's by a long head
our most requested feature &amp;mdash; but it is also pretty difficult :-(  In fact,
dealing with lots of different chemistries may not be possible on a tiny
device like MoPi (most manufacturers of charging ICs only support one
chemistry per chip, for example, and some only support charging a &lt;em&gt;single
cell&lt;/em&gt; per chip!). The other challenge is that we've got a really small surface
area to work with on the PCB. So we need to get quite a bit further to have
the necessary resources... but if we reach &lt;u&gt;375% funding&lt;/u&gt;, then we'll do it!
We're not promising to charge every battery under the sun, but we'll provide
charging for at least one popular configuration.&lt;/p&gt;

&lt;p&gt;If we make it to &lt;u&gt;430% funded&lt;/u&gt; we'll offer &lt;b&gt;The HackCam&lt;/b&gt;, a Model A Pi, a
camera module, wifi and a MoPi, wrapped up in a water-resistant box with a 3
inch screen and the switching to make it work in the way you'd expect. The
pictures are served directly to the web by an Apache running on the Pi, and
with everything open source (of course) you can tweak the photographic
parameters to your heart's content. A camera you can log in to!&lt;/p&gt;

&lt;p&gt;Some applications would benefit from the addition of a
&lt;b&gt;voltage boost&lt;/b&gt;, e.g. when you've got a small surface area of photo-voltaic
(solar) panel and want to trickle charge a backup battery. If we reach &lt;u&gt;590%
funding&lt;/u&gt; we'll add a buck booster to cater for these applications.&lt;/p&gt;

&lt;p&gt;Finally (for now!) if we get to &lt;u&gt;999% funding&lt;/u&gt; we'll offer &lt;b&gt;The Pablet&lt;/b&gt;,
combining MoPi with this
&lt;a class="cow-url" href="http://shop.pimoroni.com/products/pitft-pibow"&gt;touchscreen and case rig&lt;/a&gt;.
We'll mod the case to add a couple of PP3 clips, and an external power switch.
Hey presto! a Pi-based &amp;quot;tablet&amp;quot;!&lt;/p&gt;

&lt;p&gt;(And if we reach 4000% Lubo says we can attach a rocket to it, though I'm a
little suspicious that he's not totally sincere on that one.)&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a class="cow-url" href="http://tinyurl.com/mobile-pi"&gt;Join us and &lt;b&gt;set your Pi free&lt;/b&gt;&lt;/a&gt;!&lt;/p&gt;



&lt;p&gt;&lt;b&gt;&lt;a class="cow-url" href="http://tinyurl.com/mobile-pi"&gt;Read the main article&lt;/a&gt;.&lt;/b&gt;&lt;/p&gt;
</summary><category term="kickstarter"></category><category term="batteries"></category><category term="mo-pi"></category><category term="pi-tronics"></category><category term="pi"></category><category term="raspberrypi"></category><category term="gate"></category></entry><entry><title>Building an AirPi</title><link href="http://pi.gate.ac.uk/posts/2014/02/07/airpi1/" rel="alternate"></link><updated>2014-02-07T00:00:00+00:00</updated><author><name>Fred Sonnenwald</name></author><id>tag:pi.gate.ac.uk,2014-02-07:posts/2014/02/07/airpi1/</id><summary type="html">

&lt;!--%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%--&gt;


&lt;p&gt;An &lt;a class="cow-url" href="http://airpi.es/"&gt;AirPi&lt;/a&gt; is an open hardware environmental sensor
platform. Weather and air quality monitoring using low cost components that
you can order and then assemble yourself. Really it's a pretty neat project.
What they do is give you a component list and a schematic diagram (and PCB
layout too, if you're into that) so that you have quite a deal of flexibility
in what your monitoring station can do. The complete list includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Air pressure&lt;/li&gt;
&lt;li&gt;Temperature&lt;/li&gt;
&lt;li&gt;Humidity&lt;/li&gt;
&lt;li&gt;Light level&lt;/li&gt;
&lt;li&gt;UV level&lt;/li&gt;
&lt;li&gt;General air quality&lt;/li&gt;
&lt;li&gt;NO2 level&lt;/li&gt;
&lt;li&gt;CO level&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/environment/airpi/atairpi.jpg"&gt;
&lt;em&gt;An AirPi promo photo...&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Of course, what you build yourself almost never looks as nice as what the stock
photo looks like. For starters, I know I haven't got easy access to PCB
fabrication so I'm going to be building a breadboard AirPi. The first step to
that is ordering components. On the AirPi site they give a
&lt;a class="cow-url" href="http://airpi.es/step1.php"&gt;good list&lt;/a&gt; of the components you need to have.
Most stuff can be ordered easily enough either through places like
&lt;a class="cow-url" href="http://uk.rs-online.com/"&gt;RS Components&lt;/a&gt; or the rest off of eBay shops.
Those were my sources, and in the end only one part (the UV sensor) had to come
from outside the UK. I got a multi-resistor pack and breadboard from Maplin
rather than eBay as that was a bit easier.&lt;/p&gt;

&lt;p&gt;Keep in mind though that the component list on that page &lt;b&gt;isn't exhaustive&lt;/b&gt;.
I found out only on reading the assembly directions that a bit more was
necessary, particularly to use the UV sensor you also need 0.1uF capacitor
and a CA314 op-amp. The list also doesn't give all the resistors, hence the
multi-pack from Maplin. There's no specific direction about what LDR (Light
Dependant Resistor) either. Based off of comments in the forums I ordered
a pack of GL5528, which have a light resistance of 10K-20K&amp;Omega; and a darkness
resistance of 1M&amp;Omega;.&lt;/p&gt;

&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/environment/airpi/components.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/environment/airpi/components_thumb.jpg"&gt;&lt;/a&gt;
&lt;em&gt;Here are all the components&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In addition to all the bits above and the breadboard, I ordered an
&lt;a class="cow-url" href="http://www.ebay.co.uk/itm/111260606543"&gt;Adafruit cobbler clone&lt;/a&gt; and some
&lt;a class="cow-url" href="http://www.ebay.co.uk/itm/231080275924"&gt;solid core jumper wires&lt;/a&gt; so that I
could at least do a tidy breadboard. I was unable to order the NO2 or CO
sensors as the only folks who sell them are in the states and the shipping
was killer.&lt;/p&gt;

&lt;p&gt;So. On to building! Unfortunately, not all shipping times are equal and I
wanted to get started playing so my first prototype only has the air quality
sensor and the light level sensor.&lt;/p&gt;

&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/environment/airpi/prototype1.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/environment/airpi/prototype1_thumb.jpg"&gt;&lt;/a&gt;
&lt;em&gt;My solid core wires hadn't arrived yet either, so messy!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;When almost everything had arrived, I started to build prototype 2. All I was
missing was the UV sensor. By the time I finished building though, the sensor
had arrived and I added it in as well. Working on the breadboard ends up being
something of a logic puzzle. How do I get things where I want them, using a
minimum of wire? Without short-circuiting? Or having things stick up? Despite
already having some practice and familiarity with the circuit from building
prototype 1, prototype 2 definitely took longer to build. Lots of cross
checking &lt;a class="cow-url" href="/pages/airpi-files/2600pdf.pdf"&gt;several&lt;/a&gt;
&lt;a class="cow-url" href="/pages/airpi-files/21295d.pdf"&gt;of&lt;/a&gt;
&lt;a class="cow-url" href="/pages/airpi-files/DHT22.pdf"&gt;the&lt;/a&gt; &lt;a class="cow-url" href="/pages/airpi-files/fn957.pdf"&gt;different&lt;/a&gt;
&lt;a class="cow-url" href="/pages/airpi-files/UVI-01-E.pdf"&gt;datasheets&lt;/a&gt;. A digital multi-meter was a
good friend as well.&lt;/p&gt;

&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/environment/airpi/prototype2.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/environment/airpi/prototype2_thumb.jpg"&gt;&lt;/a&gt;
&lt;em&gt;Much nicer!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;All things considered the AirPi directions are really quite good. It took so
long because it's a matter of having confidence that I'd done it right. Combine
that with the logic puzzle of individual sensor placement. As the directions
are given on a sensor-by-sensor basis, there's no sense of when you can connect
things together to make a tidier circuit. The fact that you can jump from the
+5V of the air quality sensor to the +5V of the op-amp is incredibly handy if
you, like I've done, place them close together on the breadboard, &lt;em&gt;and you
notice it&lt;/em&gt;. Things like that that take up the time, and then cross-checking it
to make sure it's right takes up even more.&lt;/p&gt;

&lt;p&gt;Fortunately in the end I only had three real electrical mysteries (aside from
plugging things in in the wrong spot). The first was that I misinterpreted what
had to be done with the light level sensor. The directions describe its
connection in text only and it just confused me. They make sense now though...&lt;/p&gt;

&lt;p&gt;The second issue doesn't really have anything to do with the AirPi. The cobbler
I've got has GPIO pins 9 and 17 swapped on the PCB labeling, and testing with a
multimeter they seem to do neither. This is a ground and +3.3V fortunately, but
connecting the ground on the pressure transducer to what may have been +3.3V
accidentally... not so good.&lt;/p&gt;

&lt;p&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/environment/airpi/badpins.png"&gt;
&lt;em&gt;Backwards! Yikes!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;My third electrical mystery was much more annoying than either of those two.
The long story short is that I had the UV sensor plugged in backwards. The long
leg goes to pin 3, and the short leg connects to ground. Unfortunately, to 
figure out this was the case I had to go and 'debug' the rest of the UV
circuit. Which is fine in principle, until you realize that before I started
this I had no idea how an op-amp worked or what it really does. (Yes, the name
is kind of an indicator, but that really doesn't explain the electronics.)&lt;/p&gt;

&lt;p&gt;Fortunately Chris Gammell has an
&lt;a class="cow-url" href="http://chrisgammell.com/how-does-an-op-amp-work-part-1/"&gt;excellent
explanation&lt;/a&gt; that made about 60% sense to me. I'll see if I can summarize my
understanding... An op-amp takes a voltage level (in this case from the UV
sensor) and multiplies it (approximately) by the ratio of the resistors between
it and ground and it and the op-amp output. This is done with a feedback loop
over the input to output. Sort of. Anyway, the directions mentioning &amp;quot;470 times&amp;quot;
is referring to this multiplication factor of the sensor output, and is why I
could use 1K&amp;Omega; and 470K&amp;Omega; resistors instead of the 10K&amp;Omega; and 4.7M&amp;Omega; resistors they
did.&lt;/p&gt;

&lt;p&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/environment/airpi/op-amp circuit.png"&gt;
&lt;em&gt;Roughly what an op-amp does...&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;There are other effects that come into play, I don't really understand all of
this:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;As near as I can tell the multiplication works as the op-amp is really an &lt;span class="cow-escape"&gt;
&lt;/span&gt;oscillator. The resistor that links the op-amp output and the pin of the &lt;span class="cow-escape"&gt;
&lt;/span&gt;op-amp that's not attached to whatever it is you want to multiply causes, for &lt;span class="cow-escape"&gt;
&lt;/span&gt;example, an over-voltage. This triggers a state change to under-voltage. The &lt;span class="cow-escape"&gt;
&lt;/span&gt;resistor carries this back across which causes over-voltage again. This all &lt;span class="cow-escape"&gt;
&lt;/span&gt;happens very rapidly (oscillates!) and results in an even voltage thats the &lt;span class="cow-escape"&gt;
&lt;/span&gt;multiplied output.&lt;/li&gt;
&lt;/ul&gt;

 &lt;ul&gt;
 &lt;li&gt;Chris' explanation has the signal being amplified attached to the &lt;span class="cow-escape"&gt;
&lt;/span&gt;&amp;quot;inverting input&amp;quot; while the AirPi has the UV output connected to the &lt;span class="cow-escape"&gt;
&lt;/span&gt;&amp;quot;non-inverting input&amp;quot;. I think this has to do with how the UV sensor is a &lt;span class="cow-escape"&gt;
&lt;/span&gt;diode and we're connecting one end to ground.&lt;/li&gt;
 &lt;/ul&gt;

 &lt;ul&gt;
 &lt;li&gt;The capacitor in the circuit (not pictured here) has to do with &lt;span class="cow-escape"&gt;
&lt;/span&gt;stabilizing the feedback loop because of the response speed of the UV sensor.&lt;/li&gt;
 &lt;/ul&gt;

&lt;ul&gt;
&lt;li&gt;The resistor in parallel with the UV sensor ensures a minimum current &lt;span class="cow-escape"&gt;
&lt;/span&gt;level. The higher that resistor is, the greater the voltage because of &lt;span class="cow-escape"&gt;
&lt;/span&gt;Ohm's law 1/Rtotal = 1/Ra + 1/Rb. I think this explains that graph on the &lt;span class="cow-escape"&gt;
&lt;/span&gt;datasheet.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This brings me on to the thing I wish most from the AirPi project: &lt;b&gt;an
explanation of why and how things work&lt;/b&gt;. Right now it's a really nice
monitoring tool, which you could use to learn about the environment. But it
could be an electronics teaching tool as well.&lt;/p&gt;

&lt;p&gt;But that's enough boring electronics. On to software! There's a set of
directions on the AirPi page to get you started. It includes installing all the
dependencies which is pretty good. I did all of that except for the 'eeml'
steps - these are for connecting to &lt;a class="cow-url" href="https://xively.com/"&gt;Xively&lt;/a&gt;. This is the
service AirPi uses for storing and distributing stuff. It looked a bit complex
for getting started though, which is why I've skipped it.&lt;/p&gt;

&lt;p&gt;Once the dependencies are installed and the AirPi
&lt;a class="cow-url" href="https://github.com/tomhartley/AirPi.git"&gt;Git Repository&lt;/a&gt; has been cloned, the
first step is configuring AirPi.cfg. There's a bit more to it than the
directions let on though. You may need to edit the I2CBus parameter, I had to
change it to 1 to get it to work with my Model A. The UVI-01 ADCPin is
incorrect with respect to the assembly directions, it should be 3 not 4. I also
had to disable the MICS sensors as I don't have these.&lt;/p&gt;

&lt;p&gt;There's also a small bug in Upload.py with regards to the AirQuality pull-up
resistor. Line 118 should be changed from&lt;/p&gt;

&lt;p&gt;&lt;pre class="prettyprint lang-python"&gt;
airSensor = AQSensor.AQSensor(adc,AQADC,pullup)
&lt;/pre&gt;to&lt;/p&gt;

&lt;p&gt;&lt;pre class="prettyprint lang-python"&gt;
airSensor = AQSensor.AQSensor(adc,AQADC,pullup=pullup)
&lt;/pre&gt;Since I didn't do the eeml stuff, I also needed to comment out the eeml imports
at the start of Upload.py. Once that's done though it runs!&lt;/p&gt;

&lt;pre&gt;Temp-DHT:       26.1 C
Humidity:       35.7 %
Air Quality:    16920.56
Light Level:    4.91 Lux
UV Level:       0.48 UVI
Temp-BMP:       25.6 C
Pressure:       97912.6 Pa
&lt;/pre&gt;

&lt;p&gt;An AirPi built and running! The question is where we go from here? I'm planning
to now collect data for a bit and see if I can massage it and get something
neat out of it. What does Air Quality 16920 even mean? I'll want to check the
calibration of the sensors in general and make sure it's not all nonsense. For
example, I'll use some thermometers and a barometer to cross check those
readings.&lt;/p&gt;

&lt;p&gt;I'm also going to look into altering the software. A capability to log and
display info without going through a third party service would be nice. I know
the logging should be possible at least! I also just did a blog post about
&lt;a class="cow-non-existant-url" href="/posts/2014/01/25/raingauge/"&gt;connecting a raingauge&lt;/a&gt; to the Pi. I'm pretty
certain that can be added into the AirPi setup. Stay tuned!&lt;/p&gt;


&lt;script src="https://google-code-prettify.googlecode.com/svn/loader/run_prettify.js"&gt;&lt;/script&gt;
</summary><category term="airpi"></category><category term="hardware"></category><category term="pi-tronics"></category><category term="environmental"></category><category term="pi"></category><category term="raspberrypi"></category><category term="gate"></category></entry><entry><title>Mobile and 24/7 Power for the Pi: Kickstarter Launched!</title><link href="http://pi.gate.ac.uk/posts/2014/02/04/mobile-pi-kickstarter/" rel="alternate"></link><updated>2014-02-04T00:00:00+00:00</updated><author><name>Hamish Cunningham</name></author><id>tag:pi.gate.ac.uk,2014-02-04:posts/2014/02/04/mobile-pi-kickstarter/</id><summary type="html">



&lt;p&gt;We've just launched a
&lt;a class="cow-url" href="https://www.kickstarter.com/projects/hamishcunningham/mopi-mobile-and-24-7-power-for-the-raspberry-pi"&gt;crowd-funding campaign on Kickstarter&lt;/a&gt; for mobile and
uninterruptible power for the Raspberry Pi!&lt;/p&gt;
&lt;h2 class="cow-heading"&gt;[MoPi is &lt;b&gt;mobile&lt;/b&gt;, &lt;b&gt;hot-swap&lt;/b&gt; and &lt;b&gt;24/7 power&lt;/b&gt; for the Raspberry Pi.
&lt;a class="cow-url" href="/pages/get-mopi.html"&gt;How to order.&lt;/a&gt;]&lt;/h2&gt;

&lt;p&gt;&lt;a class="cow-url" href="https://www.kickstarter.com/projects/hamishcunningham/mopi-mobile-and-24-7-power-for-the-raspberry-pi"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/mopi/logo-heli-text-500x359.png" alt="MoPi: Set your Pi Free!" width="500" height="359"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The ranks of Raspberry Pi add-ons gain a new member today with the launch of a
crowdfunding campaign for &lt;em&gt;MoPi&lt;/em&gt;,
&lt;a class="cow-url" href="https://www.kickstarter.com/projects/hamishcunningham/mopi-mobile-and-24-7-power-for-the-raspberry-pi"&gt;Mobile Power for the Pi&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The board allows you to power the Pi from standard batteries, car power
sockets, solar panels, old laptop supplies etc. You can then do hot-swap power
replacement without stopping work, and an open source daemon will shut down
the Pi cleanly when batteries discharge.&lt;/p&gt;

&lt;p&gt;There's an integrated power switch, and the device doubles as a UPS
(uninterruptible power supply) when both batteries and mains are connected.&lt;/p&gt;

&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/mopi/mopi-with-key.png"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/mopi/mopi-with-key-small.png" alt="MoPi prototype" width="500" height="358"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Battery power isn't new to the Pi, of course, but up to now there hasn't been
a way to protect your Pi from getting an abrupt power cut when the batteries
run out, which can lead to corruption of the SD card that the operating system
is loaded from. &lt;/p&gt;

&lt;!--%             TODO tailor this to the recipient--&gt;

&lt;p&gt;Mobile Pi projects range from a simple bit of timelapse photography in the
garden to driving Lego mindstorm robotics to near-orbit space adventures like
&lt;a class="cow-url" href="http://www.bbc.co.uk/news/technology-23840596"&gt;Dave Akerman's balloons&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The video for the new board &amp;mdash;
&lt;a class="cow-url" href="https://www.kickstarter.com/projects/hamishcunningham/mopi-mobile-and-24-7-power-for-the-raspberry-pi"&gt;now launched on Kickstarter&lt;/a&gt; &amp;mdash; includes a hackable &lt;em&gt;GoPro&lt;/em&gt;-type camera
videoing downhill skiing, air pollution sensing and solar panel management.
Details of other projects using the board prototypes are here on
&lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/mopi.html"&gt;Pi.GATE.ac.uk&lt;/a&gt;, for example this
&lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/pibrush.html"&gt;virtual paint brush rig&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The team behind the project include Linux and Pi specialists from the
&lt;a class="cow-url" href="http://shef.ac.uk/dcs/"&gt;University of Sheffield&lt;/a&gt; &amp;mdash; and hardware
people from Pimoroni Ltd., the company behind the iconic
&lt;a class="cow-url" href="http://shop.pimoroni.com/collections/pibow"&gt;Pibow case&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/mopi/mopi-in-pibow-500x375.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/mopi/mopi-in-pibow-small.jpg" alt="MoPi in a Pibow" width="500" height="375"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can sign up from &amp;pound;18 (early bird discount), or spend more and pick up a
UPS rig, or various outdoor experimenter kits (the latter with an orientation
on schools and the new computing curriculum and the like).&lt;/p&gt;

&lt;p&gt;Set your Pi free?!&lt;/p&gt;

&lt;p&gt;&lt;hr&gt;
Follow us on &lt;a class="cow-url" href="https://twitter.com/pitronics"&gt;@PiTronics&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/mopi.html"&gt;Read the main article&lt;/a&gt;.&lt;/b&gt;&lt;/p&gt;
</summary><category term="kickstarter"></category><category term="batteries"></category><category term="mo-pi"></category><category term="pi-tronics"></category><category term="pi"></category><category term="raspberrypi"></category><category term="gate"></category></entry><entry><title>Connecting a Rain Gauge</title><link href="http://pi.gate.ac.uk/posts/2014/01/25/raingauge/" rel="alternate"></link><updated>2014-01-25T00:00:00+00:00</updated><author><name>Fred Sonnenwald</name></author><id>tag:pi.gate.ac.uk,2014-01-25:posts/2014/01/25/raingauge/</id><summary type="html">

&lt;!--%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%--&gt;


&lt;p&gt;A what? A rain gauge. It counts the depth of rainfall per unit area. So it
might report that over the last 24 hours there were 2 mm of rainfall per
meter squared. Over an area the size of Sheffield (around 300 km&lt;span class="cow-escape"&gt;^&lt;/span&gt;2), that
translates to 600,000 cubic meters or on the order of 240 Olympic size swimming
pools. That sounds like a lot, but realistically when you consider that the
River Don is 110 km long, that volume of water isn't so much. The floods here
in June 2007 were the result of over &lt;em&gt;200&lt;/em&gt; mm of rainfall in two weeks.
60,000,000 m&lt;span class="cow-escape"&gt;^&lt;/span&gt;3 for just Sheffield, combined with the much greater surrounding
area... Now we can see why having a rain gauge might be interesting.&lt;/p&gt;

&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/environment/rain/tippingbucket.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/environment/rain/tippingbucket_small.jpg" alt="Inside a tipping bucket rain gauge"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So how does a rain gauge work? There are a few different types, but most common
and what I've got is called a
&lt;a class="cow-url" href="http://en.wikipedia.org/wiki/Tipping_bucket_rain_gauge#Tipping_bucket_rain_gauge"&gt;tipping bucket rain gauge&lt;/a&gt;. Basically there's a little see-saw inside. The rain
fills up a bucket on one end and it tips over so that it empties and the bucket
on the other side starts to fill. Each time the bucket tips it passes a magnet
over a &lt;a class="cow-url" href="http://en.wikipedia.org/wiki/Reed_switch"&gt;reed switch&lt;/a&gt; making a
momentary electrical connection. The buckets are calibrated to a volume of
water, which means if you can count how many times the switch closes you know
how much rainfall there's been.&lt;/p&gt;

&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/environment/rain/reedswitch.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/environment/rain/reedswitch_small.jpg" alt="The rain gauge's reed switch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The rain gauge I've been showing here is one you can have for a fiver from
&lt;a class="cow-url" href="http://www.maplin.co.uk/p/maplin-replacement-rain-gauge-for-n25frn85fyn96gy-n77nf"&gt;Maplin&lt;/a&gt;. It has an RJ-11 plug on the end you'll probably need to cut off to
connect it to the Pi. Still, This suprisingly low cost means anyone can have a
play at weather monitoring, and personally I've always found rain to be pretty
neat. Onwards!&lt;/p&gt;

&lt;p&gt;Basically what it boils down to is that each tip of the bucket in the rain
gauge is identical to a button press. We can easily then connect the gauge as
if it were a button. I've connected mine to ground and GPIO 17. After that all
we need to do then is to monitor for button presses which is pretty straight
forward. It can be done two ways. A continuous loop can run checking the value
of the GPIO. This is pretty resource intensive. Or we can use GPIO interrupts,
similar to what I did in the &lt;a class="cow-non-existant-url" href="/posts/2014/01/18/3dasintv/"&gt;3D project&lt;/a&gt;. This
is where closing the circuit (pressing the button, the bucket tipping) triggers
a software event.&lt;/p&gt;

&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/environment/rain/connection.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/environment/rain/connection_small.jpg" alt="The electrical connection for the gauge"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fortunately
&lt;a class="cow-url" href="http://raspi.tv/2013/how-to-use-interrupts-with-python-on-the-raspberry-pi-and-rpi-gpio"&gt;RasPi.TV&lt;/a&gt; has written a quite nice article on how to use interrupts with
Python. The &lt;a class="cow-url" href="https://pypi.python.org/pypi/RPi.GPIO"&gt;RPi.GPIO&lt;/a&gt; function library
has a simple call to register listening for interrupts on a given PIN:
&lt;tt&gt;GPIO.add&lt;span class="cow-escape"&gt;_&lt;/span&gt;event&lt;span class="cow-escape"&gt;_&lt;/span&gt;detect&lt;/tt&gt;. This makes it dirt simple to create a monitoring
program. I've uploaded the code I've written to
&lt;a class="cow-url" href="https://github.com/hamishcunningham/pi-tronics/blob/master/environment/rain.py"&gt;GitHub&lt;/a&gt;, but I'll go over the important bits here.&lt;/p&gt;

&lt;p&gt;&lt;pre class="prettyprint lang-python"&gt;
GPIO.setmode(GPIO.BCM)  
GPIO.setup(PIN, GPIO.IN, pull_up_down=GPIO.PUD_UP)
&lt;/pre&gt;This is pretty standard and if you've done any GPIO work before you should
recognize it as initializing the GPIO. The &lt;tt&gt;setup&lt;/tt&gt; function here tells the
system we'll be using &lt;tt&gt;PIN&lt;/tt&gt; (17) for input, and that we should use it in
pull-up mode. That is to say, we connect the internal resitor attached to the
pin to +3.3 V. This allows it to be clear when the rain gauge closes the
circuit to ground that there's been a change.&lt;/p&gt;

&lt;p&gt;&lt;pre class="prettyprint lang-python"&gt;
# variable to keep track of how much rain
rain = 0

# the call back function for each bucket tip
def cb(channel):
	global rain
	rain = rain + CALIBRATION

# register the call back for pin interrupts
GPIO.add_event_detect(PIN, GPIO.FALLING, callback=cb, bouncetime=300)
&lt;/pre&gt;We have a variable &lt;tt&gt;rain&lt;/tt&gt; that is a counter for the amount of rainfall. We then
have a function (&lt;tt&gt;cb&lt;/tt&gt;) that adds the bucket amount to it, the &lt;tt&gt;CALIBRATION&lt;/tt&gt;
variable which for this gauge is 0.2794 mm per tip. The &lt;tt&gt;add&lt;span class="cow-escape"&gt;_&lt;/span&gt;event&lt;span class="cow-escape"&gt;_&lt;/span&gt;detect&lt;/tt&gt;
function then sets up the interrupt listening on &lt;tt&gt;PIN&lt;/tt&gt;. Because we've set the
pin in pull-up mode, we're listening for a &lt;em&gt;falling edge&lt;/em&gt;, that is the
transition from +3.3 V to 0 V. When this occurs we'll call the &lt;em&gt;callback&lt;/em&gt;
function &lt;tt&gt;cb&lt;/tt&gt;. The &lt;tt&gt;bouncetime&lt;/tt&gt; specifies that the &lt;tt&gt;cb&lt;/tt&gt; can't be called any
more frequently than once every 300 ms. This prevents counting a rapid
alteration between switch states, called bouncing.&lt;/p&gt;

&lt;p&gt;The program output is a CSV log file which in column A has a unix timestamp,
and in column B has a rainfall amount. I've set it up to log every 5 seconds,
but really that can be a much longer minute or 5 minute interval even. I like
the higher frequency because if it's raining really hard, you can't catch small
temporal variations with a longer monitoring frequency. It's easy in comparison
though to go from 5 second to 5 minute readings.&lt;/p&gt;

&lt;p&gt;The other thing to bear in mind is that how the program is that while the
bucket in the gauge fills up slowly, you only get an instantaneous result.
There won't have been 0.2794 mm of rain in the last 5 seconds, but instead it
will have occured in the interval since the last reading. This is a
post-processing consideration if you're interested in producing rainfall over
time graphs, but isn't an issue for totals.&lt;/p&gt;

&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/environment/rain/outdoors.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/environment/rain/outdoors_small.jpg" alt="The gauge placed outside"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Some minor comments about rain gauge placement. Higher is better. They should
be secured, and outside of what's called a building's shadow. Rain can be
carried by the wind and if the wind is coming from the other side of the
building the reading's likely to be off. Bearing all that in mind, I can't
meet any of those conditions properly. My rain gauge is at least outside
though. Let's look at some of the data. (I've plotted it quickly using
&lt;a class="cow-url" href="https://www.gnu.org/software/octave/"&gt;Octave&lt;/a&gt;.)&lt;/p&gt;

&lt;p&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/environment/rain/23rd.png" alt="Rain on the 23rd"&gt;&lt;/p&gt;

&lt;p&gt;There are some teething problems. The above graph goes from 0900 on the 23rd
to 0900 on the 24th. I know for a fact there was no rainfall that evening.
Indeed, it was dry as a bone and most small puddles had evaporated. I suspect
maybe that the wind or cold weather was having an effect, but I'm really not
sure. In the meantime I'm keeping an eye out for false readings. Maybe an
interrupt bug?&lt;/p&gt;

&lt;p&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/environment/rain/24th.png" alt="Rain on the 24th"&gt;&lt;/p&gt;

&lt;p&gt;Ignoring them, the data is actually pretty good. According to this figure, last
night (from around 1700 to 2200) we had around 7 mm of rainfall. That's a
fairly average rainfall and I actually remember it happening. The value also
compares favorably to other rain gauges I have access to. They're a few km away
and reported 6 to 6.4 mm of rainfall.&lt;/p&gt;

&lt;p&gt;As a fun project if you're in Sheffield, you can compare how much rain you're
recording to the &lt;a class="cow-url" href="https://twitter.com/WPWeather"&gt;Weston Park Museum's weather
station&lt;/a&gt;! There are other monitoring stations around the country and world a
little bit of Googling should help out there.&lt;/p&gt;



&lt;script src="https://google-code-prettify.googlecode.com/svn/loader/run_prettify.js"&gt;&lt;/script&gt;
</summary><category term="hardware"></category><category term="pi-tronics"></category><category term="environmental"></category><category term="rain"></category><category term="pi"></category><category term="raspberrypi"></category><category term="gate"></category></entry><entry><title>3D? As in TV?</title><link href="http://pi.gate.ac.uk/posts/2014/01/18/3dasintv/" rel="alternate"></link><updated>2014-01-18T00:00:00+00:00</updated><author><name>Fred Sonnenwald</name></author><id>tag:pi.gate.ac.uk,2014-01-18:posts/2014/01/18/3dasintv/</id><summary type="html">

&lt;!--%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%--&gt;


&lt;p&gt;A year or two ago I connected a small 132x32 pixel LCD display to one of my
Raspberry Pis. The idea behind it was that I could use it to display small
status updates or anything else I wanted. Mostly from that aspect it ended up
being a clock.&lt;/p&gt;


&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/3d/tv/clock_big.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/3d/tv/clock_small.jpg" alt="A rather fancy clock"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once I got some code written for text, my next thought was &amp;quot;could I do video?&amp;quot;
There were a few hurdles there to overcome as well. Codec? Framerate? I ended
making up a solution where I read in 2-bit (black and white) bitmap image and
displayed it. Repeat 24 times a second and you have video.&lt;/p&gt;

&lt;p&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/3d/tv/frames.gif" alt="Raw frames"&gt;
&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/3d/tv/video.gif" alt="Video in action"&gt;&lt;/p&gt;

&lt;p&gt;I noticed something interesting though, in that I could push out images a lot
faster than 24 FPS. I could reach just over the 120 FPS. This is the magic
number for what's known as
&lt;a class="cow-url" href="http://en.wikipedia.org/wiki/Active_shutter_3D_system"&gt;active 3D TV&lt;/a&gt;. In
Active 3D, the special glasses effectively blank out one eye than the other
rapidly. At the same time the TV is showing the left eye, right, left, right,
etc., at the same speed. (3D in movie theatres, for example
&lt;a class="cow-url" href="http://en.wikipedia.org/wiki/RealD_Cinema"&gt;RealD 3D&lt;/a&gt;, typically uses
polarized light.)&lt;/p&gt;

&lt;p&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/3d/tv/animation.gif" alt="Active 3D"&gt;&lt;/p&gt;

&lt;p&gt;There are two ways that active glasses are controlled by TVs. The first,
impractical way is radio. Typically Bluetooth. The other way, which fits right
in the realm of hacker electronics, is Infrared. (Just like a remote control!)
Knowing this then I needed a was an infrared transmission from the Pi to the
glasses, and then to match this up with the software I'd already written to
display video. The latter, is easy. The former, not so much so.&lt;/p&gt;

&lt;p&gt;The first stumbling block is the infrared transmission signal. Like a remote
control, it's also a specially coded signal. And like for TVs, many makers
have different signals for their glasses. Fortunately, someone has already
made an
&lt;a class="cow-url" href="http://cmst.curtin.edu.au/local/docs/pubs/2011-17-woods-helliwell-3D-Sync-IR.pdf"&gt;analysis&lt;/a&gt; of the different signals using an oscilloscope. I managed to find a
reasonably priced pair of nVidia 3D glases. The protocol for them looks like
this:&lt;/p&gt;

&lt;p&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/3d/tv/nvidia protocol.png" alt="nVidia 3D glasses Infrared Protocol"&gt;&lt;/p&gt;

&lt;p&gt;Unfortunately the timing of those infrared pulses is in &lt;em&gt;micro&lt;/em&gt;seconds. This is
a small problem. The Pi can't consistently execute code at microsecond timing.
Millisecond's about the best it can do because Raspbian isn't what's called a
&lt;a class="cow-url" href="http://en.wikipedia.org/wiki/Real-time_operating_system"&gt;Real-time operating
system&lt;/a&gt;. It spends a lot of time instead cycling between different tasks, any
of which can call for CPU time at any moment and interrupting whatever else is
happening.&lt;/p&gt;

&lt;p&gt;In a real-time situation like sending a infrared signal, we can't have the
kernel deciding to take a pause in the middle to do something else.
Fortunately, most microcontrollers are real-time, and so will do exactly
what you tell them to in the order you tell them to.
&lt;a class="cow-url" href="http://morethanuser.blogspot.co.uk/2013/05/ir-remote-emulator-with-attiny45.html"&gt;More Than User&lt;/a&gt; used an attiny45 to create an infrared remote. I haven't got
one of those, but I do have a
&lt;a class="cow-url" href="https://estore.ti.com/EZ430-F2013-MSP430-USB-Stick-Development-Tool-P800.aspx"&gt;EZ430-F2013&lt;/a&gt; which is this crazy TI micro-controller in a USB stick format
thing.&lt;/p&gt;

&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/3d/tv/ez430_big.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/3d/tv/ez430_small.jpg" alt="The EZ430"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The EZ430 is very nice in that it comes with a proper development environment
and a &amp;quot;let's blink the LED&amp;quot; code example&amp;mdash;blinking an Infrared LED is what I
wanted to do after all! What I really needed to do then was to learn how to
control blink timing precisely. Things now get a little technical.
Microcontroller programming isn't exactly easy and this was new ground for me.&lt;/p&gt;

&lt;p&gt;Eventually I learned that the EZ430 has an onboard 8 MHz clock crystal. What's
neat about this is that you can do something called a &lt;em&gt;timer interrupt&lt;/em&gt;. There
are different ways to go about it, but in general in this case I tell the
EZ430 to count down from X to 0, which X is the number of clock ticks. If I
could put in the number 8,000,000 for X, I'd have an exact timing of 1 second.&lt;/p&gt;

&lt;p&gt;It's not quite that easy though. The counter is only a 16-bit integer which
means I can only count down from 32,767. Fortunately there are clock dividers
available which let you tweak it around. The catch here is that the protocol
has &lt;em&gt;half&lt;/em&gt;microsecond timing. That means I can't divide down directly to 1
MHz timing, and instead can only divide down to 2 MHz timing. My counter then
has to be twice the numbers shown in the protocol diagram.&lt;/p&gt;

&lt;p&gt;&lt;pre class="prettyprint lang-c"&gt;
// set up the timer
DCOCTL = CALDCO_8MHZ;
BCSCTL1 = CALBC1_8MHZ;
BCSCTL2 |= DIVS_2; // divide by 4
TACTL = TASSEL_2 + MC_1 + ID_0;
&lt;/pre&gt;At this point I could control the glasses! I was thrilled! The next challenge
then arrises: connecting this to the Pi. Enter &lt;em&gt;input pin interrupts&lt;/em&gt;. The
EZ430 has 8 digital input/output pins. One of them is used as an output for
the infrared LED to talk to the glasses. Another pin I changed to an input,
and then enabled a &lt;em&gt;rising edge&lt;/em&gt; interrupt on it. This means as soon as voltage
at the pin is detected it triggers a code call. From this I can then start the
timer and open one eye and close the other.&lt;/p&gt;

&lt;p&gt;&lt;pre class="prettyprint lang-c"&gt;
// setup interrupt on pin 3
P1IE = BIT3;
P1IES &amp;amp;= ~BIT3; // rising edge
_EINT();
&lt;/pre&gt;Hurrah! I connect the input pin on the EZ430 to a GPIO output from the Pi and
I have glasses control. Now in my video program after a frame is drawn I simply
turn the connected GPIO pin on and off again, triggering an interrupt on the
EZ430, which ends up sending an infred signal to the glasses. Gives a very good
feeling. It may have taken 10 minutes to read this far but it took hours to
learn what I needed on the EZ430 on work it all out.&lt;/p&gt;

&lt;p&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/3d/tv/schematic.png" alt="Devices Schematic"&gt;&lt;/p&gt;

&lt;p&gt;Unfortunately, my 3D TV doesn't work. As near as I can tell all the electronics
are fine. I just missed one thing. Despite the fact that I can push out 120 FPS
to the LCD there's still a lag for the crystals to change (this is the &amp;quot;response
time&amp;quot; you might have seen advertised on your monitor). The timing on the little
LCD I installed is far greater than the 8 milliseconds needed. Maybe there's a
way around needing 120 FPS for the glasses, but I haven't exactly worked it out
yet. So far now the bits and pieces sit on my desk. A good idea and fun to do.
Close yes, but no cigar. &lt;/p&gt;


&lt;script src="https://google-code-prettify.googlecode.com/svn/loader/run_prettify.js"&gt;&lt;/script&gt;
</summary><category term="hardware"></category><category term="3d-display"></category><category term="pi"></category><category term="raspberrypi"></category><category term="gate"></category></entry><entry><title>Video from the MadLab Pi Jam On-line</title><link href="http://pi.gate.ac.uk/posts/2013/12/23/madlab-jam-video/" rel="alternate"></link><updated>2013-12-23T00:00:00+00:00</updated><author><name>Hamish Cunningham</name></author><id>tag:pi.gate.ac.uk,2013-12-23:posts/2013/12/23/madlab-jam-video/</id><summary type="html">

&lt;p&gt;Forget Christmas TV, here's the hottest entertainment experience of the season
&amp;mdash; video from the MadLab Pi Jam last November (just around the time when the 2
millionth Pi was sold).&lt;/p&gt;

&lt;p&gt;Here's &lt;a class="cow-url" href="http://youtu.be/MnZb9Gi4W24"&gt;my talk about MoPi&lt;/a&gt;, battery supplies,
and the &lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/pibrush.html"&gt;PiBrush&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You'll find the other vids via &lt;a class="cow-url" href="https://www.youtube.com/user/TheBiglesp"&gt;Les
Pounder's channel&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Ho ho ho.&lt;/p&gt;



&lt;p&gt;&lt;b&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/mopi.html"&gt;Read the main article&lt;/a&gt;.&lt;/b&gt;&lt;/p&gt;
</summary><category term="batteries"></category><category term="mo-pi"></category><category term="pi-tronics"></category><category term="pi"></category><category term="raspberrypi"></category><category term="gate"></category><category term="pibrush"></category><category term="raspberry"></category></entry><entry><title>PiBrush Feature in MagPi</title><link href="http://pi.gate.ac.uk/posts/2013/12/06/magpi-pibrush/" rel="alternate"></link><updated>2013-12-06T00:00:00+00:00</updated><author><name>Fred Sonnenwald, Hamish Cunningham</name></author><id>tag:pi.gate.ac.uk,2013-12-06:posts/2013/12/06/magpi-pibrush/</id><summary type="html">

&lt;p&gt;Our PiBrush screen painting gizmo is featured in
&lt;a class="cow-url" href="http://issuu.com/themagpi/docs/issue19final"&gt;this month's MagPi&lt;/a&gt; &amp;mdash; see
pages 22-26.&lt;/p&gt;

&lt;p&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/pi-brush-snap.jpg" alt="Pi Brush snapshot"&gt;&lt;/p&gt;

&lt;p&gt;And there's a sneak preview of our upcoming &lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/mopi.html"&gt;mobile Pi
power&lt;/a&gt; Kickstarter on page 26...&lt;/p&gt;



&lt;p&gt;&lt;b&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/pibrush.html"&gt;Read the main article&lt;/a&gt;.&lt;/b&gt;&lt;/p&gt;
</summary><category term="schools"></category><category term="maker culture"></category><category term="open hardware"></category><category term="open culture"></category><category term="pi-tronics"></category><category term="pi"></category><category term="raspberrypi"></category><category term="gate"></category><category term="ideas bazaar"></category></entry><entry><title>The Cubieboard2</title><link href="http://pi.gate.ac.uk/posts/2013/12/01/cubieboard2/" rel="alternate"></link><updated>2013-12-01T00:00:00+00:00</updated><author><name>Fred Sonnenwald</name></author><id>tag:pi.gate.ac.uk,2013-12-01:posts/2013/12/01/cubieboard2/</id><summary type="html">

&lt;!--%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%--&gt;


&lt;p&gt;A while back we presented a &lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/hardware.html"&gt;review&lt;/a&gt; of different
&amp;quot;Pi-Alikes&amp;quot;. Computers similar to the RaspberryPi - low cost and low power.
The question we set out to answer was &amp;quot;what exactly does 'low power' mean?&amp;quot;
Turns out that for the most part low power was exactly that&amp;mdash;low energy
consumption and low computational power too. The RaspberryPi and its
contemporaries won't break any records but they won't break the bank either.&lt;/p&gt;

&lt;p&gt;Enter the Cubieboard2. We mentioned that this had been announced and we
finally got our hands on one:&lt;/p&gt;

&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/articles/cubieboard2.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/hardware/thumbs/cubieboard2.jpg" alt="Cubieboard2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hardware wise, the Cubieboard2 is pretty much identical to the original except
for its &lt;b&gt;A20&lt;/b&gt; dual-core chip and &lt;em&gt;double the RAM&lt;/em&gt; (1 GB). There's the same
ethernet, HDMI, SATA, etc. Instead of Android 4.0.4 it ships with 4.2.2.&lt;/p&gt;

&lt;p&gt;Despite the similarities, the first rule of Cubieboard2 is that it is not
Cubieboard1. Which means that as much as one might want to use the Cubieboard
image, a new SD card image needs to be written. They exist, but were somewhat
harder to find than they were for the original Cubieboard. The
&lt;a class="cow-url" href="http://linux-sunxi.org/Main_Page"&gt;Sunxi Wiki&lt;/a&gt; isn't well updated for the
Cubieboard2, so I resorted to Google and found
&lt;a class="cow-url" href="http://cubieboard.org/2013/09/07/lubuntu-desktopserver-firmwares-release-for-a20-cubieboard-20130907/"&gt;this&lt;/a&gt;.
In retrospect I should have just started on the Cubieboard pages and followed
the nice big download link.&lt;/p&gt;

&lt;p&gt;Booting up you see the nice two penguins in the framebuffer that indicate two
CPUs. And then nothing, for quite a long time while the system boots. That was
very disconcerting and I was almost sure something was wrong. With the dual
core CPU you'd expect things to feel faster, but it's hard to tell. Starting
was disconcerting without any output. Starting Chromium was slow, but of course
it would be compared to my desktop with an SSD. Part of the slowness is almost
certainly the SD card. X11 does feel pretty responsive though, and there's not
that much of a slow down when multitasking. That's probably the real benefit of
the second core. That and a tasty 1 GB of RAM make this surprisingly powerful
for the price and size.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The two Tux penguins show the kernel recognizing two CPUs...&lt;/em&gt;
&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/hardware/dualtux.jpg" alt="Look Ma! Dual core!"&gt;&lt;/p&gt;

&lt;p&gt;The best concrete way to compare performance is, of course, a benchmark.
First though, some stupid bug in something-Google made apt-get nearly
impossible to use.
&lt;a class="cow-url" href="https://muffinresearch.co.uk/linux-fix-for-apt-get-update-waiting-for-headers/"&gt;see here&lt;/a&gt;
for a fix. That was annoying and necessary to sort out because otherwise there
wouldn't be the necessary software installed to run the benchmarks.&lt;/p&gt;

&lt;p&gt;I have to say that I thought the Cubieboard2 performed better, but I was
absolutely blown away by some of the benchmark results. Network and disk
performance were effectively the same, so we can ignore those. What's really
interesting are the CPU benchmarks. First, integer performance. On a
core-for-core basis it was about the same as a Cubieboard. This means that
overall there's twice the performance when factoring both cores.&lt;/p&gt;

&lt;p&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/hardware/results2/dhry_mips.svg.jpg" alt="Integer Math"&gt;&lt;/p&gt;

&lt;p&gt;Where the Cubieboard2 really shines though is in the floating point arena.
Whatever changes they made between the A10 and A20 CPU, Cubieboard and
Cubieboard 2, the two SD card images, it made a huge difference. Results
indicate nearly &lt;em&gt;three&lt;/em&gt; times the performance. Across both cores that would be
&lt;b&gt;six times&lt;/b&gt; faster over all. (That's 4x faster than the Pi too!) It's
absolutely staggering.&lt;/p&gt;

&lt;p&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/hardware/results2/whet_mflops.svg.jpg" alt="Floating Point Math"&gt;&lt;/p&gt;

&lt;p&gt;These performance improvements aren't just smoke dust either. There's real
world benefit. bzip2 compression ended up performing about the same. Still,
that's two times the performance considering both cores. There may be a
limiting factor with the SD card here.&lt;/p&gt;

&lt;p&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/hardware/results2/bzip2_min.svg.jpg" alt="bzip2 Compression"&gt;&lt;/p&gt;

&lt;p&gt;MP3 encoding performance was just fantastic however. Half the time of the
Cubieboard and still significantly faster than the Model B. That's effectively
four times faster when considering both cores. I do believe that what I thought
was faster performance when using the Cubieboard2 is indeed the case.&lt;/p&gt;

&lt;p&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/hardware/results2/lame_min.svg.jpg" alt="MP3 Encoding"&gt;&lt;/p&gt;

&lt;p&gt;My conclusion? Why would anyone want a Cubieboard anymore? Cubieboard2 all the
way. I sincerely look forward to the next hardware revision of the RaspberryPi
if they can get the same sort of performance improvements.&lt;/p&gt;


</summary><category term="hardware"></category><category term="pi-alikes"></category><category term="pi"></category><category term="raspberrypi"></category><category term="gate"></category></entry><entry><title>Fruitful Jam</title><link href="http://pi.gate.ac.uk/posts/2013/11/18/fruitful-jam/" rel="alternate"></link><updated>2013-11-18T00:00:00+00:00</updated><author><name>Hamish Cunningham</name></author><id>tag:pi.gate.ac.uk,2013-11-18:posts/2013/11/18/fruitful-jam/</id><summary type="html">

&lt;p&gt;A big thanks to &lt;a class="cow-url" href="http://bennuttall.com/"&gt;Ben Nuttall&lt;/a&gt; and everyone who made
the Manchester Raspberry Jam this weekend, and happy birthday to Ben and to
&lt;a class="cow-url" href="http://shop.pimoroni.com/"&gt;Paul Beech&lt;/a&gt; (who turned 23 again on Saturday).&lt;/p&gt;

&lt;p&gt;I learned a lot, and it was great to meet most of the Pi foundation people for
the first time.&lt;/p&gt;

&lt;p&gt;Two things in particular stood out for me, one about how to work with schools
and one about the &lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/mopi.html"&gt;mobile hot-swap UPS battery gizmo&lt;/a&gt; that
we've been building (and which I demo'd in &lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/pibrush.html"&gt;various
applications at the Jam&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Schools.&lt;/b&gt; Several people suggested a Pi roadshow that goes into schools with
introductory sessions, one for kids and one for teachers. This seems like a
really good idea. &lt;a class="cow-url" href="http://www.shef.ac.uk/dcs/"&gt;Sheffield Computer Science&lt;/a&gt;
has been running &lt;a class="cow-url" href="http://pi.gate.ac.uk/posts/2013/10/02/children-and-animals/"&gt;an outreach
programme&lt;/a&gt; which gave away 50 Pi kits to students from four local schools, and
that has generated interest in other local schools who want to dip their toes
in the new computing curriculum that's coming along. Unfortunately we've given
away all our hardware! So I'll be looking for a way to club together with
others in the region who are interested (probably under the auspices of the
&lt;a class="cow-url" href="http://www.shu.ac.uk/research/cse/about-us/stem-unit"&gt;STEM ambassador
programme&lt;/a&gt; being run by Linda and Richard and others down the hill at Hallam's
&lt;a class="cow-url" href="http://www.shu.ac.uk/research/cse/"&gt;Center for Science Education&lt;/a&gt;).
If this sounds like you, &lt;a class="cow-url" href="https://gate.ac.uk/g8/contact"&gt;give me a shout!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Mobile power.&lt;/b&gt; Both &lt;a class="cow-url" href="http://www.daveakerman.com/"&gt;Dave Akerman&lt;/a&gt;
&lt;a class="cow-url" href="http://www.raspberrypi.org/archives/author/eben"&gt;Eben Upton&lt;/a&gt; suggested that
we could save battery life for our &lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/mopi.html"&gt;mobile Pi&lt;/a&gt; add-on board
by supplying 3.3V to the Pi instead of 5V. There's nothing on the Pi board
itself that runs on 5V &amp;mdash; the voltage was chosen in order to take advantage of
the USB standard and the prevalence of micro-USB chargers. The 5V input is
dropped to 3.3V using an &lt;a class="cow-url" href="http://en.wikipedia.org/wiki/Low-dropout_regulator"&gt;LDO linear regulator&lt;/a&gt; which effectively throws away some of the power supplied
to the Pi (half a watt perhaps), and is &amp;quot;the hottest component on the board&amp;quot;
as a result. Dave has had good results supplying 3.3 volts and unsoldering the
LDO from the Pi board (he and his collaborator Anthony reported battery life
improvements of around 50% using this method). Eben suggested that supplying
e.g. 3.35 volts might be enough to overwhelm the LDO, removing the need to
unsolder the component. Definitely worth some experimentation!&lt;span class="cow-footnote" name="footnote1"&gt;&lt;sup&gt;&lt;a href="#footnote1"&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;So thanks again to Ben, and best of luck with your move to the Pi foundation
in Cambridge. Better start working on a moustache, though?&lt;/p&gt;

&lt;p&gt;Some pics by &lt;a class="cow-url" href="https://twitter.com/TonyH1212"&gt;Tony Hughes&lt;/a&gt;...&lt;/p&gt;

&lt;p&gt;Dave Jones demoing his great new Python API for the camera:
&lt;a class="cow-url" href="http://www.flickr.com/photos/38750704@N07/10902836713/in/set-72157637766800375"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/madjam/dave-jones-picamera-640x480.jpg" alt="Dave Jones" width="640" height="480"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A camera in a lunchbox:
&lt;a class="cow-url" href="http://www.flickr.com/photos/38750704@N07/10902517783/in/set-72157637766800375"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/madjam/pi-cam-640x480.jpg" alt="Lunch Cam" width="640" height="480"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Amy shows Ben &lt;b&gt;The Cake&lt;/b&gt;:
&lt;a class="cow-url" href="http://www.flickr.com/photos/38750704@N07/10902461595/sizes/z/in/set-72157637766800375/"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/madjam/amy-and-ben-640x480.jpg" alt="Ben and Amy" width="640" height="480"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Dave and Babbage:
&lt;a class="cow-url" href="http://www.flickr.com/photos/38750704@N07/10904637746/in/set-72157637766800375"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/madjam/dave-and-babbage-640x480.jpg" alt="Dave and Babage" width="640" height="480"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Clive does The Matrix:
&lt;a class="cow-url" href="http://www.flickr.com/photos/38750704@N07/10904207966/in/set-72157637766800375"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/madjam/clive-matrix-640x480.jpg" alt="Clive Matrix" width="640" height="480"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Paul explains how big the one that got away was:
&lt;a class="cow-url" href="http://www.flickr.com/photos/38750704@N07/10904384693/in/set-72157637766800375"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/madjam/paul-fishing-640x480.jpg" alt="Paul Fishing" width="640" height="480"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The author thinking he has cunningly hidden his bald patch from the crowd but
forgetting about the mirror:
&lt;a class="cow-url" href="http://www.flickr.com/photos/38750704@N07/10901782915/in/set-72157637766800375"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/madjam/baldy-640x480.jpg" alt="Baldy" width="640" height="480"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;quot;It's power, Jim, but not as we know it!&amp;quot; (MoPi second prototype.)
&lt;a class="cow-url" href="http://www.flickr.com/photos/38750704@N07/10902307686/in/set-72157637766800375/"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/madjam/mopi-again-640x480.jpg" alt="MoPi again" width="640" height="480"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;&lt;b&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/mopi.html"&gt;Read the main article&lt;/a&gt;.&lt;/b&gt;&lt;/p&gt;
&lt;span class="cow-footnote-section"&gt;
&lt;h1 class="cow-heading"&gt;Footnotes&lt;/h1&gt;
&lt;p&gt;&lt;ol&gt;
&lt;li&gt;
&lt;a class="cow-footnote-anchor" name="footnote1"&gt;&lt;/a&gt;
&lt;span class="cow-footnote-text" name="footnote1"&gt;The
external USB connections would not be powered in this configuration, of
course, but for long-life standalone applications &amp;mdash; like Dave's balloon
flights &amp;mdash; the technique can work.&lt;/span&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;/p&gt;
&lt;/span&gt;
</summary><category term="schools"></category><category term="jam"></category><category term="batteries"></category><category term="mo-pi"></category><category term="pi-tronics"></category><category term="pi"></category><category term="raspberrypi"></category><category term="gate"></category><category term=""></category></entry><entry><title>Mobile Hot-Swap Power for the Pi</title><link href="http://pi.gate.ac.uk/posts/2013/11/14/mopi-proto2/" rel="alternate"></link><updated>2013-11-14T00:00:00+00:00</updated><author><name>Hamish Cunningham</name></author><id>tag:pi.gate.ac.uk,2013-11-14:posts/2013/11/14/mopi-proto2/</id><summary type="html">
&lt;h2 class="cow-heading"&gt;[MoPi is &lt;b&gt;mobile&lt;/b&gt;, &lt;b&gt;hot-swap&lt;/b&gt; and &lt;b&gt;24/7 power&lt;/b&gt; for the Raspberry Pi.
&lt;a class="cow-url" href="/pages/get-mopi.html"&gt;How to order.&lt;/a&gt;]&lt;/h2&gt;

&lt;p&gt;Mobile power for the Pi &amp;mdash; easy on the one hand, hard on the other: it is easy
to plug in a 5v battery pack &amp;mdash; but when it runs out your Pi gets a power cut
that might well corrupt the SD card.&lt;/p&gt;

&lt;p&gt;Over the last year we've been designing what we hope is the perfect mobile
power solution for the Pi, which we're calling &lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/mopi.html"&gt;MoPi&lt;/a&gt;, and
we've just taken delivery of the second generation prototype. I think it does
pretty much everything you could want for your Pi on the go:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;it will accept multiple sources, including standard AA batteries, or your
  car cigarette lighter, or an old laptop power supply or etc.&lt;/li&gt;
&lt;li&gt;it will let you do hot-swap power replacement without stopping work&lt;/li&gt;
&lt;li&gt;it will shutdown your Pi cleanly if the battery charge level gets too low,
  and it has a neat little power switch on the top to save you logging in to
  shutdown at other times,&lt;/li&gt;
&lt;li&gt;it behaves like a UPS&lt;span class="cow-footnote" name="footnote1"&gt;&lt;sup&gt;&lt;a href="#footnote1"&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/span&gt; when the
  Pi is plugged into a mains supply&lt;/li&gt;
&lt;li&gt;and it even fits in the Pibow (and other well-known Pi cases)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/mopi/proto2-01-500x379.jpg" alt="mopi prototype 2/1" width="500" height="379"&gt;&lt;/p&gt;



&lt;p&gt;&lt;b&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/mopi.html"&gt;Read the main article&lt;/a&gt;.&lt;/b&gt;&lt;/p&gt;
&lt;span class="cow-footnote-section"&gt;
&lt;h1 class="cow-heading"&gt;Footnotes&lt;/h1&gt;
&lt;p&gt;&lt;ol&gt;
&lt;li&gt;
&lt;a class="cow-footnote-anchor" name="footnote1"&gt;&lt;/a&gt;
&lt;span class="cow-footnote-text" name="footnote1"&gt;UPS: Uninterruptible Power Supply&lt;/span&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;/p&gt;
&lt;/span&gt;
</summary><category term="batteries"></category><category term="mo-pi"></category><category term="pi-tronics"></category><category term="pi"></category><category term="raspberrypi"></category><category term="gate"></category><category term=""></category></entry><entry><title>A Raspbian Wrapper for Wiring Pi</title><link href="http://pi.gate.ac.uk/posts/2013/10/09/wiring-pi-package/" rel="alternate"></link><updated>2013-10-09T00:00:00+01:00</updated><author><name>Hamish Cunningham</name></author><id>tag:pi.gate.ac.uk,2013-10-09:posts/2013/10/09/wiring-pi-package/</id><summary type="html">

&lt;p&gt;&lt;em&gt;Packaging the WiringPi library for Raspbian&lt;/em&gt;&lt;/p&gt;



&lt;p&gt;A lot of our recent projects have used the excellent
&lt;a class="cow-url" href="http://wiringpi.com"&gt;WiringPi library&lt;/a&gt; to &lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/basics.html#gpio-software"&gt;talk to the Pi's electronics&lt;/a&gt; from software. A small frustration in this process
has been the library's lack of integration into Raspbian... So I've written
the code needed to do this, and made it available 
&lt;a class="cow-url" href="https://github.com/hamishcunningham/wiringpi/"&gt;from GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The Pi's default operating system,
&lt;a class="cow-url" href="http://www.raspbian.org/"&gt;Raspbian&lt;/a&gt;, is a version of 
&lt;a class="cow-url" href="http://www.debian.org/"&gt;Debian&lt;/a&gt;&lt;span class="cow-footnote" name="footnote1"&gt;&lt;sup&gt;&lt;a href="#footnote1"&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/span&gt;, and has a very powerful system
for distributing software and software updates. This system uses &lt;tt&gt;.deb&lt;/tt&gt; files
containing &lt;em&gt;packaged&lt;/em&gt; versions of software, and it was the means to create one
of these that was missing for WiringPi.&lt;/p&gt;

&lt;p&gt;Now you can install WiringPi without having to download or compile it, like
this:&lt;/p&gt;

&lt;p&gt;&lt;pre class="prettyprint lang-bash"&gt;
  wget https://raw.github.com/hamishcunningham/wiringpi/master/package/2.13/unstable/wiringpi_2.13_armhf.deb
  sudo dpkg -i ./wiringpi_2.13_armhf.deb
&lt;/pre&gt;Hopefully Gordon will find time to pull my changes into his own repository and
pass the package on to the Raspbian people one of these days, which will make
the process even easier.&lt;/p&gt;

&lt;p&gt;Gordon also has lots of good examples and reference materials on his site,
like this &lt;a class="cow-url" href="http://wiringpi.com/examples/blink/"&gt;Blink project&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/wiring-pi-bbd.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/wiring-pi-bbd-500x295.jpg" alt="A
WiringPi breadboard layout" width="500" height="295"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Well worth a visit!&lt;/p&gt;


&lt;!--%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%--&gt;

&lt;p&gt;&lt;b&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/package.html"&gt;Read the main article&lt;/a&gt;.&lt;/b&gt;&lt;/p&gt;
&lt;span class="cow-footnote-section"&gt;
&lt;h1 class="cow-heading"&gt;Footnotes&lt;/h1&gt;
&lt;p&gt;&lt;ol&gt;
&lt;li&gt;
&lt;a class="cow-footnote-anchor" name="footnote1"&gt;&lt;/a&gt;
&lt;span class="cow-footnote-text" name="footnote1"&gt;To be picky, the Pi's
default operating system's full title would be &lt;em&gt;the
&lt;a class="cow-url" href="http://www.raspbian.org/"&gt;Raspbian&lt;/a&gt; distribution of
&lt;a class="cow-url" href="http://www.debian.org/"&gt;Debian&lt;/a&gt; &lt;a class="cow-url" href="http://www.gnu.org/"&gt;GNU&lt;/a&gt;
&lt;a class="cow-url" href="http://www.linuxfoundation.org/"&gt;Linux&lt;/a&gt;&lt;/em&gt;.&lt;/span&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;/p&gt;
&lt;/span&gt;
&lt;script src="https://google-code-prettify.googlecode.com/svn/loader/run_prettify.js"&gt;&lt;/script&gt;
</summary><category term="pi-tronics"></category><category term="pi"></category><category term="raspberrypi"></category><category term="gate"></category><category term="software"></category><category term="packaging"></category><category term="raspbian"></category></entry><entry><title>Never Work With Children or Animals</title><link href="http://pi.gate.ac.uk/posts/2013/10/02/children-and-animals/" rel="alternate"></link><updated>2013-10-02T00:00:00+01:00</updated><author><name>James Wallbank &amp; Hamish Cunningham</name></author><id>tag:pi.gate.ac.uk,2013-10-02:posts/2013/10/02/children-and-animals/</id><summary type="html">



&lt;p&gt;We've got 50 of them coming in &amp;mdash; children, that is, not animals, and
hopefully we'll be able to tell the difference relatively easily :-)&lt;/p&gt;

&lt;p&gt;&lt;a class="cow-url" href="http://ambassadors.rcweb.dcs.shef.ac.uk/"&gt;The scheme&lt;/a&gt; is an opportunity for
girls and boys who have an interest in computing to get a feel for subjects
ranging from computer games and graphics to programming hardware, from large
scale everyday uses in mobile apps and social media to highly specialised
applications from small research teams. As part of the scheme &lt;b&gt;everyone gets a
Raspberry Pi&lt;/b&gt; to take home, and we're throwing in a few bits and pieces of
electronics to get the experimenter ball rolling.&lt;/p&gt;

&lt;!--% YOUTUBE BLUE PETER CLIP HERE--&gt;


&lt;p&gt;One of &lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/basics.html#interaction-electronics"&gt;the beauties of
the Pi&lt;/a&gt; is how easy it is to connect up a few cheap components and jump
straight into the realm of physical computing. Using a couple of Raspberry Pi
&lt;a class="cow-url" href="http://www.ocr.org.uk/qualifications/by-subject/computing/raspberry-pi/"&gt;recipe cards from OCR&lt;/a&gt; we'll do two taster projects:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;traffic lights: cycling red, amber and green LEDs&lt;/li&gt;
&lt;li&gt;jelly baby siren: turning a squidgy sweet into a siren switch&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Any student caught eating their jelly baby before wiring it up to the Pi will
be made to stay behind and clean out the stables.&lt;/p&gt;

&lt;p&gt;And no elephants on site. At all. Or I'm going home.&lt;/p&gt;


&lt;p&gt;&lt;hr&gt;&lt;/p&gt;&lt;h1 class="cow-heading"&gt;Postscript&lt;/h1&gt;

&lt;p&gt;The day went well :-)&lt;/p&gt;

&lt;p&gt;&lt;a class="cow-url" href="http://www.cl.cam.ac.uk/~am21/"&gt;Alan Mycroft&lt;/a&gt; from the
&lt;a class="cow-url" href="http://raspberrypi.org"&gt;Raspberry Pi foundation&lt;/a&gt; gave a lively talk
introducing fundamentals of computing and helped out with our lab sessions.
(And ate several jelly babies, though none of the ones with paper clips
stuffed in them, luckily.) All the materials are available in
&lt;a class="cow-url" href="https://github.com/hamishcunningham/pi-tronics/tree/master/outreach"&gt;our Pi-Tronics repository&lt;/a&gt; but they definitely need some revision &amp;mdash; the
authors learned more than the students from the day!&lt;/p&gt;

&lt;p&gt;Plugging jumpers onto GPIO pins can be tricky:&lt;/p&gt;

&lt;p&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/ambassadors/pi-oneers-003-300x450.jpg" alt="Pi-Oneers at the Cutlers
Ambassadors day" width="300"&gt;&lt;/p&gt;
&lt;!--% images/ambassadors/pi-oneers-003-550x825.jpg--&gt;


&lt;p&gt;Here's one of the authors demonstrating the art of
&lt;a class="cow-url" href="http://www.ocr.org.uk/Images/125881-recipe-card-singing-jelly-baby.pdf"&gt;squeezing a jelly baby&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/ambassadors/pi-oneers-001-500x333.jpg" alt="Pi-Oneers at the Cutlers
Ambassadors day" width="500"&gt;&lt;/p&gt;

&lt;p&gt;And a student setting up her police siren sound file:&lt;/p&gt;

&lt;p&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/ambassadors/pi-oneers-002-550x367.jpg" alt="Pi-Oneers at the Cutlers
Ambassadors day" width="500"&gt;&lt;/p&gt;

&lt;p&gt;Here's &lt;a class="cow-url" href="http://staffwww.dcs.shef.ac.uk/people/S.Wrigley/"&gt;Stuart Wrigley&lt;/a&gt;
demonstrating his Pi-in-a-quadcopter system for sensing river water levels
during flood events:&lt;/p&gt;

&lt;p&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/outreach-day-2.jpg" alt="quadcopter demo" width="500"&gt;&lt;/p&gt;

&lt;p&gt;(Spot the authors looking gormless!)&lt;/p&gt;

&lt;p&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/outreach-day-3.jpg" alt="quadcopter detail" width="500"&gt;&lt;/p&gt;

&lt;p&gt;Now everyone wants a quadcopter :-)&lt;/p&gt;

&lt;p&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/outreach-day-1.jpg" alt="Pi-oneers in the quad" width="500"&gt;&lt;/p&gt;


&lt;p&gt;&lt;hr&gt;
Hamish's spiel:
&lt;blockquote&gt;
Hands up who's been to IKEA?&lt;/p&gt;

&lt;p&gt;And when you got home you put the stuff together yourselves, right?&lt;/p&gt;

&lt;p&gt;My grandad was a carpenter, and when he was your age No One built their own
wardrobe &amp;mdash; they got a skilled guy like him to build it for them.&lt;/p&gt;

&lt;p&gt;Well now, in your time, we're seeing the same process with computers. For your
generation, you can pick up a few bits and pieces and put them together
yourselves.&lt;/p&gt;

&lt;p&gt;But now it's even better, because computers can be programmed, so after you
put them together you can get them to do all sorts of new and wierd and
wonderful stuff...&lt;/p&gt;

&lt;p&gt;That's the future, and it's yours more than it is mine &amp;mdash; and I envy you!&lt;/p&gt;

&lt;p&gt;Let's put a bit of that future on the tables in front of you... let's plug in
those computers that you have in your bags and put them together with some
bits and pieces of electronics and program them to do something, and see where
it takes us...&lt;/p&gt;

&lt;!--% ... quick start guide ...--&gt;

&lt;p&gt;&lt;/blockquote&gt;
&lt;hr&gt;&lt;/p&gt;


&lt;p&gt;&lt;b&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/schools.html"&gt;Read the main article&lt;/a&gt;.&lt;/b&gt;&lt;/p&gt;
</summary><category term="schools"></category><category term="education"></category><category term="pi"></category><category term="raspberrypi"></category><category term="gate"></category></entry><entry><title>Open Culture Tech</title><link href="http://pi.gate.ac.uk/posts/2013/09/16/open-culture-tech/" rel="alternate"></link><updated>2013-09-16T00:00:00+01:00</updated><author><name>Hamish Cunningham, Fred Sonnenwald, Bo Meson</name></author><id>tag:pi.gate.ac.uk,2013-09-16:posts/2013/09/16/open-culture-tech/</id><summary type="html">

&lt;!--% *Stop press:* here's the webserver for the Pi-Cam exhibit:--&gt;

&lt;!--% http://002.cam.pagekite.me/--&gt;


&lt;p&gt;On wednesday of this week Sheffield's
&lt;a class="cow-url" href="http://www.sheffield.ac.uk/ideasbazaar"&gt;Ideas Bazaar&lt;/a&gt; will spring into
action, mixing together a witch's brew of artists, scientists and engineers of
all shapes, sizes, and personal hygene statuses. A select group of the Pi.GATE
team (Bo, Fred and Hamish) have been bending their enormous collective
intellect towards finding their way to that end of the campus without a
satnav. If we make it, we'll let you know. (Want to join in? Hit the &amp;quot;contact&amp;quot;
button above.)&lt;/p&gt;

&lt;p&gt;In the meantime, here are some of our notes for the event:&lt;/p&gt;

&lt;p&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/pi-brush-snap.jpg" alt="Pi Brush snapshot"&gt;&lt;/p&gt;

&lt;p&gt;There is a new conjunction emerging around open hardware, maker culture, and
art. Parallels exist with the explosive change in pop culture pressaged by
punk in the late 1970s: from the Homebrew Computer Club trading circuits and
information; from Iain M. Banks' legacy of utopian technofutures, blending
electro-augmented humanity with benevolent AI; from the wearable electronics
kits (e.g. from &lt;a class="cow-url" href="http://adafruit.com/"&gt;Adafruit.com&lt;/a&gt; &amp;mdash; echoing Lady Ada
Lovelace, inventor of the computer algorithm); to the latest rounds of
sampling and remix.&lt;/p&gt;

&lt;p&gt;&lt;a class="cow-url" href="http://en.wikipedia.org/wiki/List_of_open-source_hardware_projects"&gt;Open-source hardware&lt;/a&gt; allows people to make their own robots, cameras,
electrocardiagraph machines and even full computers by downloading schematics
and building &amp;mdash; incorporating any changes they need &amp;mdash; and, typically, free
open-source software is available to run these projects. 3D printers have
helped this adoption of the open-everything ethos.&lt;/p&gt;

&lt;p&gt;As this site and many others testify, there are stacks of DIY projects based
on the Raspberry Pi, and the flood showns no sign of slowing. The Pi is a
small cheap computer which is very easy to cobble together with other devices.
It has a large community behind it and is one of the drivers behind proposed
changes in the &lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/schools.html"&gt;schools ICT curriculum&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As part of a trend to open hardware and maker culture the Pi is also a vehicle
for localist responses to climate change and peak oil: the more we manufacture
locally the more secure we are (the Pi is made in Wales); the less energy we
use the less carbon we pump into the atmosphere (the Pi is low power).&lt;/p&gt;

&lt;p&gt;&lt;b&gt;&lt;em&gt;Future Making&lt;/em&gt;&lt;/b&gt; will be a rolling event over two days with around a dozen
exhibits plus an hourly short stage show. The target audience is anyone
curious, with secondary schools invited to attend if the timing of the event
permits.  The performers are expected to be engineers, musicians, social
scientists, dancers, hackers and visual artists.&lt;/p&gt;

&lt;p&gt;Some more of the gorey details (from
&lt;a class="cow-url" href="https://github.com/hamishcunningham/pi-tronics/"&gt;our GitHub repository&lt;/a&gt;):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a class="cow-url" href="https://github.com/hamishcunningham/pi-tronics/blob/master/ideas-bazaar/posters/open-culture-tech-small.pdf?raw=true"&gt;Open Culture Tech&lt;/a&gt;: entering the age of open electronics&lt;/li&gt;
&lt;li&gt;&lt;a class="cow-url" href="https://github.com/hamishcunningham/pi-tronics/blob/master/ideas-bazaar/posters/schools.pdf?raw=true"&gt;Open Schools Tech&lt;/a&gt;: programming is back on the curriculum!&lt;/li&gt;
&lt;li&gt;&lt;a class="cow-url" href="https://github.com/hamishcunningham/pi-tronics/blob/master/ideas-bazaar/posters/pi-brush-code.pdf?raw=true"&gt;Pi Brush&lt;/a&gt;, perfect project for the digital Jackson Pollock&lt;/li&gt;
&lt;li&gt;&lt;a class="cow-url" href="https://github.com/hamishcunningham/pi-tronics/blob/master/ideas-bazaar/posters/snowcam.pdf?raw=true"&gt;SnowCam&lt;/a&gt;, a programmable spook-free camera&lt;/li&gt;
&lt;li&gt;&lt;a class="cow-url" href="https://github.com/hamishcunningham/pi-tronics/blob/master/ideas-bazaar/posters/future-making.pdf?raw=true"&gt;Future Making&lt;/a&gt;, exploring open {X} tech&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And to whet your appetite, a random selection of the artbites:&lt;/p&gt;

&lt;p&gt;Google gave $1m to fund Pi hardware for schools. Eben Upton (of the Pi
foundation) is the Chesire Cat impersonator here:&lt;/p&gt;

&lt;p&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/google-donation-350x237.jpg" alt="Google schools donation.jpg" width="350" height="237"&gt;&lt;/p&gt;

&lt;p&gt;That's all very well, but &amp;quot;At Boots science is for boys and pink princess toys
are for girls&amp;quot; &amp;mdash;
&lt;a class="cow-url" href="http://minigirlgeek.wordpress.com/"&gt;Amy Mather&lt;/a&gt; (14-year-old Pi hacker) at
&lt;a class="cow-url" href="http://wutheringbytes.com/"&gt;Wuthering Bytes&lt;/a&gt;, September 14th 2013.&lt;/p&gt;

&lt;p&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/amymather-300x300.jpg" alt="Amy Mather" width="300" height="300"&gt;&lt;/p&gt;

&lt;p&gt;What to do? Commission J.K. Rowling to write The Adventures of Princess Pi?
Seek venture capital for Pink Electronics Ltd.? Or order a large consignment
of Barbie-the-Programmer dolls?&lt;/p&gt;

&lt;p&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/barbie-374x500.jpg" alt="Barbie the programmer" width="374" height="500"&gt;&lt;/p&gt;

&lt;p&gt;(from the &lt;a class="cow-url" href="http://www.wisecampaign.org.uk/"&gt;WISE&lt;/a&gt;
&lt;a class="cow-url" href="http://www.wisecampaign.org.uk/blogs/getset-women/2010/05/barbie"&gt;blog&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Perhaps games with a porpoise would interest girls? (Sorry.)&lt;/p&gt;

&lt;p&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/games-with-a-porpoise-350x228.png" alt="Games with a porpoise" width="350" height="228"&gt;&lt;/p&gt;

&lt;p&gt;Enough frivolity. Amy also said we need:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;better role models&lt;/li&gt;
&lt;li&gt;better opportunities&lt;/li&gt;
&lt;li&gt;no discrimination (&lt;a class="cow-url" href="http://www.equalpayportal.co.uk/"&gt;equal pay for equal
  work&lt;/a&gt;!)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Some organisations working in this direction (click through for details):&lt;/p&gt;

&lt;p&gt;&lt;a class="cow-url" href="http://www.stemnet.org.uk/"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/stemnet-339x115.gif" alt="StemNet" width="339" height="115"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a class="cow-url" href="https://www.codeclub.org.uk/"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/code-club-150x150.svg" alt="Code Club" width="150" height="150"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are more; please &lt;a class="cow-url" href="https://gate.ac.uk/g8/contact"&gt;ping us&lt;/a&gt; to add to
this list! And if you're in Sheffield this Wednesday, come say hi. Ciao.&lt;/p&gt;



&lt;p&gt;&lt;b&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/pibrush.html"&gt;Read the main article&lt;/a&gt;.&lt;/b&gt;&lt;/p&gt;
</summary><category term="schools"></category><category term="maker culture"></category><category term="open hardware"></category><category term="open culture"></category><category term="pi-tronics"></category><category term="pi"></category><category term="raspberrypi"></category><category term="gate"></category><category term="ideas bazaar"></category></entry><entry><title>Winking Pi: Solving the IP Address Catch-22</title><link href="http://pi.gate.ac.uk/posts/2013/08/25/winking-pi/" rel="alternate"></link><updated>2013-08-25T00:00:00+01:00</updated><author><name>Hamish Cunningham</name></author><id>tag:pi.gate.ac.uk,2013-08-25:posts/2013/08/25/winking-pi/</id><summary type="html">

&lt;p&gt;I can fit a Pi in my overnight bag, but I can't fit a monitor. How can I
remote log into my Pi when I'm on the road? This is a Catch-22 &amp;mdash; I need a
network address (an &lt;em&gt;IP address&lt;/em&gt;) to log in, but to get the address I need to
be logged in. &lt;/p&gt;

&lt;p&gt;A related question: I want to connect my Pi to a new WiFi network, but to
connect I need to give the beast the network SSID and passphrase &amp;mdash; and again
I need to log in first...&lt;/p&gt;

&lt;p&gt;There are several solutions to the first problem &amp;mdash; one good one is to set up
your Pi so that it blinks its IP address on the status LED. For the second
problem there are also several solutions, including editing the WiFi config on
another machine that has an SD card reader, or setting up access to your
phone's WiFi hotspot.&lt;/p&gt;

&lt;p&gt;I've written a &lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/blinkip.html"&gt;Raspbian package called BlinkIP&lt;/a&gt; to do
some of this stuff, and you can download it from our new
&lt;a class="cow-url" href="https://launchpad.net/~hamish-dcs/+archive/pi-gate"&gt;Ubuntu-hosted package
archive&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Happy networking :-)&lt;/p&gt;



&lt;p&gt;&lt;b&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/blinkip.html"&gt;Read the main article&lt;/a&gt;.&lt;/b&gt;&lt;/p&gt;
</summary><category term="network"></category><category term="ip address"></category><category term="wifi"></category><category term="gpio"></category><category term="pi-tronics"></category><category term="pi"></category><category term="raspberrypi"></category><category term="gate"></category></entry><entry><title>Chasing Pine Martens</title><link href="http://pi.gate.ac.uk/posts/2013/08/05/chasing-pine-martens/" rel="alternate"></link><updated>2013-08-05T00:00:00+01:00</updated><author><name>Hamish Cunningham</name></author><id>tag:pi.gate.ac.uk,2013-08-05:posts/2013/08/05/chasing-pine-martens/</id><summary type="html">

&lt;p&gt;I'm in Bulgaria in a house at the foot of mount Vitosha, on the outskirts of
the capital, Sofia. Sofia is home to something approaching 2 million people
(which is more than 10% of the population of the whole country), and many
travel in and out each week to find work in the big city. Vitosha is the lungs
of the city, and its slopes are the perfect place to stay if you're keen to
walk in its forests, or ski, or just get some cool air in the heat of the
summer. &lt;br&gt; &lt;a class="cow-url" href="http://en.wikipedia.org/wiki/Vitosha"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/vitosha-1.jpg" alt="Mount Vitosha" width="400" height="243"&gt;&lt;/a&gt; &lt;br&gt; Sitting in the
garden at dusk the other day, we spotted a couple of dark shapes scurrying
along &amp;mdash; pine martens! Or possibly their smaller cousin the beech marten: &lt;br&gt;
&lt;a class="cow-url" href="http://en.wikipedia.org/wiki/Beech_marten"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/beech-marten-1.jpg" alt="A beech marten" width="200" height="317"&gt;&lt;/a&gt; &lt;br&gt; They are beautiful creatures, but quite shy,
and they only come out after dark... You can see where this is going &amp;mdash; I
wonder if I can capture some images with a Pi, a motion sensor and a camera
module?&lt;/p&gt;

&lt;p&gt;Well, first things first, I'm going to need to put it on top of next door's
shed in the path of the night-time run that the martens make on their way to
hunt mice or steal chicken's eggs from our neighbours. So I need a good
battery pack...&lt;/p&gt;

&lt;p&gt;As Gray Girling points out in his excellent
&lt;a class="cow-url" href="http://www.amazon.co.uk/Raspberry-Pi-Manual-practical-revolutionary/dp/0857332953/"&gt;Haynes manual&lt;/a&gt;, battery power for the Pi is harder than it looks at first
sight. The Pi requires both fairly high current (at least for the Model B) and
a quite stable voltage. And, as I found out when I when testing my first
efforts, an unscheduled low voltage shutdown can corrupt the SD card image and
leave you with an unbootable setup :-(&lt;/p&gt;

&lt;p&gt;Time for an analysis of &lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/mopi.html"&gt;the perfect Pi battery pack&lt;/a&gt;, and
Bulgaria is the perfect place to experiment with this stuff as it's crawling
with electronics and computing engineers (having at one time been supplier of
around half of the USSR's computer hardware). &lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/about.html#lubo"&gt;Lubo
Bontchev&lt;/a&gt; of &lt;a class="cow-url" href="http://www.selcomltd.com/"&gt;Selcom custom electronics&lt;/a&gt; has
worked on everything from solar panels to satelites and has now built Pi.GATE
some prototypes for hot-swap mobile Pi power. Here's the regulator circuit on
the left and the controller on the right:&lt;/p&gt;

&lt;table&gt; &lt;tr&gt;&lt;td&gt; &amp;nbsp;&amp;nbsp;&lt;/td&gt;&lt;td&gt;
&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/mopi/prototype-regulator-05.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/mopi/thumbs/prototype-regulator-05.jpg" alt="mopi prototype 5" width="200" height="194"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;&lt;td&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/td&gt;&lt;td&gt;
&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/mopi/prototype-controller-01.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/mopi/thumbs/prototype-controller-01.jpg" alt="mopi prototype 1" width="270" height="195"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;The &lt;em&gt;regulator&lt;/em&gt; supplies the 5 volts at 1 amp that the Pi wants, and it has
two input connectors and some clever circuitry to support hot-swap of battery
packs. (In the picture we've got two packs attached, one full one and one
discharged one, while we swap from one to the other.) The &lt;em&gt;controller&lt;/em&gt;
monitors battery levels and reports them to the Pi (over 3 binary-coded GPIO
pins, for example) and also drives an indicator LED.&lt;/p&gt;

&lt;p&gt;Now, figuring out how to test all this stuff is a lot of hard work, so,
natural shirker that I am, I borrowed my nephew Vlady to help. He came up with
a great idea &amp;mdash; why not take a picture of the indicator LED whenever the GPIO
level monitoring code detects a change? Here he is (in a photo taken from the
Pi cam) at the &lt;em&gt;Eureka!&lt;/em&gt; moment:&lt;/p&gt;

&lt;p&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/vladi.jpg" alt="Vladimir" width="300" height="266"&gt;&lt;/p&gt;

&lt;p&gt;Nice one V, I think you've got yourself a job :-;&lt;/p&gt;

&lt;p&gt;Our first test managed to run the model B for nine hours using eight AA NiMH
batteries (2400mAh cells) &amp;mdash; definitely promising!&lt;/p&gt;

&lt;p&gt;Some more views of the regulator:&lt;/p&gt;

&lt;table&gt; &lt;tr&gt;&lt;td&gt; &amp;nbsp;&amp;nbsp;&lt;/td&gt;&lt;td&gt;
&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/mopi/prototype-regulator-01.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/mopi/thumbs/prototype-regulator-01.jpg" alt="mopi prototype 1" width="200" height="170"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;&lt;td&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;&lt;td&gt;
&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/mopi/prototype-regulator-02.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/mopi/thumbs/prototype-regulator-02.jpg" alt="mopi prototype 2" width="200" height="155"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt; &amp;nbsp;&amp;nbsp;&lt;/td&gt;&lt;td&gt;
&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/mopi/prototype-regulator-03.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/mopi/thumbs/prototype-regulator-03.jpg" alt="mopi prototype 3" width="200" height="203"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;&lt;td&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;&lt;td&gt;
&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/mopi/prototype-regulator-04.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/mopi/thumbs/prototype-regulator-04.jpg" alt="mopi prototype 4" width="200" height="233"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;Now, where have those pine martens got to?&lt;/p&gt;



&lt;p&gt;&lt;b&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/mopi.html"&gt;Read the main article&lt;/a&gt;.&lt;/b&gt;&lt;/p&gt;
</summary><category term="batteries"></category><category term="mo-pi"></category><category term="pi-tronics"></category><category term="pi"></category><category term="raspberrypi"></category><category term="gate"></category></entry><entry><title>Lego Engineering</title><link href="http://pi.gate.ac.uk/posts/2013/07/11/lego-engineering/" rel="alternate"></link><updated>2013-07-11T00:00:00+01:00</updated><author><name>Hamish Cunningham</name></author><id>tag:pi.gate.ac.uk,2013-07-11:posts/2013/07/11/lego-engineering/</id><summary type="html">

&lt;p&gt;There's Lego, and then there's LEGO:&lt;/p&gt;

&lt;p&gt;&lt;a class="cow-url" href="http://www.wired.com/underwire/2013/05/largest-lego-x-wing/"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/thumbs/wired-lego-xwing.jpg" alt="BIG LEGO" width="280" height="187"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you're planning on a monster like this with millions of bricks then you
definitely need to call in the engineers (not least to move the beast around
&amp;mdash; it weighs more than 20 tonnes!).&lt;/p&gt;

&lt;p&gt;Not to be outdone, our resident &lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/about.html#fred"&gt;structural engineer&lt;/a&gt;
has put together a disquisition on the joys of &lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/legocases.html"&gt;LEGO
cases for the Pi&lt;/a&gt;, including this one that he built himself &amp;mdash;
&lt;br&gt; &lt;a class="cow-url" href="http://pi.gate.ac.uk/images/case/01case.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/case/thumbs/01case.jpg" alt="A lego Pi
case" width="200" height="150"&gt;&lt;/a&gt; &lt;br&gt; &amp;mdash; with nothing but a slide rule and a copy of Newton's
&lt;em&gt;Principia&lt;/em&gt; to help him.&lt;/p&gt;

&lt;p&gt;The result is not just a &lt;em&gt;thing&lt;/em&gt; of beauty, but a &lt;em&gt;process&lt;/em&gt; of beauty :-)&lt;/p&gt;



&lt;p&gt;&lt;b&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/legocases.html"&gt;Read the main article&lt;/a&gt;.&lt;/b&gt;&lt;/p&gt;
</summary><category term="lego"></category><category term="cases"></category><category term="pi"></category><category term="raspberrypi"></category><category term="gate"></category></entry><entry><title>Learn When You're Young</title><link href="http://pi.gate.ac.uk/posts/2013/06/28/neural-plasticity/" rel="alternate"></link><updated>2013-06-28T00:00:00+01:00</updated><author><name>Hamish Cunningham</name></author><id>tag:pi.gate.ac.uk,2013-06-28:posts/2013/06/28/neural-plasticity/</id><summary type="html">

&lt;p&gt;Learn when you're young, remember when you're old.&lt;/p&gt;

&lt;p&gt;When I was 16 or so I was totally obsessed by electronics of one sort or
another. (Ok, not &lt;em&gt;totally&lt;/em&gt;; there was also space in there for thinking about
food and about one other subject which I'll leave as an exercise for the
reader.) I particularly remember a project that put an FM radio in a TicTac
box &amp;mdash; kind of like this beautiful
&lt;a class="cow-url" href="http://www.mds975.co.uk/Content/trfradios03.html"&gt;match box radio&lt;/a&gt;... &lt;br&gt;
&lt;a class="cow-url" href="http://www.mds975.co.uk/Images/radios/austin_hellier_MK484-2-001.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/match-box-radio.jpg" alt="match box radio" width="500" height="369"&gt;&lt;/a&gt; &lt;br&gt;
...only in a &lt;a class="cow-url" href="http://en.wikipedia.org/wiki/Tic_Tac"&gt;Tic Tac&lt;/a&gt; box.&lt;/p&gt;

&lt;p&gt;Heady stuff. (Ok, not as heady as the third category of 16-year-old obsession,
but still I used to spend hours poring over a hot &lt;a class="cow-url" href="http://www.maplin.co.uk/"&gt;Maplin&lt;/a&gt; catalogue planning my next foray into the tantalising world of
transistors (or trannies), tantalum capacitors, thin film resistors and the
like.)&lt;/p&gt;

&lt;p&gt;Fast forward ahem years (ok &amp;mdash; 32, to be precise). As part of a
ground-breaking excursion to the very frontiers of human knowledge (otherwise
known as &lt;a class="cow-url" href="http://pi.gate.ac.uk/"&gt;pi.gate.ac.uk&lt;/a&gt;) I'm building circuits,
figuring out which combinations of components will solve a particular problem,
prototyping them virtually on &lt;a class="cow-url" href="https://www.circuitlab.com/"&gt;CircuitLab&lt;/a&gt;,
prototyping them in hardware on a breadboard, and, finally, soldering up
&amp;quot;production prototypes&amp;quot; on a stripboard. All good clean family fun, and useful
to boot. (Thanks, &lt;a class="cow-url" href="http://www.raspberrypi.org/"&gt;Raspberry Pi&lt;/a&gt;, for making all
this possible!)&lt;/p&gt;

&lt;p&gt;A lot of the skills and knowledge that I'm using is stuff that I haven't used
for the intervening thirty-odd years &amp;mdash; but they're still there. What you
learn when you're young, and what you learn when you're &lt;em&gt;interested&lt;/em&gt;, stays
with you. It's a neural plasticity thing.&lt;/p&gt;

&lt;p&gt;An upshot of all this, is that putting together a simple circuit board on a
Friday afternoon (instead of doing what I'm paid for, ahem) is a whole lot of
fun. And the pictures are almost as interesting as Category Three (this may
also be an age thing). Do let me know if you agree... here they
are: &lt;/p&gt;

&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;table&gt;
&lt;tr&gt;&lt;td&gt; &lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/flood-alarm-detail-5.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/thumbs/flood-alarm-detail-5.jpg" alt="p'eye candy" width="400"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;&lt;td&gt; &lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/flood-alarm-detail-6.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/thumbs/flood-alarm-detail-6.jpg" alt="p'eye candy"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt; &lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt; &lt;table&gt;
&lt;tr&gt;&lt;td&gt; &lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/flood-alarm-detail-3.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/thumbs/flood-alarm-detail-3.jpg" alt="p'eye candy"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;&lt;td&gt; &lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/flood-alarm-detail-1.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/thumbs/flood-alarm-detail-1.jpg" alt="p'eye candy"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;&lt;td&gt; &lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/flood-alarm-detail-2.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/thumbs/flood-alarm-detail-2.jpg" alt="p'eye candy"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt; &lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;!--
%[ | %[
| %(images/flood-alarm-detail-5.jpg,
  %image(images/thumbs/flood-alarm-detail-5.jpg, p'eye candy, 280, 133))
| %(images/flood-alarm-detail-6.jpg,
  %image(images/thumbs/flood-alarm-detail-6.jpg, p'eye candy, 280, 281))
| %] |
---
| %[
| %(images/flood-alarm-detail-3.jpg,
  %image(images/thumbs/flood-alarm-detail-3.jpg, p'eye candy, 280, 214))
| %(images/flood-alarm-detail-1.jpg,
  %image(images/thumbs/flood-alarm-detail-1.jpg, p'eye candy, 280, 154))
| %(images/flood-alarm-detail-2.jpg,
  %image(images/thumbs/flood-alarm-detail-2.jpg, p'eye candy, 280, 166))
| %] | %]
--&gt;



&lt;p&gt;&lt;b&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/basics.html"&gt;Read the main article&lt;/a&gt;.&lt;/b&gt;&lt;/p&gt;
</summary><category term="pi-tronics"></category><category term="pi"></category><category term="raspberrypi"></category><category term="gate"></category></entry><entry><title>It's a Jungle Out There</title><link href="http://pi.gate.ac.uk/posts/2013/06/26/alternatives/" rel="alternate"></link><updated>2013-06-26T00:00:00+01:00</updated><author><name>Hamish Cunningham</name></author><id>tag:pi.gate.ac.uk,2013-06-26:posts/2013/06/26/alternatives/</id><summary type="html">

&lt;p&gt;For a couple of years now I've been working on some cheap home computing stuff
that might scratch a couple of itches with one stone&lt;span class="cow-footnote" name="footnote1"&gt;&lt;sup&gt;&lt;a href="#footnote1"&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/span&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;a set-top media center that doesn't cost a fortune, but does have a decent
  web browser&lt;/li&gt;
&lt;li&gt;a way of communicating with family and friends that doesn't involve getting
  all those dodgy adverts from Facebook&lt;span class="cow-footnote" name="footnote2"&gt;&lt;sup&gt;&lt;a href="#footnote2"&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;a worm-hole generator piped into 1980 and localised on my bald patch&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I'm still waiting for the worm-hole thing, but the other stuff is getting very
do-able, and the Raspberry Pi is definitely part of the picture. To test out
various options I picked up a bunch of different bits of hardware that do jobs
similar to the Pi in one way or other... And &lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/about.html#fred"&gt;Fred&lt;/a&gt; is
busy putting them through their paces for &lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/hardware.html"&gt;this review
article&lt;/a&gt;. He's taken some pics:&lt;/p&gt;

&lt;table&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/hardware/apc8750.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/hardware/thumbs/apc8750.jpg" alt="APC 8750" width="150" height="93"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;&lt;td&gt;
&lt;p&gt;&lt;a class="cow-url" href="http://apc.io/products/8750a/"&gt;APC 8750&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;&lt;td&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;&lt;td&gt;
&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/hardware/beagleboneblack.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/hardware/thumbs/beagleboneblack.jpg" alt="Beagle Bone Black" width="150" height="100"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;&lt;td&gt;
&lt;p&gt;&lt;a class="cow-url" href="http://beagleboard.org/Products/BeagleBone%20Black"&gt;Beagle Bone Black&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/hardware/cubieboard.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/hardware/thumbs/cubieboard.jpg" alt="CubieBoard" width="150" height="109"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;&lt;td&gt;
&lt;p&gt;&lt;a class="cow-url" href="http://cubieboard.org/"&gt;Cubieboard&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;&lt;td&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;&lt;td&gt;
&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/hardware/dreamplug.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/hardware/thumbs/dreamplug.jpg" alt="DreamPlug" width="150" height="96"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;&lt;td&gt;
&lt;p&gt;&lt;a class="cow-url" href="http://www.globalscaletechnologies.com/t-dreamplugdetails.aspx"&gt;DreamPlug&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/hardware/minipc.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/hardware/thumbs/minipc.jpg" alt="MiniPC" width="150" height="104"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;&lt;td&gt;
&lt;p&gt;&lt;a class="cow-url" href="https://www.miniand.com/products/MK802%20Android%20Mini%20PC"&gt;MK802 Mini PC&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;&lt;td&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;&lt;td&gt;
&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/hardware/pimodela.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/hardware/thumbs/pimodela.jpg" alt="Pi Model A" width="150" height="100"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;&lt;td&gt;
&lt;p&gt;&lt;a class="cow-url" href="http://www.raspberrypi.org/archives/3215"&gt;Pi Model A&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/hardware/pimodelbrev2.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/hardware/thumbs/pimodelbrev2.jpg" alt="Pi Model B rev2" width="150" height="115"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;&lt;td&gt;
&lt;p&gt;&lt;a class="cow-url" href="http://www.raspberrypi.org/faqs"&gt;Pi Model B&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;&lt;td&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;&lt;td&gt;
&lt;p&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/images/hardware/tonidoplug.jpg"&gt;&lt;img class="cow-img" src="http://pi.gate.ac.uk/images/hardware/thumbs/tonidoplug.jpg" alt="Tonido Plug" width="150" height="96"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;&lt;td&gt;
&lt;p&gt;&lt;a class="cow-url" href="http://www.tonidoplug.com/"&gt;TonidoPlug&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;We'll keep you posted as he digs the dirt on this bunch... But if he figures
out the worm-hole generator thing I'm off to see all the Clash gigs again
before anything else.&lt;/p&gt;



&lt;p&gt;&lt;b&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/hardware.html"&gt;Read the main article&lt;/a&gt;.&lt;/b&gt;&lt;/p&gt;
&lt;span class="cow-footnote-section"&gt;
&lt;h1 class="cow-heading"&gt;Footnotes&lt;/h1&gt;
&lt;p&gt;&lt;ol&gt;
&lt;li&gt;
&lt;a class="cow-footnote-anchor" name="footnote1"&gt;&lt;/a&gt;
&lt;span class="cow-footnote-text" name="footnote1"&gt;Mixed metaphors?
Love 'em!&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a class="cow-footnote-anchor" name="footnote2"&gt;&lt;/a&gt;
&lt;span class="cow-footnote-text" name="footnote2"&gt;&amp;quot;Meet your dream partner at
  our new site, exclusively for the balding and podgy!&amp;quot; A friend of mine
  claims that the only reason I get dodgy adverts is because I visit dodgy
  sites with my cookies turned on, but I'm sure there's no truth in that at
  all. And I'll sue.&lt;/span&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;/p&gt;
&lt;/span&gt;
</summary><category term="hardware"></category><category term="pi-alikes"></category><category term="pi"></category><category term="raspberrypi"></category><category term="gate"></category></entry><entry><title>Help! My Toast is Burning!</title><link href="http://pi.gate.ac.uk/posts/2013/06/10/notipifications/" rel="alternate"></link><updated>2013-06-10T00:00:00+01:00</updated><author><name>Hamish Cunningham</name></author><id>tag:pi.gate.ac.uk,2013-06-10:posts/2013/06/10/notipifications/</id><summary type="html">

&lt;p&gt;No matter how much you love your Pi, some time or other you will inevitably be
forced to leave it behind while you do something boring like go to work, or
listen to your parents bang on about the need to get qualified, or another of
those little annoyances that life seems so full of. Hey ho. If your Pi is
&lt;a class="cow-non-existant-url" href="/posts/2013/04/11/sensing-and-responding/"&gt;running a sensor&lt;/a&gt; that you need
to be kept in touch with, then you need a way of getting your Pi to notify you
when something important happens. &lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/about.html#hamish"&gt;I&lt;/a&gt; use our
&lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/basics.html#flood-alarm"&gt;flood alarm&lt;/a&gt; to keep a check on some dodgy
plumbing in my basement, for example, and need to know PDQ if the house starts
to fill up with cold wet stuff.&lt;/p&gt;

&lt;p&gt;Our latest tutorial takes us through three options for &lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/notipi.html"&gt;telling the outside world&lt;/a&gt; about Stuff Going On from your Pi:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;via SMS text message to your phone, using &lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/notipi.html#bulk-sms"&gt;a web service&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;via SMS using &lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/notipi.html#nokia-sms"&gt;a phone&lt;/a&gt; attached to the Pi&lt;/li&gt;
&lt;li&gt;via a &lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/notipi.html#pi-twitter"&gt;Twitter post&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Happy notipifications â˜º&lt;/p&gt;



&lt;p&gt;&lt;b&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/notipi.html"&gt;Read the main article&lt;/a&gt;.&lt;/b&gt;&lt;/p&gt;
</summary><category term="software"></category><category term="linux"></category><category term="pi"></category><category term="raspberrypi"></category><category term="gate"></category></entry><entry><title>Stay Dry Cheaply</title><link href="http://pi.gate.ac.uk/posts/2013/06/05/stay-dry-cheaply/" rel="alternate"></link><updated>2013-06-05T00:00:00+01:00</updated><author><name>Hamish Cunningham</name></author><id>tag:pi.gate.ac.uk,2013-06-05:posts/2013/06/05/stay-dry-cheaply/</id><summary type="html">

&lt;p&gt;One of the projects in our &lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/basics.html"&gt;basic pi-tronics&lt;/a&gt; tutorial is
a &lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/basics.html#flood-alarm"&gt;simple flooding alarm&lt;/a&gt; which senses
unwanted water flows and sends a text message (or makes a tweet, or etc.) to
give you a heads up before things get extremely damp.&lt;/p&gt;

&lt;p&gt;This type of thing is a good illustration of how the Pi can result in &lt;b&gt;really
cheap&lt;/b&gt; solutions &amp;mdash; I just came across a commercial alternative to this
circuit (but without the SMS functions) that costs more than &amp;pound;400! The
Pi-based version has a total materials cost of around &amp;pound;50. Quite a saving.&lt;/p&gt;

&lt;!--% http://www.serverscheck.com/--&gt;


&lt;p&gt;That's not to say that the commercial version is overpriced; it comes in a
lovely metal box, has full service and support behind it, etc. etc. But for
someone who just wants something simple and cheap (and fun to build!) the Pi
really wins on price.&lt;/p&gt;

&lt;p&gt;Some of the reasons for this are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;DIY is cheap, at least when the base materials are also cheap&lt;/li&gt;
&lt;li&gt;a general purpose computer means much less need for (expensive) specialist
  hardware&lt;/li&gt;
&lt;li&gt;sharing: the rapid growth of the Pi community and their philosophy of
  openness and sharing means it is easy to build on the work of others (which
  also goes for the Linux operating system that the Pi runs on)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ok, I used up several evenings and weekends, but it was more fun than watching
the telly :-)&lt;/p&gt;



&lt;p&gt;&lt;b&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/basics.html"&gt;Read the main article&lt;/a&gt;.&lt;/b&gt;&lt;/p&gt;
</summary><category term="hardware"></category><category term="gpio"></category><category term="pi-tronics"></category><category term="pi"></category><category term="raspberrypi"></category><category term="gate"></category></entry><entry><title>Pigs and Pi</title><link href="http://pi.gate.ac.uk/posts/2013/05/19/pigs-and-pi/" rel="alternate"></link><updated>2013-05-19T00:00:00+01:00</updated><author><name>Hamish Cunningham</name></author><id>tag:pi.gate.ac.uk,2013-05-19:posts/2013/05/19/pigs-and-pi/</id><summary type="html">

&lt;p&gt;I have a friend and colleague called Angus (fellow member of the
silly-name-for-an-Englishman club) who is one of surely very few people who
are both computer programmers and pig farmers. Down on the farm Angus recently
had some building work done, and the other day he had an illuminating chat
with one of the guys who did the work. They were talking about smart phones,
and this lad (he's 25) happenned to mention that his father (who's 49) had
programmed several phone apps for the family business. It turned out that dad
had (like Angus) been the proud owner of a ZX Spectrum in the 1980s, and had
been inspired to progamme by the combination of cheap hardware and an open
learning environment. His son, in contrast, was served up with a diet of
Microsoft word processing, and knows enough about computing to fill in the
back of a postage stamp as a result.&lt;/p&gt;

&lt;p&gt;So: let's &lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/basics.html"&gt;get hacking on the Pi&lt;/a&gt;, and help get
&lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/schools.html"&gt;Pi stuff into schools&lt;/a&gt; so that kids have a
chance to stay ahead of the technology wave as producers and not just
consumers!&lt;/p&gt;



&lt;p&gt;&lt;b&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/basics.html"&gt;Read the main article&lt;/a&gt;.&lt;/b&gt;&lt;/p&gt;
</summary><category term="hardware"></category><category term="gpio"></category><category term="pi-tronics"></category><category term="schools"></category><category term="pi"></category><category term="raspberrypi"></category><category term="gate"></category></entry><entry><title>School's Out?</title><link href="http://pi.gate.ac.uk/posts/2013/05/18/schools-out/" rel="alternate"></link><updated>2013-05-18T00:00:00+01:00</updated><author><name>Hamish Cunningham</name></author><id>tag:pi.gate.ac.uk,2013-05-18:posts/2013/05/18/schools-out/</id><summary type="html">

&lt;p&gt;The argument for a new approach to computing in schools goes something like
this:&lt;/p&gt;

&lt;p&gt;Back in the Good Old Days (a period of time roughly co-extensive with the Lush
Growth Age of &lt;a class="cow-url" href="http://en.wikipedia.org/wiki/Eben_Upton"&gt;Eben Upton&lt;/a&gt;'s
tonsorial offering) there were hackable devices of an affordable nature (think
BBC Micro, ZX Spectum and the like). Fast forward to the tennies and the home
computers of today are either expensive machines that no one wants the rugrats
to hack at, or games machines which the industry wastes billions on locking
down so tightly that only an experienced hacker can get inside.&lt;/p&gt;

&lt;p&gt;One of the main aims of &lt;a class="cow-url" href="http://www.raspberrypi.org/about"&gt;the Pi's
inventors&lt;/a&gt; was to get back to a situation where kids can get their hands on a
cheap, open platform that they can take control of, write code on, and
generally be creative with, while learning to intervene in the digital world
as more than just a consumer. (If all these skills migrate into mega-corp
multinationals, the UK's computer science and engineering base &amp;mdash; not to
mention your ordinary citizen &amp;mdash; stands less and less chance of joining the
magic circles that dictate our technological futures.)&lt;/p&gt;

&lt;p&gt;The fact that I'm writing this now, that new businesses like
&lt;a class="cow-url" href="http://shop.pimoroni.com/"&gt;PiMoroni&lt;/a&gt; exist, and that there are more than 1
million Raspberry Pis in the world demonstrates the wide currency of the idea.
Even the UK government has woken up and taken notice! The UK's school
curriculum for computing and IT is now in ferment, and with luck there will be
a whole new ethos coming to &lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/schools.html"&gt;schools computing&lt;/a&gt; not too
long from now.&lt;/p&gt;



&lt;p&gt;&lt;b&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/schools.html"&gt;Read the main article&lt;/a&gt;.&lt;/b&gt;&lt;/p&gt;
</summary><category term="schools"></category><category term="education"></category><category term="pi"></category><category term="raspberrypi"></category><category term="gate"></category></entry><entry><title>Feed me Seymour</title><link href="http://pi.gate.ac.uk/posts/2013/05/16/feed-me-seymour/" rel="alternate"></link><updated>2013-05-16T00:00:00+01:00</updated><author><name>Hamish Cunningham</name></author><id>tag:pi.gate.ac.uk,2013-05-16:posts/2013/05/16/feed-me-seymour/</id><summary type="html">

&lt;p&gt;What would happen if your vacuum cleaner developed a mind of its own? Have you
always treated it kindly, and with respect? Or did you make it suck up stuff
that it really probably would have been happier stearing clear of?&lt;/p&gt;

&lt;p&gt;If Pete's &lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/piroomba.html"&gt;talking hoover&lt;/a&gt; project goes all AI on us, we might
find out a little more about the thoughts of our cleaning appliances than
anyone is ready for.&lt;/p&gt;



&lt;p&gt;&lt;b&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/piroomba.html"&gt;Read the main article&lt;/a&gt;.&lt;/b&gt;&lt;/p&gt;
</summary><category term="hardware"></category><category term="gpio"></category><category term="pi-tronics"></category><category term="roomba"></category><category term="pi"></category><category term="raspberrypi"></category><category term="gate"></category></entry><entry><title>Sensing and Responding</title><link href="http://pi.gate.ac.uk/posts/2013/04/11/sensing-and-responding/" rel="alternate"></link><updated>2013-04-11T00:00:00+01:00</updated><author><name>Hamish Cunningham</name></author><id>tag:pi.gate.ac.uk,2013-04-11:posts/2013/04/11/sensing-and-responding/</id><summary type="html">

&lt;p&gt;First things first: to begin learning about hacking electronics with the Pi, a
good first step is to get the little beast to start interacting with the
outside world &amp;mdash; lighting LEDs, responding to switches of various types,
making alerts via Twitter or SMS.&lt;/p&gt;

&lt;p&gt;We've made this &lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/basics.html"&gt;tutorial on the basics&lt;/a&gt; of sensing and
responsing with the Pi, including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/basics.html#parent-alarm"&gt;a parent alarm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/basics.html#flood-alarm"&gt;a flood alert&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/basics.html#resources"&gt;where to find out more&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Getting busy with a breadboard and a few simple components is a great way to
get kids interested in the potential of the device (in ways that just
introducing them to Scratch or Python may not). For example, when I gave a Pi
to my niece (who's in her early teens) she was politely interested, but no
more than that. She has already done some Scratch programming at school, and
regularly uses a PC, a Kindle and a Blackberry. The Pi is just another
computer for her &amp;mdash; and rather a slow one, at that. &lt;/p&gt;

&lt;p&gt;I've had similar experiences with several other people. For those who are
lucky enough to have lots of access to computers already, the fact that the Pi
delivers a magical amount of oomph for such a cheap package is not enough to
really spark their interest.&lt;/p&gt;

&lt;p&gt;To try and make things more interesting, we've started some tutorial materials
that hook up simple electronics to do things like warning you if your parent
is coming up the stairs, or sending you an SMS if the bathroom is flooded, and
the like. The first few projects are all about &lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/basics.html"&gt;sensing
and responding&lt;/a&gt;: getting the Pi to interact with the outside world. All you'll
need is a basic electronics kit (breadboard, resistors, LEDs, switches, a
transistor or two, a buzzer, ...), some spare time and, preferably, no
&lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/basics.html#warning"&gt;allergy to nerds&lt;/a&gt;.&lt;/p&gt;



&lt;p&gt;&lt;b&gt;&lt;a class="cow-url" href="http://pi.gate.ac.uk/pages/basics.html"&gt;Read the main article&lt;/a&gt;.&lt;/b&gt;&lt;/p&gt;
</summary><category term="hardware"></category><category term="gpio"></category><category term="pi-tronics"></category><category term="pi"></category><category term="raspberrypi"></category><category term="gate"></category></entry></feed>