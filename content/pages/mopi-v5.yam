MoPi: Version 5

_Hot-swap Mobile Power for the Pi_
%meta(summary=Hot-swap Mobile Power for the Pi)

%1* \*\*\*\* Please don't link or distribute this page \*\*\*\*

_%(http://pi.gate.ac.uk/pages/about.html#hamish, Hamish Cunningham)
August 2014--..._

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%contents

%(images/mopi/logo-heli-1.png,
%image(images/mopi/logo-heli-1-200x150.png, MoPi Heli Logo, 200, 150))

This page discusses use cases and candidate requirements for MoPi Version 5,
which is intended to be a retail version (or versions -- we will probably move
to several different models at this point).


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%1 Use Cases

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%2 Laptop, UPS

Two very common uses to which our backers wish to put MoPi are:

- laptop-style devices (including tablets, portable music players and the
  like)
- UPS devices (catering for intermittent power disruption)

A UPS and the power subsystem of a laptop actually behave in very similar ways
-- when there is external power it is used to both power the device and charge
the internal batteries; when the power drops the batteries take over. (If
there is a difference between the two, it is that for a laptop fast charging
is an advantage, whereas for a UPS this doesn't matter too much.)

For laptops in particular a reasonably accurate estimate of remaining battery
life is required. Hot swap of batteries is also an advantage.

Implications:

- we can only support these use cases with a defined battery configurations,
  and not one that requires external charging (which rules out the 8x NiMH
  configuration)
- we should support several configurations of different weight -- a user may
  want to power a whole laptop rig and have plenty of space for heavy
  batteries, or just power a Model A+ with a small LCD and a few buttons on it
  for a music player, for example)


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%2 Wireless Power

This is a somewhat artificial use case, which is more technology push than
user pull, but it seems likely that wireless charging will become widespread
(you can already use it in some big restaurant chains in some countries, and
IKEA is rumoured to be building slots for charger coils into new furniture
designs).

In addition Würth Electronics (under contract from TI) are keen to see
development of 3rd-party boards incorporating their coils.

The main choice here is between

- an integrated board that combines both circuitry from MoPi and from the
  Würth
- a composite device that includes two MoPi and a 3rd-party client-side coil
  as separate circuits 

In the latter case we need to support 5V input; in the former we have quite a
difficult integration task due to the sophistication of the components on the
Würth example board (which is a 4-layer board with microscopic components!).


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%1 Implementation Notes

In some cases we will need to define the battery set. We have a choice of
NiMH, Lead Acid (for UPS or solar devices) and LiPo.

Several use cases will be easier to cater for if we put a micro USB on MoPi
and mandate the connection of mains supplies there. We might even support
options like solar and wireless like this (as there are solar rigs available
now with 5V regulators built in, or we might sell a simple 5V regulator for
the 18V panels).


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%1 Candidate Requirements

*All Pi models.* Support the Compute Module. Improve support for the B+ by
avoiding resting on C1. Continue to support the Models A and B. This means:

- 2A max output. (The B+ will supply close to 2A over its USB connections, and
  also requires power for other components.)
- More flexible / lower cost GPIO connection. We need only 6 pins now, and
  might use a small low-profile connector coupled with an optional "bus board"
  to allow stacking of additional boards as required (with versions for both
  A/B and B+). For better ground connectivity we might also go with 10 pins.
- For the compute module we should copy the open developer host board and add
  MoPi functionality to it.
- Switch and LED's to be side-facing (to support both A/B and B+).

*5V input.* If we support 5V input then we can support wireless charging, and
more battery pack configurations. If we support input voltages down to 3.7V we
can support single LiPo sources.

*Charging.* A common user requirement is charging, usually for applications
involving one or more of:

- uninterruptible power
- solar power
- laptop-style operation

In each case there is a mains-derived or solar-derived input (often 5V but
also up to e.g. 18V) which comes and goes. When present it should trickle
charge the batteries; when absent batteries should be used to power the Pi in
the normal way.

*Which batteries?!* We've worked hard to support many different types of
battery and non-battery as viable input supplies. We can't do this for
charging though -- we should pick whatever configuration makes best sense and
support only that. (E.g. multiples of 4 NiMH, or lead acid, or some
pre-packaged LiPo.)

*Wireless power.* This technology will likely be huge -- IKEA are reported to
be building slots into furniture to take the devices, and McDonalds
incorporate coils in their restaurants in several countries. If we support 5V
input then a wireless powered MoPi should be straightforward?

*Incremental improvements.*

- Remoting pads (with holes) for switch and LEDs.
- When a current-limited input is attached and results in <5V out of the
  regulator (e.g. solar panels during cloudy spells), the microcontroller
  should refuse to power the Pi. (Otherwise we can see situations where MoPi
  tries to supply 5V, fails, and ends up sending an inadequate supply to the
  Pi.) So the input LEDs (and status sensing) should respond to current, as
  well as voltage.
- Add a halt script after fs unmount in rc0.d to ping MoPi and say "halt now".
  (Halt after 45 secs anyhow if the ping doesn't come.)
- Add a boot complete signal from simbamond to MoPi. The 60 second power-on
  delay is too conservative. Let's remove it.
- The 3.3V feed on the Pi should be used to power the microcontroller to
  maintain consistent power to MoPi when in UPS-type configurations.
- It is quite frequent to get a blinking source amber LED when there is no
  power on a particular source (even with no power connected at all).

*Nice to have...*

- In-situ firmware re-flash. (Probably too expensive.)
- Persistent config data. (Probably too expensive. Also risky when the
  microcontroller can get into inconsistent states.)


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%1 Versions

MoPi has been through four versions so far:

# the initial %(images/mopi/thumbs/prototype-regulator-05.jpg, prototype)
  (with separate regulator and controller boards)
# the almost-fits-in-a-pibow
  %(images/mopi/proto2-01.jpg, prototype)
# the pre-production Kickstater 
  %(images/mopi/closeups/1.jpg, prototype)
# the Kickstarter
  %(images/mopi/closeups/2.jpg, delivery board)

Version 4. is a production quality board, and is available via the
%(http://pi.gate.ac.uk/pages/get-mopi.html, pre-order page).

MoPi Version 5 will be a retail version (or versions -- we will probably move
to several different models at this point).
